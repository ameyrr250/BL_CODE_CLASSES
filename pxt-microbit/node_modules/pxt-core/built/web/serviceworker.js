function initWebappServiceWorker(){var s="@relprefix@".replace("---","").replace(/^\//,""),n=-1===s.indexOf("/"),l="makecode;"+s+";@pxtRelId@",t="@cdnUrl@",e=["@targetUrl@/"+s,"@simUrl@","/blb/semantic.js","/blb/main.js","/blb/pxtapp.js","/blb/typescript.js","/blb/marked/marked.min.js","/blb/highlight.js/highlight.pack.js","/blb/jquery.js","/blb/pxtlib.js","/blb/pxtcompiler.js","/blb/pxtpy.js","/blb/pxtblockly.js","/blb/pxtwinrt.js","/blb/pxteditor.js","/blb/pxtsim.js","/blb/pxtembed.js","/blb/pxtworker.js","/blb/pxtweb.js","/blb/blockly.css","/blb/semantic.css","/blb/rtlsemantic.css","/cdn/blockly/media/sprites.png","/cdn/blockly/media/click.mp3","/cdn/blockly/media/disconnect.wav","/cdn/blockly/media/delete.mp3","/blb/vs/loader.js","/blb/vs/base/worker/workerMain.js","/blb/vs/basic-languages/bat/bat.js","/blb/vs/basic-languages/cpp/cpp.js","/blb/vs/basic-languages/python/python.js","/blb/vs/basic-languages/markdown/markdown.js","/blb/vs/editor/editor.main.css","/blb/vs/editor/editor.main.js","/blb/vs/editor/editor.main.nls.js","/blb/vs/language/json/jsonMode.js","/blb/vs/language/json/jsonWorker.js","/blb/smoothie/smoothie_compressed.js","/blb/images/Bars_black.gif","/blb/gifjs/gif.js","/blb/ai.0.js","/blb/target.js","@targetFieldEditorsJs@","@targetEditorJs@","@defaultLocaleStrings@","@targetUrl@@monacoworkerjs@","@targetUrl@@workerjs@"],r=b("@cachedHexFilesEncoded@"),i=b("@targetImagesEncoded@"),o=a(e.concat(i).map(function(e){return e.trim()}).filter(function(e){return!!e&&0!==e.indexOf("@")})),c=!1;function a(e){for(var n=[],t=0,s=e;t<s.length;t++){var l=s[t];-1===n.indexOf(l)&&n.push(l)}return n}function b(e){return a(e.split(";").map(function(e){return decodeURIComponent(e).replace("@cdnUrl@",t).trim()}))}self.addEventListener("install",function(e){n?(c=!0,console.log("Installing service worker..."),e.waitUntil(caches.open(l).then(function(e){return console.log("Opened cache"),console.log("Caching:\n"+o.join("\n")),e.addAll(o).then(function(){return e})}).then(function(e){return e.addAll(r).catch(function(e){console.log("Failed to cache hexfiles")})}).then(function(){return self.skipWaiting()}))):console.log("Skipping service worker install for unnamed endpoint")}),self.addEventListener("activate",function(e){n?(console.log("Activating service worker..."),e.waitUntil(caches.keys().then(function(e){var n=e.filter(function(e){var n,t=3!==(n=e.split(";")).length?null:n[1];return null===t||t===s&&e!==l});return Promise.all(n.map(function(e){return caches.delete(e)}))}).then(function(){return c?(c=!1,(e=self).clients.claim().then(function(){return e.clients.matchAll()}).then(function(e){e.forEach(function(e){return e.postMessage({type:"serviceworker",state:"activated",ref:s})})})):Promise.resolve();var e}))):console.log("Skipping service worker activate for unnamed endpoint")}),self.addEventListener("fetch",function(n){n.respondWith(caches.match(n.request).then(function(e){return e||fetch(n.request)}))})}initWebappServiceWorker();