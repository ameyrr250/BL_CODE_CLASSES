// total=569311 new=94.10% cached=0.00% other=5.90%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const bind = ectx.bind;
const leaveAccessor = ectx.leaveAccessor;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("azureiot");
pxsim.setConfigData({}, {});
pxtrt.mapKeyNames = [
 "",
 "_buffer",
 "_busy",
 "_closeHandler",
 "_closed",
 "_controller",
 "_cs",
 "_errorHandler",
 "_gpio0",
 "_locked",
 "_messageHandler",
 "_openHandler",
 "_reset",
 "_sendCommand",
 "_socknum",
 "_socknum_ll",
 "_spi",
 "_timeout",
 "_waitResponseCmd",
 "buf",
 "cancel",
 "checkData",
 "checkKw",
 "clientId",
 "close",
 "condition",
 "connect",
 "connectAP",
 "connected",
 "conntype",
 "content",
 "controller",
 "createSocket",
 "currIndent",
 "delay",
 "deltaTimeMillis",
 "describe",
 "disconnect",
 "displayedValue",
 "doArray",
 "doNumber",
 "doObject",
 "doString",
 "eid",
 "emit",
 "encryption",
 "error",
 "errorMsg",
 "factory",
 "flags",
 "frameCallbacks",
 "frameWorker",
 "framesInSample",
 "func",
 "getScanNetworks",
 "go",
 "handleMessage",
 "handler",
 "handlers",
 "host",
 "hostbyName",
 "id",
 "idleCallbacks",
 "indent",
 "indentStep",
 "isConnected",
 "key",
 "lock",
 "log",
 "logPriority",
 "message",
 "mode",
 "mqttHandlers",
 "net",
 "nextChar",
 "on",
 "onClose",
 "onError",
 "onMessage",
 "onOpen",
 "once",
 "opt",
 "password",
 "piId",
 "pid",
 "ping",
 "port",
 "prevTimeMillis",
 "ptr",
 "publish",
 "qos",
 "read",
 "readByte",
 "readSecret",
 "readSecrets",
 "register",
 "registerHandler",
 "reset",
 "retain",
 "rssi",
 "runningCallbacks",
 "s",
 "scanNetworks",
 "sct",
 "send",
 "sendCommandGetResponse",
 "setTimeout",
 "skipWS",
 "socket",
 "socketAvailable",
 "socketClose",
 "socketConnect",
 "socketOpen",
 "socketRead",
 "socketStatus",
 "socketWrite",
 "socket_connected",
 "spiTransfer",
 "src",
 "ssid",
 "start",
 "startScanNetworks",
 "status",
 "subscribe",
 "timeInSample",
 "timeOut",
 "topic",
 "type",
 "unlock",
 "username",
 "value",
 "vid",
 "waitForReady",
 "waitSPIChar",
 "wasConnected",
 "wdId",
 "wifiSetNetwork",
 "wifiSetPassphrase",
 "will",
 "work"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P164859(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    globals._intervals___165088 = (undefined);
    globals._pollEventQueue___165101 = (undefined);
    globals.minPriority___165107 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, inline__P165108);
    globals.listeners___165109 = (s.tmp_0);
    globals.RUN_KEY___165272 = ("#run");
    globals.SCOPE_KEY___165273 = ("#scope");
    globals.DEVICE_SECRETS_KEY___165274 = ("#secrets");
    globals.SECRETS_KEY___165275 = ("__secrets");
    s.tmp_0 = settings_initScopes__P165285_mk(s);
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(settings_SecretStore__C165302_VT);
    s.tmp_0 = r0;
    s.tmp_1 = settings_SecretStore_constructor__P165308_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.DEVICE_SECRETS_KEY___165274;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    globals.deviceSecrets___165310 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(settings_SecretStore__C165302_VT);
    s.tmp_0 = r0;
    s.tmp_1 = settings_SecretStore_constructor__P165308_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SECRETS_KEY___165275;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    globals.programSecrets___165312 = (s.tmp_0);
    globals.logPriority___165356 = (-1);
    globals.AP_SECRETS_KEY___165372 = ("wifi");
    r0 = pxsim_pxtcore_mkClassInstance(net_Net__C165364_VT);
    s.tmp_0 = r0;
    s.tmp_1 = net_Net_constructor__P165369_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = esp32_defaultController__P165398;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    globals.SECRETS_KEY___165618 = ("azureiot");
    globals.logPriority___165621 = (4);
    s.tmp_0 = test__P165642_mk(s);
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P164859.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"test.ts","functionName":"<main>","argumentNames":[]}
_main___P164859.continuations = [  ]

function _main___P164859_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P164859, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function test__P165642(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.log___165644 = undefined;
    s.esp___165646 = undefined;
    s.log___165644 = (console_log__P165114);
    s.tmp_0 = net_Net_controller__P165365_mk(s);
    r0 = globals.net_Net_instance___165370;
    s.tmp_0.arg0 = r0;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.esp___165646 = (r0);
    s.tmp_3 = if_connect_1_mk(s);
    s.tmp_3.arg0 = s.esp___165646;
    if (!s.tmp_3.arg0.vtable.iface) {
      setupLambda(s.tmp_3, pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "connect"), 1);
      s.pc = 5; return s.tmp_3;
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["connect"];
      if (s.tmp_3.fn == null) { setupLambda(s.tmp_3, s.tmp_3.arg0.fields["connect"], 1); s.pc = 5; return s.tmp_3; }
      else if (s.tmp_3.fn.isGetter) { s.tmp_3.stage2Call = true; s.pc = 5; return s.tmp_3;; }
     else { s.pc = 5; return s.tmp_3; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = lambda_2_mk(s);
    s.tmp_4.argL = s.log___165644;
    s.tmp_4.arg0 = "can't connect";
    setupLambda(s.tmp_4, s.tmp_4.argL);
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.log___165644;
    s.tmp_3 = if_ping_2_mk(s);
    s.tmp_3.arg0 = s.esp___165646;
    s.tmp_3.arg1 = "bing.com";
    if (!s.tmp_3.arg0.vtable.iface) {
      setupLambda(s.tmp_3, pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "ping"), 2);
      s.pc = 8; return s.tmp_3;
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["ping"];
      if (s.tmp_3.fn == null) { setupLambda(s.tmp_3, s.tmp_3.arg0.fields["ping"], 2); s.pc = 8; return s.tmp_3; }
      else if (s.tmp_3.fn.isGetter) { s.tmp_3.stage2Call = true; s.pc = 8; return s.tmp_3;; }
     else { s.pc = 8; return s.tmp_3; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("ping: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = azureiot_connect__P165633_mk(s);
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.log___165644;
    s.tmp_0.arg0 = "mqtt connected";
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P165668);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.log___165644);
    s.tmp_1 = azureiot_onMessageReceived__P165637_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P165680);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.log___165644);
    s.tmp_1 = azureiot_onMethod__P165641_mk(s);
    s.tmp_1.arg0 = "echo";
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
test__P165642.info = {"start":0,"length":488,"line":0,"column":0,"endLine":24,"endColumn":1,"fileName":"test.ts","functionName":"test","argumentNames":[]}

function test__P165642_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: test__P165642, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  log___165644: undefined,
  esp___165646: undefined,
} }





function inline__P165668(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.caps[0];
    s.tmp_3 = JSON_stringify__P165133_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = null;
    s.tmp_3.arg2 = 0;
    s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("MSG:", s.tmp_1);
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P165668.info = {"start":294,"length":58,"line":15,"column":31,"endLine":17,"endColumn":5,"fileName":"test.ts","functionName":"inline","argumentNames":["msg"]}

function inline__P165668_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P165668, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P165680(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.caps[0];
    s.tmp_3 = if_displayedValue_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "displayedValue");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["displayedValue"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["displayedValue"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.pc = 2; return s.tmp_3; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("ECHO ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = if_type_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "echo";
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "type", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/type"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["type"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.pc = 4; return s.tmp_0; }
    }
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mkMap();
    return leave(s, r0)
  default: oops()
} } }
inline__P165680.info = {"start":385,"length":100,"line":19,"column":30,"endLine":23,"endColumn":5,"fileName":"test.ts","functionName":"inline","argumentNames":["msg"]}

function inline__P165680_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P165680, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function azureiot_onMethod__P165641(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___165696 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = azureiot_mqttClient__P165627_mk(s);
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.c___165696 = (r0);
    r0 = pxsim_numops_toBoolDecr(globals._methodHandlers___165625);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.c___165696.fields["connected"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.tmp_5 = control_fail__P165074_mk(s);
    s.tmp_5.arg0 = "not connected";
    s.pc = 6; return s.tmp_5;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    globals._methodHandlers___165625 = (r0);
    s.tmp_0 = mqtt_Client_subscribe__P165613_mk(s);
    s.tmp_0.arg0 = s.c___165696;
    s.tmp_0.arg1 = "$iothub/methods/POST/#";
    s.tmp_0.arg2 = azureiot_handleMethod__P165640;
    s.tmp_0.arg3 = 0;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = pxsim_pxtrt.mapSetGeneric(globals._methodHandlers___165625, s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
azureiot_onMethod__P165641.info = {"start":6338,"length":375,"line":200,"column":4,"endLine":209,"endColumn":5,"fileName":"azureiot.ts","functionName":"onMethod","argumentNames":["methodName","handler"]}

function azureiot_onMethod__P165641_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_onMethod__P165641, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  c___165696: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function azureiot_handleMethod__P165640(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.props___165717 = undefined;
    s.qidx___165723 = undefined;
    s.methodName___165731 = undefined;
    s.status___165754 = undefined;
    s.resp___165755 = undefined;
    s.h___165771 = undefined;
    s.resp2___165775 = undefined;
    s.c___165812 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = azureiot_parseTopicArgs__P165638_mk(s);
    s.tmp_1 = if_topic_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "topic");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["topic"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["topic"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 8; return s.tmp_1; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.props___165717 = (r0);
    s.tmp_1 = if_topic_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "topic");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["topic"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["topic"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 9; return s.tmp_1; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String_.indexOf(s.tmp_0, "/?", undefined);
    s.qidx___165723 = (r0);
    s.tmp_0 = helpers_stringSlice__P164925_mk(s);
    s.tmp_1 = if_topic_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "topic");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["topic"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["topic"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 21;
    s.tmp_0.arg2 = s.qidx___165723;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.methodName___165731 = (r0);
    s.tmp_0 = azureiot_log__P165626_mk(s);
    if ((s.methodName___165731) && (s.methodName___165731).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.methodName___165731);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.methodName___165731) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("method: '", s.tmp_5);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "'; ");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_8 = JSON_stringify__P165133_mk(s);
    s.tmp_8.arg0 = s.props___165717;
    s.tmp_8.arg1 = null;
    s.tmp_8.arg2 = 0;
    s.pc = 16; return s.tmp_8;
  case 16:
    r0 = s.retval;
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg0 = r0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.status___165754 = (200);
    r0 = pxsim_pxtrt.mkMap();
    s.resp___165755 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(globals._methodHandlers___165625, s.methodName___165731);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = azureiot_log__P165626_mk(s);
    if ((s.methodName___165731) && (s.methodName___165731).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.methodName___165731);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.methodName___165731) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat("method not found: '", s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 20);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 20:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, "'");
    s.tmp_3.arg0 = r0;
    s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.status___165754 = (404);
    { step = 6; continue; }
  case 1:
    r0 = pxsim_pxtrt.mapGetGeneric(globals._methodHandlers___165625, s.methodName___165731);
    s.h___165771 = (r0);
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.h___165771;
    s.tmp_1 = JSON_parse__P165134_mk(s);
    s.tmp_3 = if_content_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "content");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["content"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["content"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.pc = 23; return s.tmp_3; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.toString(s.tmp_2);
    s.tmp_1.arg0 = r0;
    s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.resp2___165775 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.resp2___165775);
    if (!r0) { step = 2; continue; }
    s.resp___165755 = (s.resp2___165775);
  case 2:
  case 3:
    r0 = pxsim_pxtrt.mapGetGeneric(s.resp___165755, "_status");
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_pxtrt.mapGetGeneric(s.resp___165755, "_status");
    s.status___165754 = (r0);
    r0 = pxsim_pxtrt.mapSetGeneric(s.resp___165755, "_status", null);
  case 4:
  case 5:
    s.tmp_0 = azureiot_log__P165626_mk(s);
    if ((s.methodName___165731) && (s.methodName___165731).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.methodName___165731);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.methodName___165731) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("method: '", s.tmp_5);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "' status=");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    if ((s.status___165754) && (s.status___165754).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.status___165754);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.status___165754) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg0 = r0;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
  case 6:
    s.tmp_0 = azureiot_mqttClient__P165627_mk(s);
    s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.c___165812 = (r0);
    s.tmp_0 = mqtt_Client_publish__P165612_mk(s);
    s.tmp_0.arg0 = s.c___165812;
    if ((s.status___165754) && (s.status___165754).vtable) {
    setupResume(s, 31);
    pxsim_String__stringConv(s.status___165754);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.status___165754) + ""; }
  case 31:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("$iothub/methods/res/", s.tmp_5);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 32);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 32:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "/?$rid=");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.props___165717, "$rid");
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 34);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 34:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg1 = r0;
    s.tmp_8 = JSON_stringify__P165133_mk(s);
    s.tmp_8.arg0 = s.resp___165755;
    s.tmp_8.arg1 = null;
    s.tmp_8.arg2 = 0;
    s.pc = 35; return s.tmp_8;
  case 35:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = false;
    s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
azureiot_handleMethod__P165640.info = {"start":5359,"length":973,"line":174,"column":4,"endLine":198,"endColumn":5,"fileName":"azureiot.ts","functionName":"handleMethod","argumentNames":["msg"]}

function azureiot_handleMethod__P165640_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_handleMethod__P165640, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  props___165717: undefined,
  qidx___165723: undefined,
  methodName___165731: undefined,
  status___165754: undefined,
  resp___165755: undefined,
  h___165771: undefined,
  resp2___165775: undefined,
  c___165812: undefined,
  arg0: undefined,
} }





function mqtt_Client_publish__P165612(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___165839 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    r0 = pxsim_pxtcore.typeOf(s.arg2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.control.createBufferFromUTF8(s.arg2);
    { step = 2; continue; }
  case 1:
    r0 = s.arg2;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.buf___165839 = (s.tmp_2);
    s.tmp_0 = mqtt_Client_send__P165614_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = mqtt_Protocol_createPublish__P165596_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = s.buf___165839;
    s.tmp_1.arg2 = s.arg3;
    s.tmp_1.arg3 = s.arg4;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_publish__P165612.info = {"start":13567,"length":312,"line":421,"column":8,"endLine":424,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"publish","argumentNames":["this","topic","message","qos","retained"]}

function mqtt_Client_publish__P165612_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_publish__P165612, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___165839: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function mqtt_Protocol_createPublish__P165596(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.byte1___165858 = undefined;
    s.pid___165871 = undefined;
    s.variable___165878 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg2 << 1);
    s.tmp_0 = r0;
    r0 = (48 | s.tmp_0);
    s.byte1___165858 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.byte1___165858 | s.tmp_0);
    s.byte1___165858 = (r0);
    s.tmp_0 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_1 = mqtt_Protocol_getBytes__P165591_mk(s);
    s.tmp_1.arg0 = 1;
    s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.pid___165871 = (r0);
    r0 = (s.arg2 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_3 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.pid___165871;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.variable___165878 = (s.tmp_4);
    s.tmp_0 = mqtt_Protocol_createPacket__P165593_mk(s);
    s.tmp_0.arg0 = s.byte1___165858;
    s.tmp_0.arg1 = s.variable___165878;
    s.tmp_0.arg2 = s.arg1;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createPublish__P165596.info = {"start":6502,"length":433,"line":213,"column":8,"endLine":221,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createPublish","argumentNames":["topic","message","qos","retained"]}

function mqtt_Protocol_createPublish__P165596_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createPublish__P165596, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  byte1___165858: undefined,
  pid___165871: undefined,
  variable___165878: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function mqtt_Protocol_createPacket__P165593(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.byte2___165902 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg2 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.control.createBuffer(0);
    s.arg2 = (r0);
  case 1:
  case 2:
    s.tmp_0 = mqtt_Protocol_encodeRemainingLength__P165589_mk(s);
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.length(s.arg2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.byte2___165902 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg0);
    s.tmp_1 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_3 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_4 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_4.arg0 = s.tmp_0;
    s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.tmp_5 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_5.arg0 = s.byte2___165902;
    s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg1;
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createPacket__P165593.info = {"start":4470,"length":394,"line":157,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createPacket","argumentNames":["byte1","variable","payload"]}

function mqtt_Protocol_createPacket__P165593_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createPacket__P165593, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  byte2___165902: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function mqtt_Protocol_encodeRemainingLength__P165589(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.length___165922 = undefined;
    s.encBytes___165924 = undefined;
    s.encByte___165927 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.length___165922 = (s.arg0);
    r0 = pxsim_Array__mk();
    s.encBytes___165924 = (r0);
  case 1:
    r0 = (s.length___165922 & 127);
    s.encByte___165927 = (r0);
    r0 = (s.length___165922 >> 7);
    s.length___165922 = (r0);
    r0 = (s.length___165922 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = (s.encByte___165927 + 128);
    s.encByte___165927 = (r0);
  case 2:
  case 3:
    r0 = pxsim_Array__push(s.encBytes___165924, s.encByte___165927);
    r0 = (s.length___165922 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    { step = 1; continue; }
  case 4:
    r0 = s.encBytes___165924;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_encodeRemainingLength__P165589.info = {"start":2539,"length":551,"line":104,"column":8,"endLine":118,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"encodeRemainingLength","argumentNames":["remainingLength"]}

function mqtt_Protocol_encodeRemainingLength__P165589_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_encodeRemainingLength__P165589, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  length___165922: undefined,
  encBytes___165924: undefined,
  encByte___165927: undefined,
  arg0: undefined,
} }





function helpers_bufferConcat__P164997(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___165949 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.r___165949 = (r0);
    r0 = pxsim.BufferMethods.write(s.r___165949, 0, s.arg0);
    s.tmp_0 = r0 = s.r___165949;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_0, s.tmp_1, s.arg1);
    r0 = s.r___165949;
    return leave(s, r0)
  default: oops()
} } }
helpers_bufferConcat__P164997.info = {"start":3785,"length":179,"line":132,"column":4,"endLine":137,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"bufferConcat","argumentNames":["a","b"]}

function helpers_bufferConcat__P164997_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_bufferConcat__P164997, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  r___165949: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function mqtt_Protocol_pack__P165592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___165970 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.createBufferFromUTF8(s.arg0);
    s.buf___165970 = (r0);
    s.tmp_0 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_1 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_2 = mqtt_Protocol_getBytes__P165591_mk(s);
    r0 = pxsim.BufferMethods.length(s.buf___165970);
    s.tmp_2.arg0 = r0;
    s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.buf___165970;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_pack__P165592.info = {"start":4135,"length":162,"line":148,"column":8,"endLine":151,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"pack","argumentNames":["s"]}

function mqtt_Protocol_pack__P165592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_pack__P165592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___165970: undefined,
  arg0: undefined,
} }





function mqtt_Protocol_getBytes__P165591(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = (s.arg0 >> 8);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = (s.arg0 & 255);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_getBytes__P165591.info = {"start":3855,"length":100,"line":140,"column":8,"endLine":142,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"getBytes","argumentNames":["int16"]}

function mqtt_Protocol_getBytes__P165591_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_getBytes__P165591, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function mqtt_Protocol_strChr__P165588(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = pins_createBufferFromArray__P164987_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_strChr__P165588.info = {"start":2273,"length":105,"line":96,"column":8,"endLine":98,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"strChr","argumentNames":["codes"]}

function mqtt_Protocol_strChr__P165588_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_strChr__P165588, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_createBufferFromArray__P164987(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Buffer_fromArray__P165009_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_createBufferFromArray__P164987.info = {"start":170,"length":101,"line":7,"column":4,"endLine":9,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"createBufferFromArray","argumentNames":["bytes"]}

function pins_createBufferFromArray__P164987_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_createBufferFromArray__P164987, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_fromArray__P165009(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___165993 = undefined;
    s.i___165999 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.buf___165993 = (r0);
    s.i___165999 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___165999;
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_3 = r0 = s.buf___165993;
    s.tmp_4 = r0 = s.i___165999;
    r0 = pxsim_Array__getAt(s.arg0, s.i___165999);
    s.tmp_5 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_4, s.tmp_5);
    r0 = (s.i___165999 + 1);
    s.i___165999 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.buf___165993;
    return leave(s, r0)
  default: oops()
} } }
Buffer_fromArray__P165009.info = {"start":8394,"length":192,"line":299,"column":4,"endLine":304,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"fromArray","argumentNames":["bytes"]}

function Buffer_fromArray__P165009_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_fromArray__P165009, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  buf___165993: undefined,
  i___165999: undefined,
  arg0: undefined,
} }





function mqtt_Client_send__P165614(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    r0 = s.arg0.fields["sct"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = mqtt_Client_log__P165608_mk(s);
    s.tmp_1.arg0 = s.arg0;
    r0 = pxsim.BufferMethods.getByte(s.arg1, 0);
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat("send: ", s.tmp_10);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, " / ");
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_12);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, " bytes: ");
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.toString(s.arg1);
    s.tmp_15 = r0;
    if ((s.tmp_15) && (s.tmp_15).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_15);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_15) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_14);
    s.tmp_1.arg1 = r0;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = if_send_2_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "send"), 2);
      s.pc = 11; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["send"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["send"], 2); s.pc = 11; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.pc = 11; return s.tmp_0;; }
     else { s.pc = 11; return s.tmp_0; }
    }
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_send__P165614.info = {"start":14399,"length":301,"line":437,"column":8,"endLine":443,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"send","argumentNames":["this","data"]}

function mqtt_Client_send__P165614_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_send__P165614, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function mqtt_Client_log__P165608(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    s.tmp_0 = console_add__P165110_mk(s);
    r0 = s.arg0.fields["logPriority"];
    s.tmp_0.arg0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("mqtt: ", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_log__P165608.info = {"start":9581,"length":95,"line":304,"column":8,"endLine":306,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"log","argumentNames":["this","msg"]}

function mqtt_Client_log__P165608_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_log__P165608, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_add__P165110(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.text___166065 = undefined;
    s.i___166074 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < globals.minPriority___165107);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_1 = console_inspect__P165116_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.text___166065 = (r0);
    if ((s.text___166065) && (s.text___166065).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.text___166065);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.text___166065) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.text___166065 = (r0);
    s.i___166074 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___166074;
    r0 = pxsim_Array__length(globals.listeners___165109);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___165109, s.i___166074);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.text___166065;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    r0 = (s.i___166074 + 1);
    s.i___166074 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P165110.info = {"start":632,"length":317,"line":28,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","message"]}

function console_add__P165110_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P165110, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___166065: undefined,
  i___166074: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P165108(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P165108.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function inline__P165108_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P165108, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect__P165116(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.asArr___166112 = undefined;
    s.asString___166132 = undefined;
    s.keys___166144 = undefined;
    s.snipped___166148 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.asArr___166112 = (s.arg0);
    r0 = pxsim_Array__length(s.asArr___166112);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = helpers_arrayJoin__P164909_mk(s);
    s.tmp_2.arg0 = s.asArr___166112;
    s.tmp_2.arg1 = ",";
    s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P164909_mk(s);
    s.tmp_8 = helpers_arraySlice__P164922_mk(s);
    s.tmp_8.arg0 = s.asArr___166112;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.pc = 21; return s.tmp_8;
  case 21:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___166132 = (r0);
    r0 = (s.asString___166132 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___166132 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = s.asString___166132;
    { step = 17; continue; }
  case 8:
  case 9:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___166144 = (r0);
    r0 = pxsim_Array__length(s.keys___166144);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___166148 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___166148);
    if (!r0) { step = 10; continue; }
    s.tmp_0 = helpers_arraySlice__P164922_mk(s);
    s.tmp_0.arg0 = s.keys___166144;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.keys___166144 = (r0);
  case 10:
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, inline__P166166);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___166148);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P164920_mk(s);
    s.tmp_7.arg0 = s.keys___166144;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.pc = 25; return s.tmp_7;
  case 25:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P165116.info = {"start":2223,"length":1190,"line":80,"column":4,"endLine":113,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P165116_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P165116, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___166112: undefined,
  asString___166132: undefined,
  keys___166144: undefined,
  snipped___166148: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P166166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
inline__P166166.info = {"start":3245,"length":61,"line":107,"column":20,"endLine":107,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function inline__P166166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P166166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayReduce__P164920(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___166193 = undefined;
    s.i___166196 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___166193 = (r0);
    s.i___166196 = (0);
  case 1:
    r0 = (s.i___166196 < s.len___166193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___166196);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___166196;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.arg2 = (r0);
    r0 = (s.i___166196 + 1);
    s.i___166196 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P164920.info = {"start":8316,"length":317,"line":280,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P164920_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P164920, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___166193: undefined,
  i___166196: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arraySlice__P164922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___166214 = undefined;
    s.len___166216 = undefined;
    s.i___166250 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___166214 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___166216 = (r0);
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_max__P164935_mk(s);
    r0 = (s.len___166216 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    r0 = (s.arg1 > s.len___166216);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.res___166214;
    { step = 15; continue; }
  case 5:
  case 6:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.arg2 = (s.len___166216);
    { step = 10; continue; }
  case 7:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = (s.len___166216 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    r0 = (s.arg2 > s.len___166216);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.arg2 = (s.len___166216);
  case 11:
  case 12:
    s.i___166250 = (s.arg1);
  case 13:
    r0 = (s.i___166250 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = r0 = s.res___166214;
    r0 = pxsim_Array__getAt(s.arg0, s.i___166250);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___166250 + 1);
    s.i___166250 = (r0);
    { step = 13; continue; }
  case 14:
    r0 = s.res___166214;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P164922.info = {"start":8909,"length":690,"line":299,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P164922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P164922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___166214: undefined,
  len___166216: undefined,
  i___166250: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_max__P164935(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P164935.info = {"start":15575,"length":105,"line":529,"column":4,"endLine":532,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P164935_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P164935, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayJoin__P164909(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___166282 = undefined;
    s.len___166283 = undefined;
    s.i___166286 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.arg1 = (",");
  case 3:
  case 4:
    r0 = pxsim_String_.mkEmpty();
    s.r___166282 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___166283 = (r0);
    s.i___166286 = (0);
  case 5:
    r0 = (s.i___166286 < s.len___166283);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = (s.i___166286 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    if ((s.r___166282) && (s.r___166282).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.r___166282);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___166282) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___166282 = (r0);
  case 8:
  case 9:
    r0 = pxsim_Array__getAt(s.arg0, s.i___166286);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___166286);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___166286);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___166282) && (s.r___166282).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.r___166282);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___166282) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___166282 = (r0);
    r0 = (s.i___166286 + 1);
    s.i___166286 = (r0);
    { step = 5; continue; }
  case 14:
    r0 = s.r___166282;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P164909.info = {"start":4133,"length":432,"line":157,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P164909_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P164909, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___166282: undefined,
  len___166283: undefined,
  i___166286: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_parse__P165134(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.p___166325 = undefined;
    s.r___166335 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(JSON_Parser__C165120_VT);
    s.p___166325 = (r0);
    r0 = (s.p___166325).fields["ptr"] = (0);
    r0 = (s.p___166325).fields["s"] = (s.arg0);
    s.tmp_0 = JSON_Parser_value__P165129_mk(s);
    s.tmp_0.arg0 = s.p___166325;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.r___166335 = (r0);
    s.tmp_1 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_1.arg0 = s.p___166325;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = JSON_Parser_error__P165121_mk(s);
    s.tmp_2.arg0 = s.p___166325;
    s.tmp_2.arg1 = "excessive input";
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = s.p___166325.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.p___166325.fields["errorMsg"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("Invalid JSON: ", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim.control.dmesg(s.tmp_1);
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.r___166335;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
JSON_parse__P165134.info = {"start":9325,"length":347,"line":307,"column":4,"endLine":320,"endColumn":5,"fileName":"pxt_modules/base/json.ts","functionName":"parse","argumentNames":["s"]}

function JSON_parse__P165134_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_parse__P165134, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  p___166325: undefined,
  r___166335: undefined,
  arg0: undefined,
} }





function JSON_Parser_error__P165121(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = r0 = s.arg0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_7, " at position ");
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["errorMsg"] = (s.tmp_4);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["s"];
    s.tmp_2 = r0;
    r0 = pxsim_String_.length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_error__P165121.info = {"start":1009,"length":184,"line":43,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"error","argumentNames":["this","msg"]}

function JSON_Parser_error__P165121_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_error__P165121, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_Parser_skipWS__P165122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___166381 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
  case 1:
    s.tmp_0 = JSON_Parser_nextChar__P165123_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.c___166381 = (r0);
    r0 = (s.c___166381 == 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.c___166381 == 10);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_1;
    { step = 5; continue; }
  case 4:
    r0 = (s.c___166381 == 13);
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___166381 == 9);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 8; continue; }
    { step = 9; continue; }
  case 8:
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["ptr"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["ptr"] = (s.tmp_5);
    r0 = s.c___166381;
    { step = 10; continue; }
  case 9:
    { step = 1; continue; }
    r0 = undefined;
  case 10:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_skipWS__P165122.info = {"start":1203,"length":301,"line":50,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"skipWS","argumentNames":["this"]}

function JSON_Parser_skipWS__P165122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_skipWS__P165122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  c___166381: undefined,
  arg0: undefined,
} }





function JSON_Parser_nextChar__P165123(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = s.arg0.fields["ptr"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["s"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["ptr"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["ptr"] = (s.tmp_5);
    r0 = s.arg0.fields["s"];
    s.tmp_7 = r0;
    r0 = pxsim_String_.charCodeAt(s.tmp_7, s.tmp_6);
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = 0;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_nextChar__P165123.info = {"start":1514,"length":138,"line":62,"column":8,"endLine":66,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"nextChar","argumentNames":["this"]}

function JSON_Parser_nextChar__P165123_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_nextChar__P165123, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function JSON_Parser_value__P165129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___166418 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 27; continue; }
  case 1:
  case 2:
    s.tmp_1 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.c___166418 = (r0);
    r0 = (s.c___166418 == 123);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = JSON_Parser_doObject__P165126_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 26; continue; }
  case 3:
    r0 = (s.c___166418 == 91);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = JSON_Parser_doArray__P165125_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 25; continue; }
  case 4:
    r0 = (48 <= s.c___166418);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_4;
    { step = 6; continue; }
  case 5:
    r0 = (s.c___166418 <= 57);
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_5;
    { step = 8; continue; }
  case 7:
    r0 = (s.c___166418 == 45);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    s.tmp_7 = JSON_Parser_doNumber__P165127_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.pc = 31; return s.tmp_7;
  case 31:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 24; continue; }
  case 9:
    r0 = (s.c___166418 == 34);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 10; continue; }
    s.tmp_9 = JSON_Parser_doString__P165124_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.pc = 32; return s.tmp_9;
  case 32:
    r0 = s.retval;
    { step = 27; continue; }
    { step = 23; continue; }
  case 10:
    r0 = (s.c___166418 == 116);
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_10;
    { step = 12; continue; }
  case 11:
    s.tmp_11 = JSON_Parser_checkKw__P165128_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.tmp_11.arg1 = "true";
    s.pc = 33; return s.tmp_11;
  case 33:
    r0 = s.retval;
  case 12:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 13; continue; }
    r0 = true;
    { step = 27; continue; }
    { step = 22; continue; }
  case 13:
    r0 = (s.c___166418 == 102);
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBool(s.tmp_13);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_13;
    { step = 15; continue; }
  case 14:
    s.tmp_14 = JSON_Parser_checkKw__P165128_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.tmp_14.arg1 = "false";
    s.pc = 34; return s.tmp_14;
  case 34:
    r0 = s.retval;
  case 15:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_15);
    if (!r0) { step = 16; continue; }
    r0 = false;
    { step = 27; continue; }
    { step = 21; continue; }
  case 16:
    r0 = (s.c___166418 == 110);
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBool(s.tmp_16);
    if (r0) { step = 17; continue; }
    r0 = s.tmp_16;
    { step = 18; continue; }
  case 17:
    s.tmp_17 = JSON_Parser_checkKw__P165128_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.tmp_17.arg1 = "null";
    s.pc = 35; return s.tmp_17;
  case 35:
    r0 = s.retval;
  case 18:
    // jmp value (already in r0)
    s.tmp_18 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_18);
    if (!r0) { step = 19; continue; }
    r0 = null;
    { step = 27; continue; }
  case 19:
  case 20:
  case 21:
  case 22:
  case 23:
  case 24:
  case 25:
  case 26:
    s.tmp_19 = JSON_Parser_error__P165121_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.tmp_19.arg1 = "unexpected token";
    s.pc = 36; return s.tmp_19;
  case 36:
    r0 = s.retval;
    r0 = null;
  case 27:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_value__P165129.info = {"start":4976,"length":743,"line":178,"column":8,"endLine":200,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"value","argumentNames":["this"]}

function JSON_Parser_value__P165129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_value__P165129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  c___166418: undefined,
  arg0: undefined,
} }





function JSON_Parser_checkKw__P165128(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    s.tmp_2 = helpers_stringSlice__P164925_mk(s);
    r0 = s.arg0.fields["s"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2.arg2 = r0;
    s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_5 = r0 = s.arg0;
    r0 = s.tmp_5.fields["ptr"];
    s.tmp_7 = r0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["ptr"] = (s.tmp_6);
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_checkKw__P165128.info = {"start":4764,"length":202,"line":170,"column":8,"endLine":176,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"checkKw","argumentNames":["this","k"]}

function JSON_Parser_checkKw__P165128_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_checkKw__P165128, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_Parser_doString__P165124(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___166478 = undefined;
    s.c___166483 = undefined;
    s.q___166498 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = pxsim_String_.mkEmpty();
    s.r___166478 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
    r0 = s.arg0.fields["s"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_2);
    s.c___166483 = (r0);
    r0 = (s.c___166483 == "\"");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.r___166478;
    { step = 16; continue; }
  case 2:
  case 3:
    r0 = (s.c___166483 == "\\");
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 14; continue; }
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["ptr"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["ptr"] = (s.tmp_3);
    r0 = s.arg0.fields["s"];
    s.tmp_5 = r0;
    r0 = pxsim_String_.charAt(s.tmp_5, s.tmp_4);
    s.q___166498 = (r0);
    r0 = (s.q___166498 == "b");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.q___166498 = ("\b");
    { step = 13; continue; }
  case 4:
    r0 = (s.q___166498 == "n");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.q___166498 = ("\n");
    { step = 12; continue; }
  case 5:
    r0 = (s.q___166498 == "r");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.q___166498 = ("\r");
    { step = 11; continue; }
  case 6:
    r0 = (s.q___166498 == "t");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.q___166498 = ("\t");
    { step = 10; continue; }
  case 7:
    r0 = (s.q___166498 == "u");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_2 = JSON_parseIntRadix__P165119_mk(s);
    s.tmp_3 = helpers_stringSlice__P164925_mk(s);
    r0 = s.arg0.fields["s"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_3.arg1 = r0;
    r0 = s.arg0.fields["ptr"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 4);
    s.tmp_3.arg2 = r0;
    s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 16;
    s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String_.fromCharCode(s.tmp_1);
    s.q___166498 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 8:
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
    if ((s.r___166478) && (s.r___166478).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.r___166478);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___166478) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.q___166498) && (s.q___166498).vtable) {
    setupResume(s, 20);
    pxsim_String__stringConv(s.q___166498);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.q___166498) + ""; }
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___166478 = (r0);
    { step = 15; continue; }
  case 14:
    if ((s.r___166478) && (s.r___166478).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.r___166478);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___166478) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.c___166483) && (s.c___166483).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.c___166483);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.c___166483) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___166478 = (r0);
  case 15:
    { step = 1; continue; }
    r0 = undefined;
  case 16:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doString__P165124.info = {"start":1662,"length":795,"line":68,"column":8,"endLine":90,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doString","argumentNames":["this"]}

function JSON_Parser_doString__P165124_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doString__P165124, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___166478: undefined,
  c___166483: undefined,
  q___166498: undefined,
  arg0: undefined,
} }





function JSON_parseIntRadix__P165119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.m___166562 = undefined;
    s.r___166563 = undefined;
    s.i___166564 = undefined;
    s.c___166570 = undefined;
    s.v___166595 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 == 10);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_String_.toNumber(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    { step = 36; continue; }
  case 3:
  case 4:
    s.m___166562 = (false);
    s.r___166563 = (0);
    s.i___166564 = (0);
  case 5:
    s.tmp_1 = r0 = s.i___166564;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___166564);
    s.c___166570 = (r0);
    r0 = (s.c___166570 == 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___166570 == 10);
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_1;
    { step = 9; continue; }
  case 8:
    r0 = (s.c___166570 == 13);
  case 9:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_2;
    { step = 11; continue; }
  case 10:
    r0 = (s.c___166570 == 9);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    { step = 32; continue; }
  case 12:
  case 13:
    r0 = (s.r___166563 == 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_4;
    { step = 15; continue; }
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.m___166562);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
  case 15:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_6;
    { step = 17; continue; }
  case 16:
    r0 = (s.c___166570 == 45);
  case 17:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 18; continue; }
    s.m___166562 = (true);
    { step = 32; continue; }
  case 18:
  case 19:
    s.v___166595 = (-1);
    r0 = (48 <= s.c___166570);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_0;
    { step = 21; continue; }
  case 20:
    r0 = (s.c___166570 <= 57);
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = (s.c___166570 - 48);
    s.v___166595 = (r0);
    { step = 27; continue; }
  case 22:
    r0 = (s.c___166570 | 32);
    s.c___166570 = (r0);
    r0 = (97 <= s.c___166570);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 23; continue; }
    r0 = s.tmp_0;
    { step = 24; continue; }
  case 23:
    r0 = (s.c___166570 <= 122);
  case 24:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 25; continue; }
    r0 = (s.c___166570 - 97);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 10);
    s.v___166595 = (r0);
  case 25:
  case 26:
  case 27:
    r0 = (0 <= s.v___166595);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 28; continue; }
    r0 = s.tmp_0;
    { step = 29; continue; }
  case 28:
    r0 = (s.v___166595 < s.arg1);
  case 29:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 30; continue; }
    r0 = (s.r___166563 * s.arg1);
    s.r___166563 = (r0);
    r0 = (s.r___166563 + s.v___166595);
    s.r___166563 = (r0);
    { step = 31; continue; }
  case 30:
    r0 = undefined;
    { step = 36; continue; }
  case 31:
  case 32:
    r0 = (s.i___166564 + 1);
    s.i___166564 = (r0);
    { step = 5; continue; }
  case 33:
    r0 = pxsim_numops_toBoolDecr(s.m___166562);
    if (!r0) { step = 34; continue; }
    r0 = (0 - s.r___166563);
    { step = 35; continue; }
  case 34:
    r0 = s.r___166563;
  case 35:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
  case 36:
    return leave(s, r0)
  default: oops()
} } }
JSON_parseIntRadix__P165119.info = {"start":21,"length":894,"line":1,"column":4,"endLine":35,"endColumn":5,"fileName":"pxt_modules/base/json.ts","functionName":"parseIntRadix","argumentNames":["s","base"]}

function JSON_parseIntRadix__P165119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_parseIntRadix__P165119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  m___166562: undefined,
  r___166563: undefined,
  i___166564: undefined,
  c___166570: undefined,
  v___166595: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_Parser_doNumber__P165127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.beg___166645 = undefined;
    s.c___166649 = undefined;
    s.ss___166677 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = s.arg0.fields["ptr"];
    s.beg___166645 = (r0);
  case 1:
    s.tmp_0 = JSON_Parser_nextChar__P165123_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.c___166649 = (r0);
    r0 = (48 <= s.c___166649);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.c___166649 <= 57);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_1;
    { step = 5; continue; }
  case 4:
    r0 = (s.c___166649 == 43);
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___166649 == 45);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 9; continue; }
  case 8:
    r0 = (s.c___166649 == 46);
  case 9:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_4;
    { step = 11; continue; }
  case 10:
    r0 = (s.c___166649 == 69);
  case 11:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 12; continue; }
    r0 = s.tmp_5;
    { step = 13; continue; }
  case 12:
    r0 = (s.c___166649 == 101);
  case 13:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 14; continue; }
    { step = 15; continue; }
  case 14:
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["ptr"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["ptr"] = (s.tmp_8);
    { step = 16; continue; }
  case 15:
    { step = 1; continue; }
  case 16:
    s.tmp_0 = helpers_stringSlice__P164925_mk(s);
    r0 = s.arg0.fields["s"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.beg___166645;
    r0 = s.arg0.fields["ptr"];
    s.tmp_0.arg2 = r0;
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.ss___166677 = (r0);
    r0 = pxsim_String_.length(s.ss___166677);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.tmp_2 = JSON_Parser_error__P165121_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = "expecting number";
    s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    r0 = 0;
    { step = 19; continue; }
  case 17:
  case 18:
    r0 = pxsim_String_.toNumber(s.ss___166677);
  case 19:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doNumber__P165127.info = {"start":4169,"length":585,"line":151,"column":8,"endLine":168,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doNumber","argumentNames":["this"]}

function JSON_Parser_doNumber__P165127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doNumber__P165127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  beg___166645: undefined,
  c___166649: undefined,
  ss___166677: undefined,
  arg0: undefined,
} }





function JSON_Parser_doArray__P165125(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___166693 = undefined;
    s.c___166699 = undefined;
    s.v___166707 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    s.r___166693 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
    s.tmp_0 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.c___166699 = (r0);
    r0 = (s.c___166699 == 93);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    r0 = s.r___166693;
    { step = 11; continue; }
  case 2:
  case 3:
    s.tmp_0 = JSON_Parser_value__P165129_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.v___166707 = (r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = null;
    { step = 11; continue; }
  case 4:
  case 5:
    r0 = pxsim_Array__push(s.r___166693, s.v___166707);
    s.tmp_0 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.c___166699 = (r0);
    r0 = (s.c___166699 == 44);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    { step = 10; continue; }
  case 6:
  case 7:
    r0 = (s.c___166699 == 93);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    { step = 10; continue; }
  case 8:
  case 9:
    s.tmp_1 = JSON_Parser_error__P165121_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "expecting comma";
    s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 10:
    { step = 1; continue; }
    r0 = undefined;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doArray__P165125.info = {"start":2467,"length":646,"line":92,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doArray","argumentNames":["this"]}

function JSON_Parser_doArray__P165125_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doArray__P165125, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  r___166693: undefined,
  c___166699: undefined,
  v___166707: undefined,
  arg0: undefined,
} }





function JSON_Parser_doObject__P165126(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___166728 = undefined;
    s.c___166734 = undefined;
    s.k___166746 = undefined;
    s.v___166758 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Parser__C165120_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mkMap();
    s.r___166728 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
  case 1:
    s.tmp_0 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.c___166734 = (r0);
    r0 = (s.c___166734 == 125);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    r0 = s.r___166728;
    { step = 15; continue; }
  case 2:
  case 3:
    r0 = (s.c___166734 != 34);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_1 = JSON_Parser_error__P165121_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "expecting key";
    s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = s.r___166728;
    { step = 15; continue; }
  case 4:
  case 5:
    s.tmp_0 = JSON_Parser_doString__P165124_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.k___166746 = (r0);
    s.tmp_0 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.c___166734 = (r0);
    r0 = (s.c___166734 != 58);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = JSON_Parser_error__P165121_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "expecting colon";
    s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = s.r___166728;
    { step = 15; continue; }
  case 6:
  case 7:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["ptr"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ptr"] = (s.tmp_1);
    s.tmp_0 = JSON_Parser_value__P165129_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.v___166758 = (r0);
    r0 = s.arg0.fields["errorMsg"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = null;
    { step = 15; continue; }
  case 8:
  case 9:
    r0 = pxsim_pxtrt.mapSetGeneric(s.r___166728, s.k___166746, s.v___166758);
    s.tmp_0 = JSON_Parser_skipWS__P165122_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.c___166734 = (r0);
    r0 = (s.c___166734 == 44);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["ptr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["ptr"] = (s.tmp_2);
    { step = 14; continue; }
  case 10:
  case 11:
    r0 = (s.c___166734 == 125);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    { step = 14; continue; }
  case 12:
  case 13:
    s.tmp_1 = JSON_Parser_error__P165121_mk(s);
    s.tmp_1.arg0 = s.arg0;
    r0 = pxsim_String_.fromCharCode(s.c___166734);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("expecting comma, got ", s.tmp_2);
    s.tmp_1.arg1 = r0;
    s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
  case 14:
    { step = 1; continue; }
    r0 = undefined;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
JSON_Parser_doObject__P165126.info = {"start":3123,"length":1036,"line":116,"column":8,"endLine":149,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doObject","argumentNames":["this"]}

function JSON_Parser_doObject__P165126_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Parser_doObject__P165126, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  r___166728: undefined,
  c___166734: undefined,
  k___166746: undefined,
  v___166758: undefined,
  arg0: undefined,
} }





function azureiot_log__P165626(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_add__P165110_mk(s);
    s.tmp_0.arg0 = globals.logPriority___165621;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("azureiot: ", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
azureiot_log__P165626.info = {"start":439,"length":87,"line":19,"column":4,"endLine":21,"endColumn":5,"fileName":"azureiot.ts","functionName":"log","argumentNames":["msg"]}

function azureiot_log__P165626_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_log__P165626, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function helpers_stringSlice__P164925(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___166796 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.length(s.arg0);
    s.len___166796 = (r0);
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = Math_max__P164935_mk(s);
    r0 = (s.len___166796 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = (s.arg2 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.arg2 = (s.len___166796);
  case 3:
  case 4:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (s.len___166796 + s.arg2);
    s.arg2 = (r0);
  case 5:
  case 6:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P164925.info = {"start":11047,"length":365,"line":373,"column":4,"endLine":389,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P164925_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P164925, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___166796: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function azureiot_parseTopicArgs__P165638(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.qidx___166826 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.indexOf(s.arg0, "?", undefined);
    s.qidx___166826 = (r0);
    r0 = (s.qidx___166826 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = azureiot_parsePropertyBag__P165630_mk(s);
    s.tmp_2 = helpers_stringSlice__P164925_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = (s.qidx___166826 + 1);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = undefined;
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
  case 3:
    return leave(s, r0)
  default: oops()
} } }
azureiot_parseTopicArgs__P165638.info = {"start":4921,"length":186,"line":160,"column":4,"endLine":165,"endColumn":5,"fileName":"azureiot.ts","functionName":"parseTopicArgs","argumentNames":["topic"]}

function azureiot_parseTopicArgs__P165638_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_parseTopicArgs__P165638, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  qidx___166826: undefined,
  arg0: undefined,
} }





function azureiot_parsePropertyBag__P165630(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___166844 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt.mkMap();
    s.r___166844 = (r0);
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = "&";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_pxtcore_mkAction(1, inline__P166859);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.r___166844);
    s.tmp_3 = helpers_arrayForEach__P164917_mk(s);
    s.tmp_4 = helpers_arrayMap__P164914_mk(s);
    s.tmp_5 = helpers_stringSplit__P164927_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.tmp_1;
    s.tmp_5.arg2 = undefined;
    s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = inline__P166855;
    s.pc = 4; return s.tmp_4;
  case 4:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_2;
    s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    r0 = s.r___166844;
    return leave(s, r0)
  default: oops()
} } }
azureiot_parsePropertyBag__P165630.info = {"start":2322,"length":243,"line":73,"column":4,"endLine":79,"endColumn":5,"fileName":"azureiot.ts","functionName":"parsePropertyBag","argumentNames":["msg","separator"]}

function azureiot_parsePropertyBag__P165630_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_parsePropertyBag__P165630, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___166844: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P166855(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = azureiot_splitPair__P165629_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
inline__P166855.info = {"start":2466,"length":19,"line":76,"column":17,"endLine":76,"endColumn":36,"fileName":"azureiot.ts","functionName":"inline","argumentNames":["kv"]}

function inline__P166855_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P166855, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function inline__P166859(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_Array__getAt(s.arg0, 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.arg0, 1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_0, s.tmp_1, s.tmp_2);
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
inline__P166859.info = {"start":2508,"length":31,"line":77,"column":21,"endLine":77,"endColumn":52,"fileName":"azureiot.ts","functionName":"inline","argumentNames":["parts"]}

function inline__P166859_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P166859, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function azureiot_splitPair__P165629(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.i___166867 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.indexOf(s.arg0, "=", undefined);
    s.i___166867 = (r0);
    r0 = (s.i___166867 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.arg0);
    r0 = pxsim_String_.mkEmpty();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = s.tmp_1;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_3 = r0;
    s.tmp_5 = helpers_stringSlice__P164925_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = 0;
    s.tmp_5.arg2 = s.i___166867;
    s.pc = 4; return s.tmp_5;
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    s.tmp_7 = helpers_stringSlice__P164925_mk(s);
    s.tmp_7.arg0 = s.arg0;
    r0 = (s.i___166867 + 1);
    s.tmp_7.arg1 = r0;
    s.tmp_7.arg2 = undefined;
    s.pc = 5; return s.tmp_7;
  case 5:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_6);
    r0 = s.tmp_3;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
azureiot_splitPair__P165629.info = {"start":2120,"length":196,"line":65,"column":4,"endLine":71,"endColumn":5,"fileName":"azureiot.ts","functionName":"splitPair","argumentNames":["kv"]}

function azureiot_splitPair__P165629_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_splitPair__P165629, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  i___166867: undefined,
  arg0: undefined,
} }





function helpers_stringSplit__P164927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.A___166889 = undefined;
    s.lim___166891 = undefined;
    s.s___166907 = undefined;
    s.p___166910 = undefined;
    s.R___166911 = undefined;
    s.z___166925 = undefined;
    s.T___166938 = undefined;
    s.q___166939 = undefined;
    s.e___166945 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.A___166889 = (r0);
    s.lim___166891 = (0);
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (536870912 - 1);
    s.lim___166891 = (r0);
    { step = 4; continue; }
  case 1:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lim___166891 = (0);
    { step = 3; continue; }
  case 2:
    r0 = (s.arg2 | 0);
    s.lim___166891 = (r0);
  case 3:
  case 4:
    r0 = pxsim_String_.length(s.arg0);
    s.s___166907 = (r0);
    s.p___166910 = (0);
    s.R___166911 = (s.arg1);
    r0 = (s.lim___166891 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.A___166889;
    { step = 21; continue; }
  case 5:
  case 6:
    r0 = (s.arg1 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array_.setAt(s.A___166889, 0, s.arg0);
    r0 = s.A___166889;
    { step = 21; continue; }
  case 7:
  case 8:
    r0 = (s.s___166907 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_1 = helpers_splitMatch__P164928_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = s.R___166911;
    s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.z___166925 = (r0);
    r0 = (s.z___166925 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.A___166889;
    { step = 21; continue; }
  case 9:
  case 10:
    r0 = pxsim_Array_.setAt(s.A___166889, 0, s.arg0);
    r0 = s.A___166889;
    { step = 21; continue; }
  case 11:
  case 12:
    s.q___166939 = (s.p___166910);
  case 13:
    r0 = (s.q___166939 != s.s___166907);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.tmp_1 = helpers_splitMatch__P164928_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.q___166939;
    s.tmp_1.arg2 = s.R___166911;
    s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.e___166945 = (r0);
    r0 = (s.e___166945 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = (s.q___166939 + 1);
    s.q___166939 = (r0);
    { step = 19; continue; }
  case 14:
    r0 = (s.e___166945 == s.p___166910);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = (s.q___166939 + 1);
    s.q___166939 = (r0);
    { step = 18; continue; }
  case 15:
    s.tmp_0 = helpers_stringSlice__P164925_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___166910;
    s.tmp_0.arg2 = s.q___166939;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.T___166938 = (r0);
    r0 = pxsim_Array__push(s.A___166889, s.T___166938);
    r0 = pxsim_Array__length(s.A___166889);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.lim___166891);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    r0 = s.A___166889;
    { step = 21; continue; }
  case 16:
  case 17:
    s.p___166910 = (s.e___166945);
    s.q___166939 = (s.p___166910);
  case 18:
  case 19:
    { step = 13; continue; }
  case 20:
    s.tmp_0 = helpers_stringSlice__P164925_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___166910;
    s.tmp_0.arg2 = s.q___166939;
    s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.T___166938 = (r0);
    r0 = pxsim_Array__push(s.A___166889, s.T___166938);
    r0 = s.A___166889;
  case 21:
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSplit__P164927.info = {"start":11930,"length":1319,"line":407,"column":4,"endLine":451,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSplit","argumentNames":["S","separator","limit"]}

function helpers_stringSplit__P164927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSplit__P164927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  A___166889: undefined,
  lim___166891: undefined,
  s___166907: undefined,
  p___166910: undefined,
  R___166911: undefined,
  z___166925: undefined,
  T___166938: undefined,
  q___166939: undefined,
  e___166945: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_splitMatch__P164928(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___166990 = undefined;
    s.s___166993 = undefined;
    s.i___167003 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.length(s.arg2);
    s.r___166990 = (r0);
    r0 = pxsim_String_.length(s.arg0);
    s.s___166993 = (r0);
    r0 = (s.arg1 + s.r___166990);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.s___166993);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = -1;
    { step = 7; continue; }
  case 1:
  case 2:
    s.i___167003 = (0);
  case 3:
    r0 = (s.i___167003 < s.r___166990);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.arg1 + s.i___167003);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(s.arg2, s.i___167003);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 != s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = -1;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.i___167003 + 1);
    s.i___167003 = (r0);
    { step = 3; continue; }
  case 6:
    r0 = (s.arg1 + s.r___166990);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
helpers_splitMatch__P164928.info = {"start":13255,"length":289,"line":453,"column":4,"endLine":462,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"splitMatch","argumentNames":["S","q","R"]}

function helpers_splitMatch__P164928_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_splitMatch__P164928, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___166990: undefined,
  s___166993: undefined,
  i___167003: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayMap__P164914(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___167026 = undefined;
    s.len___167028 = undefined;
    s.i___167031 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___167026 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___167028 = (r0);
    s.i___167031 = (0);
  case 1:
    r0 = (s.i___167031 < s.len___167028);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.res___167026;
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___167031);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.i___167031;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___167031 + 1);
    s.i___167031 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.res___167026;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayMap__P164914.info = {"start":6528,"length":299,"line":229,"column":4,"endLine":236,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayMap","argumentNames":["arr","callbackfn"]}

function helpers_arrayMap__P164914_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayMap__P164914, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  res___167026: undefined,
  len___167028: undefined,
  i___167031: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayForEach__P164917(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___167049 = undefined;
    s.i___167052 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___167049 = (r0);
    s.i___167052 = (0);
  case 1:
    r0 = (s.i___167052 < s.len___167049);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___167052);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___167052;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.i___167052 + 1);
    s.i___167052 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P164917.info = {"start":7439,"length":250,"line":254,"column":4,"endLine":259,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P164917_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P164917, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___167049: undefined,
  i___167052: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function mqtt_Client_subscribe__P165613(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    s.tmp_0 = mqtt_Client_send__P165614_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = mqtt_Protocol_createSubscribe__P165599_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = s.arg3;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = r0 = s.arg1;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 1);
    s.tmp_3 = r0;
    r0 = pxsim_String_.charAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "#");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_5 = helpers_stringSlice__P164925_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.tmp_5.arg1 = 0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5.arg2 = r0;
    s.pc = 9; return s.tmp_5;
  case 9:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = s.arg0.fields["mqttHandlers"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["mqttHandlers"] = (s.tmp_4);
  case 3:
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(mqtt_MQTTHandler__C165604_VT);
    s.tmp_0 = r0;
    s.tmp_1 = mqtt_MQTTHandler_constructor__P165605_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    r0 = s.arg0.fields["mqttHandlers"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.tmp_0);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_subscribe__P165613.info = {"start":13919,"length":470,"line":427,"column":8,"endLine":435,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"subscribe","argumentNames":["this","topic","handler","qos"]}

function mqtt_Client_subscribe__P165613_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_subscribe__P165613, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function mqtt_MQTTHandler_constructor__P165605(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_MQTTHandler__C165604_VT)) failedCast(r0);
    r0 = (s.arg0).fields["topic"] = (s.arg1);
    r0 = (s.arg0).fields["handler"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_MQTTHandler_constructor__P165605.info = {"start":9362,"length":110,"line":296,"column":8,"endLine":299,"endColumn":13,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":["this","topic","handler"]}

function mqtt_MQTTHandler_constructor__P165605_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_MQTTHandler_constructor__P165605, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function mqtt_Protocol_createSubscribe__P165599(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.pid___167112 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_1 = mqtt_Protocol_getBytes__P165591_mk(s);
    s.tmp_1.arg0 = 1;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.pid___167112 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = mqtt_Protocol_createPacket__P165593_mk(s);
    s.tmp_1.arg0 = 130;
    s.tmp_1.arg1 = s.pid___167112;
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_3 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_4 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_4.arg0 = s.tmp_0;
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1.arg2 = r0;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createSubscribe__P165599.info = {"start":8199,"length":330,"line":259,"column":8,"endLine":266,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createSubscribe","argumentNames":["topic","qos"]}

function mqtt_Protocol_createSubscribe__P165599_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createSubscribe__P165599, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  pid___167112: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_fail__P165074(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_log__P165114_mk(s);
    s.tmp_0.arg0 = "Fatal failure: ";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = console_log__P165114_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.control.dmesg(s.arg0);
    r0 = pxsim_pxtrt.panic(108);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_fail__P165074.info = {"start":2656,"length":155,"line":89,"column":4,"endLine":94,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"fail","argumentNames":["message"]}

function control_fail__P165074_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_fail__P165074, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function azureiot_mqttClient__P165627(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals._mqttClient___165622);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = azureiot_createMQTTClient__P165628_mk(s);
    s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    globals._mqttClient___165622 = (r0);
  case 1:
  case 2:
    r0 = globals._mqttClient___165622;
    return leave(s, r0)
  default: oops()
} } }
azureiot_mqttClient__P165627.info = {"start":532,"length":149,"line":23,"column":4,"endLine":27,"endColumn":5,"fileName":"azureiot.ts","functionName":"mqttClient","argumentNames":[]}

function azureiot_mqttClient__P165627_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_mqttClient__P165627, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function azureiot_createMQTTClient__P165628(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.connString___167144 = undefined;
    s.connStringParts___167150 = undefined;
    s.iotHubHostName___167154 = undefined;
    s.deviceId___167157 = undefined;
    s.sasToken___167160 = undefined;
    s.opts___167163 = undefined;
    s.c___167183 = undefined;
    r0 = pxsim.control.allocateNotifyEvent();
    globals._messageBusId___165623 = (r0);
    s.tmp_0 = settings_SecretStore_readSecret__P165305_mk(s);
    s.tmp_0.arg0 = globals.programSecrets___165312;
    s.tmp_0.arg1 = globals.SECRETS_KEY___165618;
    s.tmp_0.arg2 = true;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.connString___167144 = (r0);
    s.tmp_0 = azureiot_parsePropertyBag__P165630_mk(s);
    s.tmp_0.arg0 = s.connString___167144;
    s.tmp_0.arg1 = ";";
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.connStringParts___167150 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(s.connStringParts___167150, "HostName");
    s.iotHubHostName___167154 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(s.connStringParts___167150, "DeviceName");
    s.deviceId___167157 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(s.connStringParts___167150, "SharedAccessSignature");
    s.sasToken___167160 = (r0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "host", s.iotHubHostName___167154);
    r0 = pxsim_String_.mkEmpty();
    s.tmp_5 = r0;
    if ((s.iotHubHostName___167154) && (s.iotHubHostName___167154).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.iotHubHostName___167154);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.iotHubHostName___167154) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, "/");
    s.tmp_3 = r0;
    if ((s.deviceId___167157) && (s.deviceId___167157).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.deviceId___167157);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.deviceId___167157) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_7);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "/api-version=2018-06-30");
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "username", s.tmp_1);
    if ((s.sasToken___167160) && (s.sasToken___167160).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.sasToken___167160);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.sasToken___167160) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat("SharedAccessSignature ", s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "password", s.tmp_8);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "clientId", s.deviceId___167157);
    s.opts___167163 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(mqtt_Client__C165606_VT);
    s.tmp_0 = r0;
    s.tmp_1 = mqtt_Client_constructor__P165617_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.opts___167163;
    s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.c___167183 = (s.tmp_0);
    s.tmp_0 = mqtt_EventEmitter_on__P165601_mk(s);
    s.tmp_0.arg0 = s.c___167183;
    s.tmp_0.arg1 = "connected";
    s.tmp_0.arg2 = inline__P167189;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_on__P165601_mk(s);
    s.tmp_0.arg0 = s.c___167183;
    s.tmp_0.arg1 = "disconnected";
    s.tmp_0.arg2 = inline__P167198;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_on__P165601_mk(s);
    s.tmp_0.arg0 = s.c___167183;
    s.tmp_0.arg1 = "error";
    s.tmp_0.arg2 = inline__P167207;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_on__P165601_mk(s);
    s.tmp_0.arg0 = s.c___167183;
    s.tmp_0.arg1 = "receive";
    s.tmp_0.arg2 = inline__P167222;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_0 = mqtt_Client_connect__P165611_mk(s);
    s.tmp_0.arg0 = s.c___167183;
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = s.c___167183;
    return leave(s, r0)
  default: oops()
} } }
azureiot_createMQTTClient__P165628.info = {"start":687,"length":1427,"line":29,"column":4,"endLine":63,"endColumn":5,"fileName":"azureiot.ts","functionName":"createMQTTClient","argumentNames":[]}

function azureiot_createMQTTClient__P165628_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_createMQTTClient__P165628, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  connString___167144: undefined,
  connStringParts___167150: undefined,
  iotHubHostName___167154: undefined,
  deviceId___167157: undefined,
  sasToken___167160: undefined,
  opts___167163: undefined,
  c___167183: undefined,
} }





function inline__P167189(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = azureiot_log__P165626_mk(s);
    s.tmp_0.arg0 = "connected";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim.control.raiseEvent(globals._messageBusId___165623, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167189.info = {"start":1499,"length":117,"line":46,"column":26,"endLine":49,"endColumn":9,"fileName":"azureiot.ts","functionName":"inline","argumentNames":[]}

function inline__P167189_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167189, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P167198(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = azureiot_log__P165626_mk(s);
    s.tmp_0.arg0 = "disconnected";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim.control.raiseEvent(globals._messageBusId___165623, 2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167198.info = {"start":1648,"length":123,"line":50,"column":29,"endLine":53,"endColumn":9,"fileName":"azureiot.ts","functionName":"inline","argumentNames":[]}

function inline__P167198_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167198, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P167207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = azureiot_log__P165626_mk(s);
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("error: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim.control.raiseEvent(globals._messageBusId___165623, 3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167207.info = {"start":1796,"length":120,"line":54,"column":22,"endLine":57,"endColumn":9,"fileName":"azureiot.ts","functionName":"inline","argumentNames":["msg"]}

function inline__P167207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function inline__P167222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = azureiot_log__P165626_mk(s);
    s.tmp_7 = if_topic_1_mk(s);
    s.tmp_7.arg0 = s.arg0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "topic");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["topic"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["topic"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.pc = 2; return s.tmp_7; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("unhandled msg: ", s.tmp_5);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, " / ");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_11 = if_content_1_mk(s);
    s.tmp_11.arg0 = s.arg0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "content");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["content"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["content"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.pc = 6; return s.tmp_11; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim.BufferMethods.toString(s.tmp_10);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_8);
    s.tmp_0.arg0 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167222.info = {"start":1943,"length":124,"line":58,"column":24,"endLine":60,"endColumn":9,"fileName":"azureiot.ts","functionName":"inline","argumentNames":["packet"]}

function inline__P167222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  arg0: undefined,
} }





function mqtt_Client_connect__P165611(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    s.tmp_0 = mqtt_Client_log__P165608_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_5 = if_host_1_mk(s);
    r0 = s.arg0.fields["opt"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "host");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["host"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["host"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.pc = 4; return s.tmp_5; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("Connecting to ", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ":");
    s.tmp_1 = r0;
    s.tmp_8 = if_port_1_mk(s);
    r0 = s.arg0.fields["opt"];
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "port");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["port"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["port"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.pc = 6; return s.tmp_8; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg1 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.arg0.fields["wdId"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -123);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P167272);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = setInterval__P165174_mk(s);
    s.tmp_5.arg0 = s.tmp_2;
    s.tmp_5.arg1 = 50000;
    s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["wdId"] = (s.tmp_4);
  case 1:
  case 2:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = net_Net_createSocket__P165367_mk(s);
    r0 = s.arg0.fields["net"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = if_host_1_mk(s);
    r0 = s.arg0.fields["opt"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "host");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["host"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["host"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.pc = 10; return s.tmp_3; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.tmp_4 = if_port_1_mk(s);
    r0 = s.arg0.fields["opt"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "port");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["port"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["port"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.pc = 11; return s.tmp_4; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_2.arg2 = r0;
    s.tmp_2.arg3 = true;
    s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sct"] = (s.tmp_1);
    r0 = pxsim_pxtcore_mkAction(1, inline__P167301);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = if_onOpen_2_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "onOpen"), 2);
      s.pc = 12; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["onOpen"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["onOpen"], 2); s.pc = 12; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 12; return s.tmp_1;; }
     else { s.pc = 12; return s.tmp_1; }
    }
  case 12:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P167313);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = if_onMessage_2_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "onMessage"), 2);
      s.pc = 13; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["onMessage"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["onMessage"], 2); s.pc = 13; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 13; return s.tmp_1;; }
     else { s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P167332);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = if_onError_2_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "onError"), 2);
      s.pc = 14; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["onError"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["onError"], 2); s.pc = 14; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 14; return s.tmp_1;; }
     else { s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, inline__P167340);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = if_onClose_2_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "onClose"), 2);
      s.pc = 15; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["onClose"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["onClose"], 2); s.pc = 15; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 15; return s.tmp_1;; }
     else { s.pc = 15; return s.tmp_1; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_0 = if_connect_1_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "connect"), 1);
      s.pc = 16; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["connect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["connect"], 1); s.pc = 16; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.pc = 16; return s.tmp_0;; }
     else { s.pc = 16; return s.tmp_0; }
    }
  case 16:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_connect__P165611.info = {"start":12183,"length":1345,"line":385,"column":8,"endLine":418,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"connect","argumentNames":["this"]}

function mqtt_Client_connect__P165611_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_connect__P165611, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function inline__P167272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["connected"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.tmp_3.arg1 = "disconnected";
    s.tmp_3.arg2 = undefined;
    s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "error";
    s.tmp_0.arg2 = "No connection. Retrying.";
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = mqtt_Client_disconnect__P165610_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = mqtt_Client_connect__P165611_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167272.info = {"start":12378,"length":296,"line":388,"column":40,"endLine":395,"endColumn":17,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":[]}

function inline__P167272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function inline__P167301(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = mqtt_Client_log__P165608_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "Network connection established.";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "connect";
    s.tmp_0.arg2 = undefined;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = mqtt_Client_send__P165614_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = mqtt_Protocol_createConnect__P165594_mk(s);
    r0 = s.caps[0].fields["opt"];
    s.tmp_1.arg0 = r0;
    s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167301.info = {"start":12837,"length":181,"line":399,"column":28,"endLine":403,"endColumn":13,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":[]}

function inline__P167301_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167301, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function inline__P167313(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = mqtt_Client_log__P165608_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("incoming ", s.tmp_3);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, " bytes");
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = mqtt_Client_handleMessage__P165615_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167313.info = {"start":13052,"length":135,"line":404,"column":31,"endLine":407,"endColumn":13,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":["msg"]}

function inline__P167313_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167313, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function inline__P167332(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = mqtt_Client_log__P165608_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "Error.";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "error";
    s.tmp_0.arg2 = undefined;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167332.info = {"start":13219,"length":93,"line":408,"column":29,"endLine":411,"endColumn":13,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":[]}

function inline__P167332_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167332, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P167340(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = mqtt_Client_log__P165608_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "Close.";
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = "disconnected";
    s.tmp_0.arg2 = undefined;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = (s.caps[0]).fields["connected"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167340.info = {"start":13344,"length":140,"line":412,"column":29,"endLine":416,"endColumn":13,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":[]}

function inline__P167340_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167340, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function mqtt_Client_handleMessage__P165615(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___167366 = undefined;
    s.payloadOff___167368 = undefined;
    s.payloadEnd___167391 = undefined;
    s.cmd___167399 = undefined;
    s.controlPacketType___167402 = undefined;
    s.payload___167405 = undefined;
    s.returnCode___167425 = undefined;
    s.connectionError___167447 = undefined;
    s.message___167453 = undefined;
    s.handled___167458 = undefined;
    s.h___167462 = undefined;
    s.unnamed682___U11 = undefined;
    s.unnamed683___U12 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    r0 = s.arg0.fields["buf"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = helpers_bufferConcat__P164997_mk(s);
    r0 = s.arg0.fields["buf"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    s.arg1 = (r0);
    r0 = (s.arg0).fields["buf"] = (null);
  case 1:
  case 2:
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    { step = 34; continue; }
  case 3:
  case 4:
    r0 = pxsim.BufferMethods.getByte(s.arg1, 1);
    s.len___167366 = (r0);
    s.payloadOff___167368 = (2);
    r0 = (s.len___167366 & 128);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 < 3);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    { step = 34; continue; }
  case 5:
  case 6:
    r0 = pxsim.BufferMethods.getByte(s.arg1, 2);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 128);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.tmp_5 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = "error";
    s.tmp_5.arg2 = "too large packet.";
    s.pc = 36; return s.tmp_5;
  case 36:
    r0 = s.retval;
    r0 = (s.arg0).fields["buf"] = (null);
    { step = 34; continue; }
  case 7:
  case 8:
    r0 = pxsim.BufferMethods.getByte(s.arg1, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << 7);
    s.tmp_0 = r0;
    r0 = (s.len___167366 & 127);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 | s.tmp_2);
    s.len___167366 = (r0);
    r0 = (s.payloadOff___167368 + 1);
    s.payloadOff___167368 = (r0);
  case 9:
  case 10:
    r0 = (s.payloadOff___167368 + s.len___167366);
    s.payloadEnd___167391 = (r0);
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.payloadEnd___167391);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    { step = 34; continue; }
  case 11:
  case 12:
    r0 = pxsim.BufferMethods.getByte(s.arg1, 0);
    s.cmd___167399 = (r0);
    r0 = (s.cmd___167399 >> 4);
    s.controlPacketType___167402 = (r0);
    s.tmp_0 = r0 = s.arg1;
    s.tmp_1 = r0 = s.payloadOff___167368;
    r0 = (s.payloadEnd___167391 - s.payloadOff___167368);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_0, s.tmp_1, s.tmp_2);
    s.payload___167405 = (r0);
    s.tmp_0 = r0 = s.controlPacketType___167402;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 27; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 28; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 29; continue; }
    r0 = s.tmp_0;
    { step = 30; continue; }
  case 13:
    r0 = pxsim.BufferMethods.getByte(s.payload___167405, 0);
    s.returnCode___167425 = (r0);
    r0 = (s.returnCode___167425 === 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = mqtt_Client_log__P165608_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = "MQTT connection accepted.";
    s.pc = 37; return s.tmp_1;
  case 37:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "connected";
    s.tmp_0.arg2 = undefined;
    s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    r0 = (s.arg0).fields["connected"] = (true);
    r0 = pxsim_pxtcore_mkAction(1, inline__P167441);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = setInterval__P165174_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = 40000;
    s.pc = 39; return s.tmp_3;
  case 39:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["piId"] = (s.tmp_2);
    { step = 15; continue; }
  case 14:
    s.tmp_0 = mqtt_Client_describe__P165609_mk(s);
    s.tmp_0.arg0 = s.returnCode___167425;
    s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.connectionError___167447 = (r0);
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "error";
    s.tmp_0.arg2 = s.connectionError___167447;
    s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
  case 15:
    { step = 31; continue; }
  case 16:
    s.tmp_0 = mqtt_Protocol_parsePublish__P165597_mk(s);
    s.tmp_0.arg0 = s.cmd___167399;
    s.tmp_0.arg1 = s.payload___167405;
    s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.message___167453 = (r0);
    s.handled___167458 = (false);
    r0 = s.arg0.fields["mqttHandlers"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 21; continue; }
    s.h___167462 = (undefined);
    r0 = s.arg0.fields["mqttHandlers"];
    s.unnamed682___U11 = (r0);
    s.unnamed683___U12 = (0);
  case 17:
    s.tmp_0 = r0 = s.unnamed683___U12;
    r0 = pxsim_Array__length(s.unnamed682___U11);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed682___U11, s.unnamed683___U12);
    s.h___167462 = (r0);
    s.tmp_4 = helpers_stringSlice__P164925_mk(s);
    s.tmp_5 = if_topic_1_mk(s);
    s.tmp_5.arg0 = s.message___167453;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "topic");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["topic"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["topic"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.pc = 44; return s.tmp_5; }
    }
  case 44:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.h___167462.fields["topic"];
    s.tmp_6 = r0;
    r0 = pxsim_String_.length(s.tmp_6);
    s.tmp_4.arg2 = r0;
    s.pc = 43; return s.tmp_4;
  case 43:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.h___167462.fields["topic"];
    s.tmp_7 = r0;
    r0 = (s.tmp_3 == s.tmp_7);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 18; continue; }
    s.tmp_8 = if_handler_2_mk(s);
    s.tmp_8.arg0 = s.h___167462;
    s.tmp_8.arg1 = s.message___167453;
    if (!s.tmp_8.arg0.vtable.iface) {
      setupLambda(s.tmp_8, pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "handler"), 2);
      s.pc = 45; return s.tmp_8;
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["handler"];
      if (s.tmp_8.fn == null) { setupLambda(s.tmp_8, s.tmp_8.arg0.fields["handler"], 2); s.pc = 45; return s.tmp_8; }
      else if (s.tmp_8.fn.isGetter) { s.tmp_8.stage2Call = true; s.pc = 45; return s.tmp_8;; }
     else { s.pc = 45; return s.tmp_8; }
    }
  case 45:
    r0 = s.retval;
    s.handled___167458 = (true);
  case 18:
  case 19:
    r0 = (s.unnamed683___U12 + 1);
    s.unnamed683___U12 = (r0);
    { step = 17; continue; }
  case 20:
    s.unnamed682___U11 = (undefined);
  case 21:
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.handled___167458);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.tmp_2 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = "receive";
    s.tmp_2.arg2 = s.message___167453;
    s.pc = 46; return s.tmp_2;
  case 46:
    r0 = s.retval;
  case 23:
  case 24:
    s.tmp_2 = if_qos_1_mk(s);
    s.tmp_2.arg0 = s.message___167453;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "qos");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["qos"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["qos"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.pc = 47; return s.tmp_2; }
    }
  case 47:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    r0 = pxsim_pxtcore_mkAction(2, inline__P167488);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_3, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_3, 1, s.message___167453);
    s.tmp_4 = setTimeout__P165176_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_4.arg1 = 0;
    s.pc = 48; return s.tmp_4;
  case 48:
    r0 = s.retval;
  case 25:
  case 26:
    { step = 31; continue; }
  case 27:
  case 28:
  case 29:
    { step = 31; continue; }
  case 30:
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "error";
    if ((s.controlPacketType___167402) && (s.controlPacketType___167402).vtable) {
    setupResume(s, 50);
    pxsim_String__stringConv(s.controlPacketType___167402);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.controlPacketType___167402) + ""; }
  case 50:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("MQTT unexpected packet type: ", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, ".");
    s.tmp_0.arg2 = r0;
    s.pc = 49; return s.tmp_0;
  case 49:
    r0 = s.retval;
  case 31:
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.payloadEnd___167391);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.tmp_2 = mqtt_Client_handleMessage__P165615_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = pxsim.BufferMethods.slice(s.arg1, s.payloadEnd___167391, -1);
    s.tmp_2.arg1 = r0;
    s.pc = 51; return s.tmp_2;
  case 51:
    r0 = s.retval;
  case 32:
  case 33:
  case 34:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_handleMessage__P165615.info = {"start":14710,"length":2972,"line":445,"column":8,"endLine":516,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"handleMessage","argumentNames":["this","data"]}

function mqtt_Client_handleMessage__P165615_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_handleMessage__P165615, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  len___167366: undefined,
  payloadOff___167368: undefined,
  payloadEnd___167391: undefined,
  cmd___167399: undefined,
  controlPacketType___167402: undefined,
  payload___167405: undefined,
  returnCode___167425: undefined,
  connectionError___167447: undefined,
  message___167453: undefined,
  handled___167458: undefined,
  h___167462: undefined,
  unnamed682___U11: undefined,
  unnamed683___U12: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P167441(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = mqtt_Client_ping__P165616_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167441.info = {"start":16174,"length":17,"line":483,"column":48,"endLine":483,"endColumn":65,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":[]}

function inline__P167441_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167441, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P167488(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_1 = if_pid_1_mk(s);
    s.tmp_1.arg0 = s.caps[1];
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "pid");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["pid"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["pid"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = mqtt_Client_send__P165614_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.tmp_4 = mqtt_Protocol_createPubAck__P165598_mk(s);
    s.tmp_4.arg0 = s.tmp_2;
    s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167488.info = {"start":17100,"length":113,"line":501,"column":35,"endLine":503,"endColumn":25,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":[]}

function inline__P167488_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167488, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function mqtt_Protocol_createPubAck__P165598(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = mqtt_Protocol_createPacket__P165593_mk(s);
    s.tmp_0.arg0 = 64;
    s.tmp_1 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_2 = mqtt_Protocol_getBytes__P165591_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = undefined;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createPubAck__P165598.info = {"start":7848,"length":182,"line":249,"column":8,"endLine":253,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createPubAck","argumentNames":["pid"]}

function mqtt_Protocol_createPubAck__P165598_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createPubAck__P165598, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function setTimeout__P165176(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = control_setInterval__P165093_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = 1;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
setTimeout__P165176.info = {"start":610,"length":139,"line":26,"column":0,"endLine":28,"endColumn":1,"fileName":"pxt_modules/base/scheduling.ts","functionName":"setTimeout","argumentNames":["func","delay"]}

function setTimeout__P165176_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: setTimeout__P165176, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_setInterval__P165093(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.interval___167542 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals._intervals___165088);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array__mk();
    globals._intervals___165088 = (r0);
  case 5:
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(control_Interval__C165089_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_Interval_constructor__P165092_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.interval___167542 = (s.tmp_0);
    r0 = s.interval___167542.fields["id"];
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_setInterval__P165093.info = {"start":1554,"length":266,"line":54,"column":4,"endLine":59,"endColumn":5,"fileName":"pxt_modules/base/interval.ts","functionName":"setInterval","argumentNames":["func","delay","mode"]}

function control_setInterval__P165093_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_setInterval__P165093, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  interval___167542: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_Interval_constructor__P165092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C165089_VT)) failedCast(r0);
    r0 = pxsim_Array__length(globals._intervals___165088);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = globals._intervals___165088;
    r0 = pxsim_Array__length(globals._intervals___165088);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    r0 = r0.fields["id"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["id"] = (s.tmp_6);
    r0 = (s.arg0).fields["func"] = (s.arg1);
    r0 = (s.arg0).fields["delay"] = (s.arg2);
    r0 = (s.arg0).fields["mode"] = (s.arg3);
    r0 = pxsim_Array__push(globals._intervals___165088, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P167585);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_constructor__P165092.info = {"start":283,"length":367,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":["this","func","delay","mode"]}

function control_Interval_constructor__P165092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_constructor__P165092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P167585(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_0 = control_Interval_work__P165090_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167585.info = {"start":621,"length":17,"line":23,"column":34,"endLine":23,"endColumn":51,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":[]}

function inline__P167585_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167585, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_Interval_work__P165090(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C165089_VT)) failedCast(r0);
    r0 = s.arg0.fields["mode"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["delay"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = pause__P165165_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_3.arg0 = r0;
    s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.pc = 14; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.pc = 14; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.pc = 14; return s.tmp_2;; }
     else { s.pc = 14; return s.tmp_2; }
    }
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 12; continue; }
  case 7:
  case 8:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_2 = pause__P165165_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_2.arg0 = r0;
    s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.pc = 16; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.pc = 16; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.pc = 16; return s.tmp_2;; }
     else { s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
  case 9:
  case 10:
    { step = 8; continue; }
  case 11:
  case 12:
    r0 = pxsim_Array_.removeElement(globals._intervals___165088, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_work__P165090.info = {"start":660,"length":823,"line":26,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"work","argumentNames":["this"]}

function control_Interval_work__P165090_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_work__P165090, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function pause__P165165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    setupResume(s, 1);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P165165.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P165165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P165165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function mqtt_Protocol_parsePublish__P165597(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.qos___167627 = undefined;
    s.topicLength___167632 = undefined;
    s.variableLength___167639 = undefined;
    s.message___167649 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 & 6);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 1);
    s.qos___167627 = (r0);
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 9, 0);
    s.topicLength___167632 = (r0);
    r0 = (2 + s.topicLength___167632);
    s.variableLength___167639 = (r0);
    r0 = (s.qos___167627 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.variableLength___167639 + 2);
    s.variableLength___167639 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.slice(s.arg1, 2, s.topicLength___167632);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.toString(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "topic", s.tmp_1);
    r0 = pxsim.BufferMethods.slice(s.arg1, s.variableLength___167639, -1);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "content", s.tmp_3);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "qos", s.qos___167627);
    r0 = (s.arg0 & 1);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "retain", s.tmp_4);
    s.message___167649 = (s.tmp_0);
    r0 = (s.qos___167627 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = if_pid_2_mk(s);
    s.tmp_1.arg0 = s.message___167649;
    s.tmp_2 = r0 = s.arg1;
    r0 = (s.variableLength___167639 - 2);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_2, 9, s.tmp_3);
    s.tmp_1.arg1 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_1.arg0, "pid", s.tmp_1.arg1);
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["set/pid"];
      if (s.tmp_1.fn === null) { s.tmp_1.arg0.fields["pid"] = s.tmp_1.arg1; }
      else if (s.tmp_1.fn === undefined) { failedCast(s.tmp_1.arg0) } 
     else { s.pc = 5; return s.tmp_1; }
    }
  case 5:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = s.message___167649;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_parsePublish__P165597.info = {"start":6945,"length":733,"line":223,"column":8,"endLine":243,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"parsePublish","argumentNames":["cmd","payload"]}

function mqtt_Protocol_parsePublish__P165597_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_parsePublish__P165597, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  qos___167627: undefined,
  topicLength___167632: undefined,
  variableLength___167639: undefined,
  message___167649: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function mqtt_Client_describe__P165609(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.error___167677 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.error___167677 = ("Connection refused, ");
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    if ((s.error___167677) && (s.error___167677).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.error___167677);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.error___167677) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "unacceptable protocol version.");
    s.error___167677 = (r0);
    { step = 7; continue; }
  case 2:
    if ((s.error___167677) && (s.error___167677).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.error___167677);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.error___167677) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "identifier rejected.");
    s.error___167677 = (r0);
    { step = 7; continue; }
  case 3:
    if ((s.error___167677) && (s.error___167677).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.error___167677);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.error___167677) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "server unavailable.");
    s.error___167677 = (r0);
    { step = 7; continue; }
  case 4:
    if ((s.error___167677) && (s.error___167677).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.error___167677);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.error___167677) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "bad user name or password.");
    s.error___167677 = (r0);
    { step = 7; continue; }
  case 5:
    if ((s.error___167677) && (s.error___167677).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.error___167677);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.error___167677) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "not authorized.");
    s.error___167677 = (r0);
    { step = 7; continue; }
  case 6:
    if ((s.error___167677) && (s.error___167677).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.error___167677);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.error___167677) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("unknown return code: ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, ".");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.error___167677 = (r0);
  case 7:
    r0 = s.error___167677;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_describe__P165609.info = {"start":10556,"length":991,"line":341,"column":8,"endLine":364,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"describe","argumentNames":["code"]}

function mqtt_Client_describe__P165609_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_describe__P165609, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  error___167677: undefined,
  arg0: undefined,
} }





function mqtt_Client_ping__P165616(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    s.tmp_0 = mqtt_Client_send__P165614_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = mqtt_Protocol_createPingReq__P165595_mk(s);
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = mqtt_EventEmitter_emit__P165602_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = "debug";
    s.tmp_0.arg2 = "Sent: Ping request.";
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_ping__P165616.info = {"start":17692,"length":130,"line":518,"column":8,"endLine":521,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"ping","argumentNames":["this"]}

function mqtt_Client_ping__P165616_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_ping__P165616, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function mqtt_Protocol_createPingReq__P165595(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 192);
    r0 = pxsim_Array__push(s.tmp_0, 0);
    s.tmp_1 = mqtt_Protocol_strChr__P165588_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createPingReq__P165595.info = {"start":6232,"length":107,"line":205,"column":8,"endLine":207,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createPingReq","argumentNames":[]}

function mqtt_Protocol_createPingReq__P165595_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createPingReq__P165595, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function mqtt_Protocol_createConnect__P165594(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.protocolName___167749 = undefined;
    s.nums___167753 = undefined;
    s.payload___167769 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_0.arg0 = "MQTT";
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.protocolName___167749 = (r0);
    r0 = pxsim.control.createBuffer(4);
    s.nums___167753 = (r0);
    r0 = pxsim.BufferMethods.setByte(s.nums___167753, 0, 4);
    s.tmp_0 = r0 = s.nums___167753;
    s.tmp_2 = mqtt_Protocol_createConnectFlags__P165590_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 1, s.tmp_1);
    r0 = pxsim.BufferMethods.setByte(s.nums___167753, 2, 0);
    r0 = pxsim.BufferMethods.setByte(s.nums___167753, 3, 60);
    s.tmp_0 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_1 = if_clientId_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "clientId");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["clientId"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["clientId"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 10; return s.tmp_1; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.payload___167769 = (r0);
    s.tmp_1 = if_will_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "will");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["will"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["will"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_2.arg0 = s.payload___167769;
    s.tmp_3 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_4 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_5 = if_topic_1_mk(s);
    s.tmp_6 = if_will_1_mk(s);
    s.tmp_6.arg0 = s.arg0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "will");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["will"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["will"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.pc = 16; return s.tmp_6; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "topic");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["topic"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["topic"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.pc = 15; return s.tmp_5; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.pc = 14; return s.tmp_4;
  case 14:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.tmp_7 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_8 = if_message_1_mk(s);
    s.tmp_9 = if_will_1_mk(s);
    s.tmp_9.arg0 = s.arg0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "will");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["will"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["will"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.pc = 19; return s.tmp_9; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "message");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["message"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["message"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.pc = 18; return s.tmp_8; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.pc = 17; return s.tmp_7;
  case 17:
    r0 = s.retval;
    s.tmp_3.arg1 = r0;
    s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.payload___167769 = (r0);
  case 1:
  case 2:
    s.tmp_1 = if_username_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "username");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["username"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["username"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 20; return s.tmp_1; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_2.arg0 = s.payload___167769;
    s.tmp_3 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_4 = if_username_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "username");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["username"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["username"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.pc = 23; return s.tmp_4; }
    }
  case 23:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.pc = 22; return s.tmp_3;
  case 22:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.payload___167769 = (r0);
    s.tmp_1 = if_password_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "password");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["password"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["password"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 24; return s.tmp_1; }
    }
  case 24:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_2.arg0 = s.payload___167769;
    s.tmp_3 = mqtt_Protocol_pack__P165592_mk(s);
    s.tmp_4 = if_password_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "password");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["password"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["password"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.pc = 27; return s.tmp_4; }
    }
  case 27:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    s.pc = 26; return s.tmp_3;
  case 26:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.payload___167769 = (r0);
  case 3:
  case 4:
  case 5:
  case 6:
    s.tmp_0 = mqtt_Protocol_createPacket__P165593_mk(s);
    s.tmp_0.arg0 = 16;
    s.tmp_1 = helpers_bufferConcat__P164997_mk(s);
    s.tmp_1.arg0 = s.protocolName___167749;
    s.tmp_1.arg1 = s.nums___167753;
    s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.payload___167769;
    s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createConnect__P165594.info = {"start":5052,"length":1031,"line":170,"column":8,"endLine":200,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createConnect","argumentNames":["options"]}

function mqtt_Protocol_createConnect__P165594_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createConnect__P165594, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  protocolName___167749: undefined,
  nums___167753: undefined,
  payload___167769: undefined,
  arg0: undefined,
} }





function mqtt_Protocol_createConnectFlags__P165590(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.flags___167816 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.flags___167816 = (0);
    s.tmp_1 = if_username_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "username");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["username"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["username"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 128;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.flags___167816 | s.tmp_2);
    s.flags___167816 = (r0);
    s.tmp_1 = if_username_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "username");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["username"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["username"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_2 = if_password_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "password");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["password"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["password"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = 64;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.flags___167816 | s.tmp_4);
    s.flags___167816 = (r0);
    r0 = (s.flags___167816 | 2);
    s.flags___167816 = (r0);
    s.tmp_1 = if_will_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "will");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["will"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["will"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 16; return s.tmp_1; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = (s.flags___167816 | 4);
    s.flags___167816 = (r0);
    s.tmp_1 = if_qos_1_mk(s);
    s.tmp_2 = if_will_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "will");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["will"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["will"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.pc = 18; return s.tmp_2; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "qos");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["qos"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["qos"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 17; return s.tmp_1; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = 0;
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = r0 = s.flags___167816;
    r0 = (s.tmp_3 << 3);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 | s.tmp_5);
    s.flags___167816 = (r0);
    s.tmp_1 = if_retain_1_mk(s);
    s.tmp_2 = if_will_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "will");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["will"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["will"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "retain");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["retain"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["retain"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = 32;
    { step = 10; continue; }
  case 9:
    r0 = 0;
  case 10:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = (s.flags___167816 | s.tmp_3);
    s.flags___167816 = (r0);
  case 11:
  case 12:
    r0 = s.flags___167816;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Protocol_createConnectFlags__P165590.info = {"start":3241,"length":568,"line":124,"column":8,"endLine":137,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"createConnectFlags","argumentNames":["options"]}

function mqtt_Protocol_createConnectFlags__P165590_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Protocol_createConnectFlags__P165590, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  flags___167816: undefined,
  arg0: undefined,
} }





function net_Net_createSocket__P165367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___167870 = undefined;
    s.socket___167875 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Net__C165364_VT)) failedCast(r0);
    s.tmp_0 = net_Net_controller__P165365_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.c___167870 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.c___167870);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(net_ControllerSocket__C165341_VT);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 3; continue; }
    r0 = 2;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = net_ControllerSocket_constructor__P165353_mk(s);
    s.tmp_4.arg0 = s.tmp_2;
    s.tmp_4.arg1 = s.c___167870;
    s.tmp_4.arg2 = s.arg1;
    s.tmp_4.arg3 = s.arg2;
    s.tmp_4.arg4 = s.tmp_3;
    s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    s.socket___167875 = (s.tmp_2);
    r0 = s.socket___167875;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
net_Net_createSocket__P165367.info = {"start":2256,"length":291,"line":80,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/net/net.ts","functionName":"createSocket","argumentNames":["this","host","port","secure"]}

function net_Net_createSocket__P165367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Net_createSocket__P165367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  c___167870: undefined,
  socket___167875: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function net_ControllerSocket_constructor__P165353(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg0).fields["controller"] = (s.arg1);
    r0 = (s.arg0).fields["host"] = (s.arg2);
    r0 = (s.arg0).fields["port"] = (s.arg3);
    r0 = (s.arg0).fields["conntype"] = (s.arg4);
    r0 = s.arg0.fields["conntype"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["conntype"] = (0);
  case 1:
  case 2:
    r0 = (s.arg0).fields["_buffer"] = (_hex167901);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = net_Controller__C165313_v1_1_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_2.arg0 = r0;
    if (!checkSubtype(s.tmp_2.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.socket;
    s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_socknum"] = (s.tmp_1);
    s.tmp_0 = net_ControllerSocket_setTimeout__P165351_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_constructor__P165353.info = {"start":672,"length":359,"line":22,"column":8,"endLine":29,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"inline","argumentNames":["this","controller","host","port","conntype"]}

function net_ControllerSocket_constructor__P165353_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_constructor__P165353, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }

const _hex167901 = pxsim.BufferMethods.createBufferFromHex("")




function net_ControllerSocket_setTimeout__P165351(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_timeout"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_setTimeout__P165351.info = {"start":5971,"length":78,"line":155,"column":8,"endLine":157,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"setTimeout","argumentNames":["this","value"]}

function net_ControllerSocket_setTimeout__P165351_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_setTimeout__P165351, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_Controller_socket__P165315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = -1;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_socket__P165315.info = {"start":166,"length":58,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"socket","argumentNames":["this"]}

function net_Controller_socket__P165315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_socket__P165315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function mqtt_Client_disconnect__P165610(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    r0 = s.arg0.fields["wdId"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== -123);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = clearInterval__P165175_mk(s);
    r0 = s.arg0.fields["wdId"];
    s.tmp_2.arg0 = r0;
    s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = (s.arg0).fields["wdId"] = (-123);
  case 1:
  case 2:
    r0 = s.arg0.fields["piId"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== -123);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = clearInterval__P165175_mk(s);
    r0 = s.arg0.fields["piId"];
    s.tmp_2.arg0 = r0;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["piId"] = (-123);
  case 3:
  case 4:
    r0 = s.arg0.fields["sct"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = if_close_1_mk(s);
    r0 = s.arg0.fields["sct"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "close"), 1);
      s.pc = 9; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["close"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["close"], 1); s.pc = 9; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 9; return s.tmp_1;; }
     else { s.pc = 9; return s.tmp_1; }
    }
  case 9:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_disconnect__P165610.info = {"start":11557,"length":616,"line":366,"column":8,"endLine":383,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"disconnect","argumentNames":["this"]}

function mqtt_Client_disconnect__P165610_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_disconnect__P165610, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function clearInterval__P165175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = control_clearInterval__P165094_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
clearInterval__P165175.info = {"start":404,"length":116,"line":16,"column":0,"endLine":18,"endColumn":1,"fileName":"pxt_modules/base/scheduling.ts","functionName":"clearInterval","argumentNames":["intervalId"]}

function clearInterval__P165175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: clearInterval__P165175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function control_clearInterval__P165094(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.i___167953 = undefined;
    s.it___167959 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals._intervals___165088);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 9; continue; }
  case 1:
  case 2:
    s.i___167953 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___167953;
    r0 = pxsim_Array__length(globals._intervals___165088);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(globals._intervals___165088, s.i___167953);
    s.it___167959 = (r0);
    r0 = s.it___167959.fields["id"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = s.it___167959.fields["mode"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == s.arg1);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 6; continue; }
    s.tmp_4 = control_Interval_cancel__P165091_mk(s);
    s.tmp_4.arg0 = s.it___167959;
    s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    { step = 8; continue; }
  case 6:
  case 7:
    r0 = (s.i___167953 + 1);
    s.i___167953 = (r0);
    { step = 3; continue; }
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_clearInterval__P165094.info = {"start":1826,"length":342,"line":61,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/base/interval.ts","functionName":"clearInterval","argumentNames":["intervalId","mode"]}

function control_clearInterval__P165094_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_clearInterval__P165094, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___167953: undefined,
  it___167959: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_Interval_cancel__P165091(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C165089_VT)) failedCast(r0);
    r0 = (s.arg0).fields["delay"] = (-1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_cancel__P165091.info = {"start":1493,"length":49,"line":49,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"cancel","argumentNames":["this"]}

function control_Interval_cancel__P165091_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_cancel__P165091, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function mqtt_EventEmitter_emit__P165602(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.listeners___167985 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_EventEmitter__C165600_VT)) failedCast(r0);
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_0, s.arg1);
    s.listeners___167985 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.listeners___167985);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P167993);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg2);
    s.tmp_1 = helpers_arrayForEach__P164917_mk(s);
    s.tmp_1.arg0 = s.listeners___167985;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
mqtt_EventEmitter_emit__P165602.info = {"start":9067,"length":255,"line":286,"column":8,"endLine":292,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"emit","argumentNames":["this","event","arg"]}

function mqtt_EventEmitter_emit__P165602_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_EventEmitter_emit__P165602, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  listeners___167985: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function inline__P167993(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P167993.info = {"start":9246,"length":25,"line":289,"column":34,"endLine":289,"endColumn":59,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":["listener"]}

function inline__P167993_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P167993, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function setInterval__P165174(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Math_max__P164935_mk(s);
    s.tmp_0.arg0 = 10;
    r0 = (s.arg1 | 0);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.arg1 = (r0);
    s.tmp_0 = control_setInterval__P165093_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = 0;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
setInterval__P165174.info = {"start":125,"length":178,"line":6,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/scheduling.ts","functionName":"setInterval","argumentNames":["func","delay"]}

function setInterval__P165174_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: setInterval__P165174, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function mqtt_EventEmitter_on__P165601(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.listeners___168015 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_EventEmitter__C165600_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["handlers"];
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_4, s.arg1);
    s.listeners___168015 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.listeners___168015);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    s.listeners___168015 = (r0);
    r0 = s.arg0.fields["handlers"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.arg1, s.tmp_2);
  case 5:
  case 6:
    r0 = pxsim_Array__push(s.listeners___168015, s.arg2);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_EventEmitter_on__P165601.info = {"start":8775,"length":283,"line":278,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"on","argumentNames":["this","event","listener"]}

function mqtt_EventEmitter_on__P165601_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_EventEmitter_on__P165601, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  listeners___168015: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function mqtt_Client_constructor__P165617(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_Client__C165606_VT)) failedCast(r0);
    s.tmp_0 = mqtt_EventEmitter_constructor__P165603_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = (s.arg0).fields["wdId"] = (-123);
    r0 = (s.arg0).fields["piId"] = (-123);
    r0 = (s.arg0).fields["logPriority"] = (4);
    r0 = (s.arg0).fields["connected"] = (false);
    s.tmp_1 = if_port_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "port");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["port"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["port"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 10; return s.tmp_1; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 8883;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = if_port_2_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.tmp_3.arg1 = s.tmp_2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "port", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/port"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["port"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.pc = 11; return s.tmp_3; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0 = if_clientId_2_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_1 = if_clientId_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "clientId");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["clientId"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["clientId"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "clientId", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/clientId"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["clientId"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.pc = 12; return s.tmp_0; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_1 = if_will_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "will");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["will"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["will"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 14; return s.tmp_1; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_3 = if_qos_1_mk(s);
    s.tmp_4 = if_will_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "will");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["will"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["will"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.pc = 16; return s.tmp_4; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "qos");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["qos"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["qos"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.pc = 15; return s.tmp_3; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.tmp_6 = if_qos_2_mk(s);
    s.tmp_7 = if_will_1_mk(s);
    s.tmp_7.arg0 = s.arg1;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "will");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["will"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["will"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.pc = 18; return s.tmp_7; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_6.arg0, "qos", s.tmp_6.arg1);
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["set/qos"];
      if (s.tmp_6.fn === null) { s.tmp_6.arg0.fields["qos"] = s.tmp_6.arg1; }
      else if (s.tmp_6.fn === undefined) { failedCast(s.tmp_6.arg0) } 
     else { s.pc = 17; return s.tmp_6; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_1 = if_retain_1_mk(s);
    s.tmp_2 = if_will_1_mk(s);
    s.tmp_2.arg0 = s.arg1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "will");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["will"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["will"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.pc = 20; return s.tmp_2; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "retain");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["retain"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["retain"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = false;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = if_retain_2_mk(s);
    s.tmp_5 = if_will_1_mk(s);
    s.tmp_5.arg0 = s.arg1;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "will");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["will"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["will"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.pc = 22; return s.tmp_5; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.tmp_3;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_4.arg0, "retain", s.tmp_4.arg1);
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["set/retain"];
      if (s.tmp_4.fn === null) { s.tmp_4.arg0.fields["retain"] = s.tmp_4.arg1; }
      else if (s.tmp_4.fn === undefined) { failedCast(s.tmp_4.arg0) } 
     else { s.pc = 21; return s.tmp_4; }
    }
  case 21:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = (s.arg0).fields["opt"] = (s.arg1);
    s.tmp_0 = r0 = s.arg0;
    r0 = globals.net_Net_instance___165370;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["net"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_Client_constructor__P165617.info = {"start":9965,"length":581,"line":322,"column":8,"endLine":339,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":["this","opt"]}

function mqtt_Client_constructor__P165617_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_Client_constructor__P165617, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function mqtt_EventEmitter_constructor__P165603(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, mqtt_EventEmitter__C165600_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
mqtt_EventEmitter_constructor__P165603.info = {"start":8708,"length":57,"line":274,"column":8,"endLine":276,"endColumn":9,"fileName":"pxt_modules/mqtt/mqtt.ts","functionName":"inline","argumentNames":["this"]}

function mqtt_EventEmitter_constructor__P165603_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mqtt_EventEmitter_constructor__P165603, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function settings_SecretStore_constructor__P165308(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, settings_SecretStore__C165302_VT)) failedCast(r0);
    r0 = (s.arg0).fields["key"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_SecretStore_constructor__P165308.info = {"start":4521,"length":36,"line":182,"column":8,"endLine":182,"endColumn":44,"fileName":"pxt_modules/settings/settings.ts","functionName":"inline","argumentNames":["this","key"]}

function settings_SecretStore_constructor__P165308_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_SecretStore_constructor__P165308, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function settings_SecretStore_readSecret__P165305(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.secrets___168088 = undefined;
    s.secret___168091 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, settings_SecretStore__C165302_VT)) failedCast(r0);
    s.tmp_0 = settings_SecretStore_readSecrets__P165307_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.secrets___168088 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(s.secrets___168088, s.arg1);
    s.secret___168091 = (r0);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.secret___168091);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("missing secret ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim.control.dmesg(s.tmp_3);
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    r0 = s.secret___168091;
    return leave(s, r0)
  default: oops()
} } }
settings_SecretStore_readSecret__P165305.info = {"start":5135,"length":365,"line":200,"column":8,"endLine":208,"endColumn":9,"fileName":"pxt_modules/settings/settings.ts","functionName":"readSecret","argumentNames":["this","name","ensure"]}

function settings_SecretStore_readSecret__P165305_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_SecretStore_readSecret__P165305, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  secrets___168088: undefined,
  secret___168091: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function settings_SecretStore_readSecrets__P165307(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.src___168113 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, settings_SecretStore__C165302_VT)) failedCast(r0);
    r0 = pxsim_pxtcore.beginTry(5);
    s.tmp_1 = settings_readString__P165293_mk(s);
    r0 = s.arg0.fields["key"];
    s.tmp_1.arg0 = r0;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = "{}";
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.src___168113 = (s.tmp_2);
    s.tmp_1 = JSON_parse__P165134_mk(s);
    s.tmp_1.arg0 = s.src___168113;
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_pxtrt.mkMap();
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    { step = 7; continue; }
    r0 = pxsim_pxtcore.endTry();
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.dmesg("invalid secret format");
    r0 = pxsim_pxtrt.mkMap();
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_SecretStore_readSecrets__P165307.info = {"start":5587,"length":270,"line":214,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/settings/settings.ts","functionName":"readSecrets","argumentNames":["this"]}

function settings_SecretStore_readSecrets__P165307_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_SecretStore_readSecrets__P165307, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  src___168113: undefined,
  arg0: undefined,
} }





function settings_readString__P165293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___168126 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    s.buf___168126 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.buf___168126);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = pxsim.BufferMethods.toString(s.buf___168126);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P165293.info = {"start":2649,"length":177,"line":103,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P165293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P165293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___168126: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P165292(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P165292.info = {"start":2516,"length":72,"line":96,"column":4,"endLine":98,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P165292_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P165292, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function JSON_stringify__P165133(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ss___168143 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(JSON_Stringifier__C165130_VT);
    s.ss___168143 = (r0);
    s.tmp_0 = r0 = s.ss___168143;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["currIndent"] = (s.tmp_1);
    r0 = (s.arg2 | 0);
    s.arg2 = (r0);
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg2 = (0);
  case 1:
  case 2:
    r0 = (s.arg2 > 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.arg2 = (10);
  case 3:
  case 4:
    s.tmp_0 = r0 = s.ss___168143;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["indentStep"] = (s.tmp_1);
    s.tmp_0 = r0 = s.ss___168143;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["currIndent"] = (s.tmp_1);
    r0 = (s.ss___168143).fields["indent"] = (s.arg2);
  case 5:
    s.tmp_0 = r0 = s.arg2;
    r0 = (s.tmp_0 - 1);
    s.arg2 = (r0);
    r0 = (s.tmp_0 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 6; continue; }
    s.tmp_2 = r0 = s.ss___168143;
    r0 = s.tmp_2.fields["indentStep"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, " ");
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["indentStep"] = (s.tmp_3);
    { step = 5; continue; }
  case 6:
    s.tmp_0 = JSON_Stringifier_go__P165132_mk(s);
    s.tmp_0.arg0 = s.ss___168143;
    s.tmp_0.arg1 = s.arg0;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
JSON_stringify__P165133.info = {"start":8773,"length":414,"line":288,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/base/json.ts","functionName":"stringify","argumentNames":["value","replacer","indent"]}

function JSON_stringify__P165133_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_stringify__P165133, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  ss___168143: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function JSON_Stringifier_go__P165132(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.t___168184 = undefined;
    s.arr___168208 = undefined;
    s.r___168214 = undefined;
    s.i___168231 = undefined;
    s.keys___168295 = undefined;
    s.r___168302 = undefined;
    s.i___168319 = undefined;
    s.k___168325 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Stringifier__C165130_VT)) failedCast(r0);
    r0 = pxsim_pxtcore.typeOf(s.arg1);
    s.t___168184 = (r0);
    r0 = (s.t___168184 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = JSON_Stringifier_doString__P165131_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.pc = 38; return s.tmp_1;
  case 38:
    r0 = s.retval;
    { step = 37; continue; }
    { step = 36; continue; }
  case 1:
    r0 = (s.t___168184 == "boolean");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = (s.t___168184 == "number");
  case 3:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 4; continue; }
    r0 = s.tmp_3;
    { step = 5; continue; }
  case 4:
    r0 = (s.arg1 == null);
  case 5:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_5 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 39);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 39:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    { step = 37; continue; }
    { step = 35; continue; }
  case 6:
    r0 = pxsim_Array_.isArray(s.arg1);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 19; continue; }
    s.arr___168208 = (s.arg1);
    r0 = pxsim_Array__length(s.arr___168208);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = "[]";
    { step = 37; continue; }
    { step = 18; continue; }
  case 7:
    s.r___168214 = ("[");
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["currIndent"];
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 40);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 40:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["indentStep"];
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 41);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 41:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["currIndent"] = (s.tmp_2);
    if ((s.r___168214) && (s.r___168214).vtable) {
    setupResume(s, 42);
    pxsim_String__stringConv(s.r___168214);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168214) + ""; }
  case 42:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.r___168214 = (r0);
  case 8:
  case 9:
    s.i___168231 = (0);
  case 10:
    s.tmp_1 = r0 = s.i___168231;
    r0 = pxsim_Array__length(s.arr___168208);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    if ((s.r___168214) && (s.r___168214).vtable) {
    setupResume(s, 43);
    pxsim_String__stringConv(s.r___168214);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168214) + ""; }
  case 43:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["currIndent"];
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_6 = r0;
    s.tmp_10 = JSON_Stringifier_go__P165132_mk(s);
    s.tmp_10.arg0 = s.arg0;
    r0 = pxsim_Array__getAt(s.arr___168208, s.i___168231);
    s.tmp_10.arg1 = r0;
    s.pc = 45; return s.tmp_10;
  case 45:
    r0 = s.retval;
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 46);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 46:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_8);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 47);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 47:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___168214 = (r0);
    s.tmp_1 = r0 = s.i___168231;
    r0 = pxsim_Array__length(s.arr___168208);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    if ((s.r___168214) && (s.r___168214).vtable) {
    setupResume(s, 48);
    pxsim_String__stringConv(s.r___168214);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168214) + ""; }
  case 48:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ",");
    s.r___168214 = (r0);
  case 11:
  case 12:
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    if ((s.r___168214) && (s.r___168214).vtable) {
    setupResume(s, 49);
    pxsim_String__stringConv(s.r___168214);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168214) + ""; }
  case 49:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "\n");
    s.r___168214 = (r0);
  case 13:
  case 14:
    r0 = (s.i___168231 + 1);
    s.i___168231 = (r0);
    { step = 10; continue; }
  case 15:
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = helpers_stringSlice__P164925_mk(s);
    r0 = s.arg0.fields["currIndent"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["indent"];
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = undefined;
    s.pc = 50; return s.tmp_3;
  case 50:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["currIndent"] = (s.tmp_2);
  case 16:
  case 17:
    if ((s.r___168214) && (s.r___168214).vtable) {
    setupResume(s, 51);
    pxsim_String__stringConv(s.r___168214);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168214) + ""; }
  case 51:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["currIndent"];
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 52);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 52:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "]");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 53);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 53:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___168214 = (r0);
    r0 = s.r___168214;
    { step = 37; continue; }
  case 18:
    { step = 34; continue; }
  case 19:
    r0 = pxsim_pxtrt.keysOf(s.arg1);
    s.keys___168295 = (r0);
    r0 = pxsim_Array__length(s.keys___168295);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = "{}";
    { step = 37; continue; }
  case 20:
  case 21:
    s.r___168302 = ("{");
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = s.tmp_1.fields["currIndent"];
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 54);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 54:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["indentStep"];
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 55);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 55:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["currIndent"] = (s.tmp_2);
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 56);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 56:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.r___168302 = (r0);
  case 22:
  case 23:
    s.i___168319 = (0);
  case 24:
    s.tmp_1 = r0 = s.i___168319;
    r0 = pxsim_Array__length(s.keys___168295);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = pxsim_Array__getAt(s.keys___168295, s.i___168319);
    s.k___168325 = (r0);
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 57);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 57:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["currIndent"];
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 58);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 58:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_7 = JSON_Stringifier_doString__P165131_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_7.arg1 = s.k___168325;
    s.pc = 59; return s.tmp_7;
  case 59:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 60);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 60:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_5);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 61);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 61:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___168302 = (r0);
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 62);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 62:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, ": ");
    s.r___168302 = (r0);
    { step = 26; continue; }
  case 25:
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 63);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 63:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ":");
    s.r___168302 = (r0);
  case 26:
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 64);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 64:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = JSON_Stringifier_go__P165132_mk(s);
    s.tmp_3.arg0 = s.arg0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.arg1, s.k___168325);
    s.tmp_3.arg1 = r0;
    s.pc = 65; return s.tmp_3;
  case 65:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 66);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 66:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___168302 = (r0);
    s.tmp_1 = r0 = s.i___168319;
    r0 = pxsim_Array__length(s.keys___168295);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 67);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 67:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ",");
    s.r___168302 = (r0);
  case 27:
  case 28:
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 29; continue; }
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 68);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 68:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "\n");
    s.r___168302 = (r0);
  case 29:
  case 30:
    r0 = (s.i___168319 + 1);
    s.i___168319 = (r0);
    { step = 24; continue; }
  case 31:
    r0 = s.arg0.fields["indent"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = helpers_stringSlice__P164925_mk(s);
    r0 = s.arg0.fields["currIndent"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["indent"];
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = undefined;
    s.pc = 69; return s.tmp_3;
  case 69:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["currIndent"] = (s.tmp_2);
  case 32:
  case 33:
    if ((s.r___168302) && (s.r___168302).vtable) {
    setupResume(s, 70);
    pxsim_String__stringConv(s.r___168302);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168302) + ""; }
  case 70:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["currIndent"];
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 71);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 71:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "}");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 72);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 72:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___168302 = (r0);
    r0 = s.r___168302;
    { step = 37; continue; }
  case 34:
  case 35:
  case 36:
    r0 = undefined;
  case 37:
    return leave(s, r0)
  default: oops()
} } }
JSON_Stringifier_go__P165132.info = {"start":6319,"length":2076,"line":223,"column":8,"endLine":279,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"go","argumentNames":["this","v"]}

function JSON_Stringifier_go__P165132_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Stringifier_go__P165132, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  t___168184: undefined,
  arr___168208: undefined,
  r___168214: undefined,
  i___168231: undefined,
  keys___168295: undefined,
  r___168302: undefined,
  i___168319: undefined,
  k___168325: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function JSON_Stringifier_doString__P165131(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___168411 = undefined;
    s.i___168412 = undefined;
    s.c___168418 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, JSON_Stringifier__C165130_VT)) failedCast(r0);
    s.r___168411 = ("\"");
    s.i___168412 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___168412;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = pxsim_String_.charAt(s.arg1, s.i___168412);
    s.c___168418 = (r0);
    r0 = (s.c___168418 == "\n");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.c___168418 = ("\\n");
    { step = 13; continue; }
  case 2:
    r0 = (s.c___168418 == "\r");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.c___168418 = ("\\r");
    { step = 12; continue; }
  case 3:
    r0 = (s.c___168418 == "\t");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.c___168418 = ("\\t");
    { step = 11; continue; }
  case 4:
    r0 = (s.c___168418 == "\b");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.c___168418 = ("\\b");
    { step = 10; continue; }
  case 5:
    r0 = (s.c___168418 == "\\");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.c___168418 = ("\\\\");
    { step = 9; continue; }
  case 6:
    r0 = (s.c___168418 == "\"");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.c___168418 = ("\\\"");
  case 7:
  case 8:
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
    if ((s.r___168411) && (s.r___168411).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.r___168411);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168411) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.c___168418) && (s.c___168418).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.c___168418);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.c___168418) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___168411 = (r0);
    r0 = (s.i___168412 + 1);
    s.i___168412 = (r0);
    { step = 1; continue; }
  case 14:
    if ((s.r___168411) && (s.r___168411).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.r___168411);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___168411) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\"");
    return leave(s, r0)
  default: oops()
} } }
JSON_Stringifier_doString__P165131.info = {"start":5837,"length":472,"line":208,"column":8,"endLine":221,"endColumn":9,"fileName":"pxt_modules/base/json.ts","functionName":"doString","argumentNames":["this","s"]}

function JSON_Stringifier_doString__P165131_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: JSON_Stringifier_doString__P165131, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  r___168411: undefined,
  i___168412: undefined,
  c___168418: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function azureiot_onMessageReceived__P165637(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___168454 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = azureiot_mqttClient__P165627_mk(s);
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.c___168454 = (r0);
    r0 = pxsim_numops_toBoolDecr(globals._receiveHandler___165624);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = mqtt_Client_subscribe__P165613_mk(s);
    s.tmp_2.arg0 = s.c___168454;
    s.tmp_6 = if_clientId_1_mk(s);
    r0 = s.c___168454.fields["opt"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "clientId");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["clientId"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["clientId"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.pc = 5; return s.tmp_6; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("devices/", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "/messages/devicebound/#");
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = azureiot_handleDeviceBound__P165639;
    s.tmp_2.arg3 = 0;
    s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    globals._receiveHandler___165624 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
azureiot_onMessageReceived__P165637.info = {"start":4369,"length":546,"line":145,"column":4,"endLine":158,"endColumn":5,"fileName":"azureiot.ts","functionName":"onMessageReceived","argumentNames":["handler"]}

function azureiot_onMessageReceived__P165637_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_onMessageReceived__P165637, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  c___168454: undefined,
  arg0: undefined,
} }





function azureiot_handleDeviceBound__P165639(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.props___168475 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals._receiveHandler___165624);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_2 = azureiot_parseTopicArgs__P165638_mk(s);
    s.tmp_3 = if_topic_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "topic");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["topic"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["topic"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.pc = 5; return s.tmp_3; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.props___168475 = (r0);
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = globals._receiveHandler___165624;
    s.tmp_0.arg0 = s.props___168475;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
azureiot_handleDeviceBound__P165639.info = {"start":5113,"length":240,"line":167,"column":4,"endLine":172,"endColumn":5,"fileName":"azureiot.ts","functionName":"handleDeviceBound","argumentNames":["packet"]}

function azureiot_handleDeviceBound__P165639_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_handleDeviceBound__P165639, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  props___168475: undefined,
  arg0: undefined,
} }





function azureiot_connect__P165633(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.c___168482 = undefined;
    s.tmp_0 = azureiot_mqttClient__P165627_mk(s);
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.c___168482 = (r0);
    r0 = s.c___168482.fields["connected"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    setupResume(s, 4);
    pxsim.control.waitForEvent(globals._messageBusId___165623, 1);
    checkResumeConsumed();
    return;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
azureiot_connect__P165633.info = {"start":3044,"length":196,"line":98,"column":4,"endLine":103,"endColumn":5,"fileName":"azureiot.ts","functionName":"connect","argumentNames":[]}

function azureiot_connect__P165633_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: azureiot_connect__P165633, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  c___168482: undefined,
} }





function net_instance__P165371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = globals.net_Net_instance___165370;
    return leave(s, r0)
  default: oops()
} } }
net_instance__P165371.info = {"start":2869,"length":72,"line":99,"column":4,"endLine":101,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"instance","argumentNames":[]}

function net_instance__P165371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_instance__P165371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function net_Net_controller__P165365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Net__C165364_VT)) failedCast(r0);
    r0 = s.arg0.fields["_controller"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = net_log__P165357_mk(s);
    s.tmp_2.arg0 = "init controller";
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = if_factory_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "factory"), 1);
      s.pc = 6; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["factory"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["factory"], 1); s.pc = 6; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.pc = 6; return s.tmp_2;; }
     else { s.pc = 6; return s.tmp_2; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_controller"] = (s.tmp_1);
    r0 = s.arg0.fields["_controller"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_log__P165357_mk(s);
    s.tmp_3.arg0 = "controller not found";
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    r0 = (s.arg0).fields["_controller"] = (null);
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = s.arg0.fields["_controller"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
net_Net_controller__P165365.info = {"start":1536,"length":395,"line":55,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/net/net.ts","functionName":"controller","argumentNames":["this"]}
net_Net_controller__P165365.isGetter = true;

function net_Net_controller__P165365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Net_controller__P165365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function net_log__P165357(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_add__P165110_mk(s);
    s.tmp_0.arg0 = globals.logPriority___165356;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("net:", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_log__P165357.info = {"start":238,"length":88,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"log","argumentNames":["msg"]}

function net_log__P165357_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_log__P165357, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function console_log__P165114(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_add__P165110_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_0.arg1 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P165114.info = {"start":1450,"length":86,"line":58,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P165114_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P165114, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function esp32_defaultController__P165398(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.cs___168527 = undefined;
    s.busy___168532 = undefined;
    s.reset___168537 = undefined;
    s.gpio0___168542 = undefined;
    s.mosi___168558 = undefined;
    s.miso___168563 = undefined;
    s.sck___168568 = undefined;
    s.spi___168573 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals._defaultController___165397);
    if (!r0) { step = 1; continue; }
    r0 = globals._defaultController___165397;
    { step = 29; continue; }
  case 1:
  case 2:
    r0 = pxsim.pins.pinByCfg(87);
    s.cs___168527 = (r0);
    r0 = pxsim.pins.pinByCfg(88);
    s.busy___168532 = (r0);
    r0 = pxsim.pins.pinByCfg(89);
    s.reset___168537 = (r0);
    r0 = pxsim.pins.pinByCfg(90);
    s.gpio0___168542 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.cs___168527);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.busy___168532);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_7;
    { step = 6; continue; }
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.reset___168537);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_8);
  case 6:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_11);
    if (!r0) { step = 21; continue; }
    r0 = pxsim.pins.pinByCfg(82);
    s.mosi___168558 = (r0);
    r0 = pxsim.pins.pinByCfg(83);
    s.miso___168563 = (r0);
    r0 = pxsim.pins.pinByCfg(84);
    s.sck___168568 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.mosi___168558);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_numops_toBoolDecr(s.miso___168563);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_3;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_numops_toBoolDecr(s.sck___168568);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 10:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 11; continue; }
    s.tmp_6 = pins_spi__P165208_mk(s);
    s.pc = 30; return s.tmp_6;
  case 30:
    r0 = s.retval;
    s.spi___168573 = (r0);
    { step = 18; continue; }
  case 11:
    s.tmp_0 = r0 = s.mosi___168558;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    r0 = s.miso___168563;
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 14; continue; }
    r0 = s.tmp_1;
    { step = 15; continue; }
  case 14:
    r0 = s.sck___168568;
  case 15:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 16; continue; }
    r0 = pxsim.pins.createSPI(s.mosi___168558, s.miso___168563, s.sck___168568);
    s.spi___168573 = (r0);
    { step = 17; continue; }
  case 16:
    s.tmp_0 = net_log__P165357_mk(s);
    s.tmp_0.arg0 = "esp32 spi configuration error";
    s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    r0 = pxsim_pxtrt.panic(90);
  case 17:
  case 18:
    r0 = pxsim_numops_toBoolDecr(s.spi___168573);
    if (!r0) { step = 19; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(esp32_NinaController__C165533_VT);
    s.tmp_0 = r0;
    s.tmp_1 = esp32_NinaController_constructor__P165583_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.spi___168573;
    s.tmp_1.arg2 = s.cs___168527;
    s.tmp_1.arg3 = s.busy___168532;
    s.tmp_1.arg4 = s.reset___168537;
    s.tmp_1.arg5 = s.gpio0___168542;
    s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    globals._defaultController___165397 = (s.tmp_0);
    r0 = s.tmp_0;
    { step = 29; continue; }
  case 19:
  case 20:
    { step = 28; continue; }
  case 21:
    r0 = pxsim_numops_toBoolDecr(s.cs___168527);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 22; continue; }
    r0 = s.tmp_2;
    { step = 23; continue; }
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.busy___168532);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 23:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 24; continue; }
    r0 = s.tmp_5;
    { step = 25; continue; }
  case 24:
    r0 = pxsim_numops_toBoolDecr(s.reset___168537);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
  case 25:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 26; continue; }
    r0 = undefined;
    { step = 29; continue; }
    { step = 27; continue; }
  case 26:
    s.tmp_8 = net_log__P165357_mk(s);
    s.tmp_8.arg0 = "esp32 partially configured";
    s.pc = 33; return s.tmp_8;
  case 33:
    r0 = s.retval;
    r0 = pxsim_pxtrt.panic(90);
  case 27:
  case 28:
    s.tmp_0 = net_log__P165357_mk(s);
    s.tmp_0.arg0 = "esp32 configuration error";
    s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    r0 = pxsim_pxtrt.panic(90);
    r0 = undefined;
  case 29:
    return leave(s, r0)
  default: oops()
} } }
esp32_defaultController__P165398.info = {"start":66,"length":2003,"line":2,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/esp32/net.ts","functionName":"defaultController","argumentNames":[]}

function esp32_defaultController__P165398_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_defaultController__P165398, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  cs___168527: undefined,
  busy___168532: undefined,
  reset___168537: undefined,
  gpio0___168542: undefined,
  mosi___168558: undefined,
  miso___168563: undefined,
  sck___168568: undefined,
  spi___168573: undefined,
} }





function esp32_NinaController_constructor__P165583(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_spi"] = (s.arg1);
    r0 = (s.arg0).fields["_cs"] = (s.arg2);
    r0 = (s.arg0).fields["_busy"] = (s.arg3);
    r0 = (s.arg0).fields["_reset"] = (s.arg4);
    r0 = (s.arg0).fields["_gpio0"] = (s.arg5);
    r0 = undefined;
    r0 = s.arg0.fields["_busy"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.setPull(s.tmp_0, 0);
    r0 = s.arg0.fields["_busy"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = esp32_buffer1__P165532_mk(s);
    s.tmp_2.arg0 = 0;
    s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = (s.arg0).fields["_socknum_ll"] = (s.tmp_0);
    r0 = s.arg0.fields["_spi"];
    s.tmp_0 = r0;
    r0 = pxsim.SPIMethods.setFrequency(s.tmp_0, 8000000);
    s.tmp_0 = esp32_NinaController_reset__P165535_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["_locked"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_constructor__P165583.info = {"start":2637,"length":644,"line":80,"column":8,"endLine":96,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"inline","argumentNames":["this","_spi","_cs","_busy","_reset","_gpio0"]}

function esp32_NinaController_constructor__P165583_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_constructor__P165583, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function esp32_NinaController_reset__P165535(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_1, true);
  case 1:
  case 2:
    r0 = s.arg0.fields["_cs"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    r0 = s.arg0.fields["_reset"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, false);
    s.tmp_0 = pause__P165165_mk(s);
    s.tmp_0.arg0 = 10;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = s.arg0.fields["_reset"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    s.tmp_0 = pause__P165165_mk(s);
    s.tmp_0.arg0 = 750;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["_gpio0"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_1);
  case 3:
  case 4:
    s.tmp_0 = esp32_NinaController_spiTransfer__P165541_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBuffer(1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = null;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = net_log__P165357_mk(s);
    s.tmp_0.arg0 = "reseted esp32";
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_reset__P165535.info = {"start":3368,"length":574,"line":101,"column":8,"endLine":116,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"reset","argumentNames":["this"]}

function esp32_NinaController_reset__P165535_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_reset__P165535, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_spiTransfer__P165541(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.BufferMethods.length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_2);
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim.BufferMethods.length(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_2);
    s.arg2 = (r0);
  case 3:
  case 4:
    r0 = s.arg0.fields["_spi"];
    s.tmp_0 = r0;
    r0 = pxsim.SPIMethods.transfer(s.tmp_0, s.arg1, s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_spiTransfer__P165541.info = {"start":6899,"length":211,"line":207,"column":8,"endLine":211,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"spiTransfer","argumentNames":["this","tx","rx"]}

function esp32_NinaController_spiTransfer__P165541_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_spiTransfer__P165541, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_buffer1__P165532(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.b___168718 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.createBuffer(1);
    s.b___168718 = (r0);
    r0 = pxsim.BufferMethods.setByte(s.b___168718, 0, s.arg0);
    r0 = s.b___168718;
    return leave(s, r0)
  default: oops()
} } }
esp32_buffer1__P165532.info = {"start":2344,"length":113,"line":68,"column":4,"endLine":72,"endColumn":5,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"buffer1","argumentNames":["ch"]}

function esp32_buffer1__P165532_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_buffer1__P165532, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  b___168718: undefined,
  arg0: undefined,
} }





function net_Controller_constructor__P165328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_constructor__P165328.info = {"start":54,"length":17,"line":2,"column":8,"endLine":2,"endColumn":25,"fileName":"pxt_modules/net/controller.ts","functionName":"inline","argumentNames":["this"]}

function net_Controller_constructor__P165328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_constructor__P165328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function pins_spi__P165208(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.mosi___168729 = undefined;
    s.miso___168734 = undefined;
    s.sck___168739 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals._spi___165207);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.pins.pinByCfg(19);
    s.mosi___168729 = (r0);
    r0 = pxsim.pins.pinByCfg(18);
    s.miso___168734 = (r0);
    r0 = pxsim.pins.pinByCfg(23);
    s.sck___168739 = (r0);
    r0 = pxsim.pins.createSPI(s.mosi___168729, s.miso___168734, s.sck___168739);
    globals._spi___165207 = (r0);
  case 1:
  case 2:
    r0 = globals._spi___165207;
    return leave(s, r0)
  default: oops()
} } }
pins_spi__P165208.info = {"start":98,"length":305,"line":7,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/core/spi.ts","functionName":"spi","argumentNames":[]}

function pins_spi__P165208_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_spi__P165208, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  mosi___168729: undefined,
  miso___168734: undefined,
  sck___168739: undefined,
} }





function net_Net_constructor__P165369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Net__C165364_VT)) failedCast(r0);
    r0 = (s.arg0).fields["factory"] = (s.arg1);
    globals.net_Net_instance___165370 = (s.arg0);
    r0 = (s.arg0).fields["_controller"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Net_constructor__P165369.info = {"start":1333,"length":162,"line":48,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/net/net.ts","functionName":"inline","argumentNames":["this","factory"]}

function net_Net_constructor__P165369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Net_constructor__P165369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function settings_initScopes__P165285(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.rn___168756 = undefined;
    s.tmp_1 = settings_runNumber__P165283_mk(s);
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___168756 = (r0);
    s.tmp_0 = settings_writeNumber__P165290_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___165272;
    s.tmp_0.arg1 = s.rn___168756;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___168756);
    s.tmp_0 = settings_setScope__P165284_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P165285.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P165285_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P165285, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___168756: undefined,
} }





function settings_setScope__P165284(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.currScope___168785 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.tmp_0 = settings_readString__P165293_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___165273;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.currScope___168785 = (r0);
    r0 = (s.currScope___168785 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim.settings._userClean();
    s.tmp_0 = settings_writeString__P165289_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___165273;
    s.tmp_0.arg1 = s.arg0;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P165284.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P165284_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P165284, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___168785: undefined,
  arg0: undefined,
} }





function settings_writeString__P165289(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = settings_writeBuffer__P165288_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P165289.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P165289_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P165289, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P165288(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.settings._userClean();
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P165288.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P165288_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P165288, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeNumber__P165290(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P165288_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P164996_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P165290.info = {"start":2087,"length":122,"line":82,"column":4,"endLine":84,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P165290_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P165290, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P164996(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.off___168823 = undefined;
    s.n___168825 = undefined;
    s.unnamed666___U2 = undefined;
    s.unnamed667___U3 = undefined;
    s.buf___168835 = undefined;
    s.n___168841 = undefined;
    s.unnamed668___U6 = undefined;
    s.unnamed669___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.off___168823 = (0);
    s.n___168825 = (undefined);
    s.unnamed666___U2 = (s.arg0);
    s.unnamed667___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed667___U3;
    r0 = pxsim_Array__length(s.unnamed666___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed666___U2, s.unnamed667___U3);
    s.n___168825 = (r0);
    s.tmp_2 = r0 = s.off___168823;
    s.tmp_4 = msgpack_packNumberCore__P164994_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___168823;
    s.tmp_4.arg2 = s.n___168825;
    s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___168823 = (r0);
    r0 = (s.unnamed667___U3 + 1);
    s.unnamed667___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed666___U2 = (undefined);
    r0 = pxsim.control.createBuffer(s.off___168823);
    s.buf___168835 = (r0);
    s.off___168823 = (0);
    s.n___168841 = (undefined);
    s.unnamed668___U6 = (s.arg0);
    s.unnamed669___U7 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed669___U7;
    r0 = pxsim_Array__length(s.unnamed668___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed668___U6, s.unnamed669___U7);
    s.n___168841 = (r0);
    s.tmp_2 = r0 = s.off___168823;
    s.tmp_4 = msgpack_packNumberCore__P164994_mk(s);
    s.tmp_4.arg0 = s.buf___168835;
    s.tmp_4.arg1 = s.off___168823;
    s.tmp_4.arg2 = s.n___168841;
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___168823 = (r0);
    r0 = (s.unnamed669___U7 + 1);
    s.unnamed669___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed668___U6 = (undefined);
    r0 = s.buf___168835;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P164996.info = {"start":3427,"length":330,"line":117,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P164996_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P164996, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___168823: undefined,
  n___168825: undefined,
  unnamed666___U2: undefined,
  unnamed667___U3: undefined,
  buf___168835: undefined,
  n___168841: undefined,
  unnamed668___U6: undefined,
  unnamed669___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P164994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tag___168855 = undefined;
    s.fmt___168898 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.tag___168855 = (203);
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.tag___168855 = (204);
    { step = 11; continue; }
  case 8:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tag___168855 = (205);
    { step = 10; continue; }
  case 9:
    s.tag___168855 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tag___168855 = (208);
    { step = 16; continue; }
  case 13:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tag___168855 = (209);
    { step = 15; continue; }
  case 14:
    s.tag___168855 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.tmp_0 = msgpack_tagFormat__P164993_mk(s);
    s.tmp_0.arg0 = s.tag___168855;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.fmt___168898 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___168855);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___168898;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.tmp_1 = pins_sizeOf__P164986_mk(s);
    s.tmp_1.arg0 = s.fmt___168898;
    s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P164994.info = {"start":1632,"length":951,"line":56,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P164994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P164994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___168855: undefined,
  fmt___168898: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function pins_sizeOf__P164986(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Buffer_sizeOfNumberFormat__P165016_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P164986.info = {"start":42,"length":101,"line":2,"column":4,"endLine":4,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P164986_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P164986, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_sizeOfNumberFormat__P165016(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
Buffer_sizeOfNumberFormat__P165016.info = {"start":12009,"length":856,"line":411,"column":4,"endLine":435,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOfNumberFormat","argumentNames":["format"]}

function Buffer_sizeOfNumberFormat__P165016_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_sizeOfNumberFormat__P165016, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function msgpack_tagFormat__P164993(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P164993.info = {"start":1145,"length":481,"line":42,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P164993_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P164993, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function settings_runNumber__P165283(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_1 = settings_readNumber__P165294_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___165272;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P165283.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P165283_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P165283, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function settings_readNumber__P165294(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___168973 = undefined;
    s.nums___168980 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    s.buf___168973 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.buf___168973);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.tmp_2 = msgpack_unpackNumberArray__P164995_mk(s);
    s.tmp_2.arg0 = s.buf___168973;
    s.tmp_2.arg1 = 0;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.nums___168980 = (r0);
    s.tmp_0 = r0 = s.nums___168980;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___168980);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.nums___168980, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P165294.info = {"start":2887,"length":313,"line":114,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P165294_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P165294, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___168973: undefined,
  nums___168980: undefined,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P164995(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___168993 = undefined;
    s.fmt___169000 = undefined;
    s.v___169009 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___168993 = (r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P164993_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.fmt___169000 = (r0);
    r0 = (s.fmt___169000 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___169009 = (r0);
    r0 = (-31 <= s.v___169009);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___169009 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__push(s.res___168993, s.v___169009);
    { step = 5; continue; }
  case 4:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.tmp_0 = r0 = s.res___168993;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___169000, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P164986_mk(s);
    s.tmp_2.arg0 = s.fmt___169000;
    s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
  case 8:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    r0 = s.res___168993;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P164995.info = {"start":2650,"length":669,"line":91,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P164995_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P164995, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___168993: undefined,
  fmt___169000: undefined,
  v___169009: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_socket__P165569(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp0___169056 = undefined;
    s.resp___169060 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_3 = esp32_NinaController__C165533_v9_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, esp32_NinaController__C165533_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.connect;
    s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = net_fail__P165359_mk(s);
    s.tmp_4.arg0 = "can't connect";
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    s.tmp_0 = net_debug__P165358_mk(s);
    s.tmp_0.arg0 = "*** Get socket";
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 63;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.resp0___169056 = (r0);
    r0 = pxsim_Array__getAt(s.resp0___169056, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_0, 0);
    s.resp___169060 = (r0);
    r0 = (s.resp___169060 == 255);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = net_fail__P165359_mk(s);
    s.tmp_1.arg0 = "no sockets available";
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.resp___169060) && (s.resp___169060).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.resp___169060);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.resp___169060) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("Allocated socket #", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = s.resp___169060;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socket__P165569.info = {"start":18484,"length":425,"line":536,"column":8,"endLine":548,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socket","argumentNames":["this"]}

function esp32_NinaController_socket__P165569_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socket__P165569, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  resp0___169056: undefined,
  resp___169060: undefined,
  arg0: undefined,
} }





function esp32_NinaController_sendCommandGetResponse__P165545(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___169084 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_lock__P165543_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController__sendCommand__P165540_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg4;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController__waitResponseCmd__P165542_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg5;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.resp___169084 = (r0);
    s.tmp_0 = esp32_NinaController_unlock__P165544_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = s.resp___169084;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_sendCommandGetResponse__P165545.info = {"start":8733,"length":381,"line":262,"column":8,"endLine":270,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"sendCommandGetResponse","argumentNames":["this","cmd","params","reply_params","sent_param_len_16","recv_param_len_16"]}

function esp32_NinaController_sendCommandGetResponse__P165545_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_sendCommandGetResponse__P165545, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  resp___169084: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function esp32_NinaController_unlock__P165544(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = s.arg0.fields["_locked"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "not locked!";
    s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = (s.arg0).fields["_locked"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_unlock__P165544.info = {"start":8590,"length":133,"line":256,"column":8,"endLine":260,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"unlock","argumentNames":["this"]}

function esp32_NinaController_unlock__P165544_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_unlock__P165544, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function esp32_NinaController__waitResponseCmd__P165542(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.responses___169112 = undefined;
    s.num___169140 = undefined;
    s.param_len___169145 = undefined;
    s.response___169165 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    s.tmp_0.arg0 = "wait response cmd";
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_3 = esp32_NinaController_waitForReady__P165539_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 11; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["_cs"];
    s.tmp_4 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_4, false);
    r0 = pxsim_Array__mk();
    s.responses___169112 = (r0);
    s.tmp_3 = esp32_NinaController_waitSPIChar__P165538_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 224;
    s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["_cs"];
    s.tmp_4 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_4, true);
    r0 = null;
    { step = 11; continue; }
  case 3:
  case 4:
    s.tmp_0 = esp32_NinaController_checkData__P165537_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 | 128);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = undefined;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = (s.arg2 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = esp32_NinaController_checkData__P165537_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = esp32_NinaController_readByte__P165536_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.arg2 = (r0);
  case 6:
    s.num___169140 = (0);
  case 7:
    r0 = (s.num___169140 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_1 = esp32_NinaController_readByte__P165536_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
    s.param_len___169145 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 8; continue; }
    r0 = (s.param_len___169145 << 8);
    s.param_len___169145 = (r0);
    s.tmp_0 = r0 = s.param_len___169145;
    s.tmp_2 = esp32_NinaController_readByte__P165536_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 | s.tmp_1);
    s.param_len___169145 = (r0);
  case 8:
  case 9:
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.num___169140) && (s.num___169140).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.num___169140);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.num___169140) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("\tParameter #", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " length is ");
    s.tmp_1 = r0;
    if ((s.param_len___169145) && (s.param_len___169145).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.param_len___169145);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.param_len___169145) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_4);
    s.tmp_0.arg0 = r0;
    s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    r0 = pxsim.control.createBuffer(s.param_len___169145);
    s.response___169165 = (r0);
    s.tmp_0 = esp32_NinaController_spiTransfer__P165541_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = null;
    s.tmp_0.arg2 = s.response___169165;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.responses___169112, s.response___169165);
    r0 = (s.num___169140 + 1);
    s.num___169140 = (r0);
    { step = 7; continue; }
  case 10:
    s.tmp_0 = esp32_NinaController_checkData__P165537_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 238;
    s.tmp_0.arg2 = undefined;
    s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = s.arg0.fields["_cs"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    s.tmp_0 = net_debug__P165358_mk(s);
    r0 = pxsim_Array__length(s.responses___169112);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("responses ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    r0 = s.responses___169112;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController__waitResponseCmd__P165542.info = {"start":7120,"length":1295,"line":213,"column":8,"endLine":247,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"_waitResponseCmd","argumentNames":["this","cmd","num_responses","param_len_16"]}

function esp32_NinaController__waitResponseCmd__P165542_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController__waitResponseCmd__P165542, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  responses___169112: undefined,
  num___169140: undefined,
  param_len___169145: undefined,
  response___169165: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function esp32_NinaController_readByte__P165536(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___169194 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_buffer1__P165532_mk(s);
    s.tmp_0.arg0 = 0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.r___169194 = (r0);
    s.tmp_0 = esp32_NinaController_spiTransfer__P165541_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = null;
    s.tmp_0.arg2 = s.r___169194;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.BufferMethods.getByte(s.r___169194, 0);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_readByte__P165536.info = {"start":3952,"length":133,"line":118,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"readByte","argumentNames":["this"]}

function esp32_NinaController_readByte__P165536_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_readByte__P165536, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  r___169194: undefined,
  arg0: undefined,
} }





function esp32_NinaController_checkData__P165537(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.r___169205 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_readByte__P165536_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.r___169205 = (r0);
    r0 = (s.r___169205 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.mkEmpty();
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = net_fail__P165359_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat("Expected ", s.tmp_9);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, " but got ");
    s.tmp_7 = r0;
    if ((s.r___169205) && (s.r___169205).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.r___169205);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___169205) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_10);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, "; ");
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_11);
    s.tmp_3.arg0 = r0;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_checkData__P165537.info = {"start":4095,"length":240,"line":124,"column":8,"endLine":129,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"checkData","argumentNames":["this","desired","msg"]}

function esp32_NinaController_checkData__P165537_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_checkData__P165537, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  r___169205: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_waitSPIChar__P165538(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.times___169232 = undefined;
    s.r___169241 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = pxsim.control.millis();
    s.times___169232 = (r0);
  case 1:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.times___169232);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 100);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = esp32_NinaController_readByte__P165536_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.r___169241 = (r0);
    r0 = (s.r___169241 == 239);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = net_log__P165357_mk(s);
    s.tmp_1.arg0 = "error response to command";
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = false;
    { step = 7; continue; }
  case 2:
  case 3:
    r0 = (s.r___169241 == s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = true;
    { step = 7; continue; }
  case 4:
  case 5:
    { step = 1; continue; }
  case 6:
    s.tmp_1 = net_log__P165357_mk(s);
    s.tmp_1.arg0 = "timed out waiting for SPI char";
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_waitSPIChar__P165538.info = {"start":4437,"length":582,"line":132,"column":8,"endLine":148,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"waitSPIChar","argumentNames":["this","desired"]}

function esp32_NinaController_waitSPIChar__P165538_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_waitSPIChar__P165538, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  times___169232: undefined,
  r___169241: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_waitForReady__P165539(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    r0 = s.arg0.fields["_busy"];
    s.tmp_3 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_3);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("wait for ready ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = s.arg0.fields["_busy"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P169265);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    s.tmp_3 = pauseUntil__P165104_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    s.tmp_3.arg1 = 10000;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_0 = net_debug__P165358_mk(s);
    r0 = s.arg0.fields["_busy"];
    s.tmp_3 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_3);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("busy = ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = s.arg0.fields["_busy"];
    s.tmp_1 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = net_log__P165357_mk(s);
    s.tmp_2.arg0 = "timed out waiting for ready";
    s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_waitForReady__P165539.info = {"start":5098,"length":492,"line":153,"column":8,"endLine":166,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"waitForReady","argumentNames":["this"]}

function esp32_NinaController_waitForReady__P165539_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_waitForReady__P165539, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P169265(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["_busy"];
    s.tmp_2 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalRead(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P169265.info = {"start":5263,"length":31,"line":156,"column":27,"endLine":156,"endColumn":58,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"inline","argumentNames":[]}

function inline__P169265_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P169265, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function pauseUntil__P165104(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.arg1 = (0);
  case 5:
  case 6:
    s.tmp_0 = control___queuePollEvent__P165103_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P165104.info = {"start":2205,"length":227,"line":73,"column":0,"endLine":77,"endColumn":1,"fileName":"pxt_modules/base/poll.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P165104_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P165104, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P165103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ev___169300 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C165098_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P165099_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 1;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.ev___169300 = (s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___165101);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___169300);
    globals._pollEventQueue___165101 = (s.tmp_2);
    r0 = pxsim.control.runInParallel(control_pollEvents__P165102);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__push(globals._pollEventQueue___165101, s.ev___169300);
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = control_onEvent__P165136_mk(s);
    r0 = s.ev___169300.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___169300.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = s.ev___169300.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___169300.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 7);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 7:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P165103.info = {"start":1262,"length":739,"line":39,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P165103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P165103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___169300: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_onEvent__P165136(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ctx___169342 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = control_eventContext__P165159_mk(s);
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.ctx___169342 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.ctx___169342);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = control_EventContext_registerHandler__P165151_mk(s);
    s.tmp_0.arg0 = s.ctx___169342;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P165136.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P165136_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P165136, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___169342: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_EventContext_registerHandler__P165151(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.h___169365 = undefined;
    s.unnamed674___U1 = undefined;
    s.unnamed675___U2 = undefined;
    s.hn___169388 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C165143_VT)) failedCast(r0);
    s.h___169365 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed674___U1 = (r0);
    s.unnamed675___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed675___U2;
    r0 = pxsim_Array__length(s.unnamed674___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed674___U1, s.unnamed675___U2);
    s.h___169365 = (r0);
    r0 = s.h___169365.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___169365.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    r0 = (s.h___169365).fields["flags"] = (s.arg4);
    r0 = (s.h___169365).fields["handler"] = (s.arg3);
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed675___U2 + 1);
    s.unnamed675___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed674___U1 = (undefined);
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C165138_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P165141_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.hn___169388 = (s.tmp_0);
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___169388);
    s.tmp_0 = control_EventHandler_register__P165139_mk(s);
    s.tmp_0.arg0 = s.hn___169388;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P165151.info = {"start":5471,"length":525,"line":166,"column":8,"endLine":179,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P165151_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P165151, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___169365: undefined,
  unnamed674___U1: undefined,
  unnamed675___U2: undefined,
  hn___169388: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_register__P165139(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C165138_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P169409);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P165139.info = {"start":961,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P165139_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P165139, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function inline__P169409(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_handler_1_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "handler"), 1);
      s.pc = 3; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["handler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["handler"], 1); s.pc = 3; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 3; return s.tmp_1;; }
     else { s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P169409.info = {"start":1032,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function inline__P169409_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P169409, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventHandler_constructor__P165141(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C165138_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P165141.info = {"start":786,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P165141_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P165141, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_eventContext__P165159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___165158);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___165158;
    r0 = pxsim_Array__length(globals.eventContexts___165158);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P165159.info = {"start":6805,"length":136,"line":206,"column":4,"endLine":208,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P165159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P165159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_pollEvents__P165102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.now___169426 = undefined;
    s.i___169429 = undefined;
    s.ev___169435 = undefined;
  case 1:
    r0 = pxsim_Array__length(globals._pollEventQueue___165101);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = pxsim.control.millis();
    s.now___169426 = (r0);
    s.i___169429 = (0);
  case 2:
    s.tmp_1 = r0 = s.i___169429;
    r0 = pxsim_Array__length(globals._pollEventQueue___165101);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = pxsim_Array__getAt(globals._pollEventQueue___165101, s.i___169429);
    s.ev___169435 = (r0);
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.ev___169435;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.pc = 13; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.pc = 13; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 13; return s.tmp_1;; }
     else { s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___169435.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___169435.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___169426 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___169435.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    r0 = s.ev___169435.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___169435.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    r0 = s.ev___169435.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = helpers_arraySplice__P164906_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___165101;
    s.tmp_1.arg1 = s.i___169429;
    s.tmp_1.arg2 = 1;
    s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    r0 = (s.i___169429 - 1);
    s.i___169429 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = (s.i___169429 + 1);
    s.i___169429 = (r0);
    { step = 2; continue; }
  case 11:
    s.tmp_0 = pause__P165165_mk(s);
    s.tmp_0.arg0 = 50;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    globals._pollEventQueue___165101 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P165102.info = {"start":618,"length":638,"line":20,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P165102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P165102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___169426: undefined,
  i___169429: undefined,
  ev___169435: undefined,
} }





function helpers_arraySplice__P164906(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.i___169484 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.i___169484 = (0);
  case 3:
    r0 = (s.i___169484 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    r0 = (s.i___169484 + 1);
    s.i___169484 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P164906.info = {"start":3642,"length":213,"line":137,"column":4,"endLine":144,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P164906_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P164906, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___169484: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_PollEvent_constructor__P165099(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C165098_VT)) failedCast(r0);
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    r0 = (s.arg0).fields["start"] = (s.arg3);
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P165099.info = {"start":239,"length":316,"line":8,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/base/poll.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P165099_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P165099, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function esp32_NinaController__sendCommand__P165540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.n___169530 = undefined;
    s.packet___169554 = undefined;
    s.k___169558 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.n___169530 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.n___169530, 3);
    r0 = pxsim_pxtcore_mkAction(2, inline__P169533);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg3);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.n___169530);
    s.tmp_1 = helpers_arrayForEach__P164917_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0 = s.n___169530;
    r0 = pxsim_pxtrt_ldlocRef(s.n___169530);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 3:
    r0 = pxsim_pxtrt_ldlocRef(s.n___169530);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 % 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = r0 = s.n___169530;
    r0 = pxsim_pxtrt_ldlocRef(s.n___169530);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    { step = 3; continue; }
  case 4:
    r0 = pxsim_pxtrt_ldlocRef(s.n___169530);
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.packet___169554 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.k___169558 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.k___169558, 0);
    s.tmp_0 = r0 = s.k___169558;
    r0 = pxsim_pxtrt_ldlocRef(s.k___169558);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim.BufferMethods.setByte(s.packet___169554, s.tmp_2, 224);
    s.tmp_0 = r0 = s.k___169558;
    r0 = pxsim_pxtrt_ldlocRef(s.k___169558);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.packet___169554;
    r0 = (s.arg1 & -129);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
    s.tmp_0 = r0 = s.k___169558;
    r0 = pxsim_pxtrt_ldlocRef(s.k___169558);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.packet___169554;
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
    r0 = pxsim_pxtcore_mkAction(3, inline__P169583);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg3);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.packet___169554);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.k___169558);
    s.tmp_1 = helpers_arrayForEach__P164917_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0 = s.k___169558;
    r0 = pxsim_pxtrt_ldlocRef(s.k___169558);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim.BufferMethods.setByte(s.packet___169554, s.tmp_2, 238);
  case 5:
    r0 = pxsim_pxtrt_ldlocRef(s.k___169558);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.n___169530);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = r0 = s.k___169558;
    r0 = pxsim_pxtrt_ldlocRef(s.k___169558);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + 1);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_3, s.tmp_4);
    r0 = pxsim.BufferMethods.setByte(s.packet___169554, s.tmp_5, 255);
    { step = 5; continue; }
  case 6:
    s.tmp_0 = net_debug__P165358_mk(s);
    r0 = pxsim.BufferMethods.toHex(s.packet___169554);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("send cmd ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_3 = esp32_NinaController_waitForReady__P165539_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = false;
    { step = 9; continue; }
  case 7:
  case 8:
    r0 = s.arg0.fields["_cs"];
    s.tmp_4 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_4, false);
    s.tmp_0 = esp32_NinaController_spiTransfer__P165541_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.packet___169554;
    s.tmp_0.arg2 = null;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = s.arg0.fields["_cs"];
    s.tmp_0 = r0;
    r0 = pxsim.DigitalInOutPinMethods.digitalWrite(s.tmp_0, true);
    s.tmp_0 = net_debug__P165358_mk(s);
    s.tmp_0.arg0 = "send done";
    s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = true;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController__sendCommand__P165540.info = {"start":5600,"length":1289,"line":168,"column":8,"endLine":205,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"_sendCommand","argumentNames":["this","cmd","params","param_len_16"]}

function esp32_NinaController__sendCommand__P165540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController__sendCommand__P165540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  n___169530: undefined,
  packet___169554: undefined,
  k___169558: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function inline__P169533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.caps[0]);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_0);
    s.tmp_5 = r0;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P169533.info = {"start":5826,"length":88,"line":173,"column":27,"endLine":175,"endColumn":13,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"inline","argumentNames":["param"]}

function inline__P169533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P169533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function inline__P169583(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.caps[0]);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.caps[1];
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 8);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 255);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
  case 1:
  case 2:
    s.tmp_0 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_3 = r0 = s.caps[1];
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 255);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_3, s.tmp_2, s.tmp_4);
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_0, s.tmp_1, s.arg0);
    s.tmp_0 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P169583.info = {"start":6230,"length":246,"line":186,"column":27,"endLine":192,"endColumn":13,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"inline","argumentNames":["param"]}

function inline__P169583_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P169583, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function esp32_NinaController_lock__P165543(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
  case 1:
    r0 = s.arg0.fields["_locked"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P169658);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = pauseUntil__P165104_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    { step = 1; continue; }
  case 2:
    r0 = (s.arg0).fields["_locked"] = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_lock__P165543.info = {"start":8425,"length":155,"line":249,"column":8,"endLine":254,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"lock","argumentNames":["this"]}

function esp32_NinaController_lock__P165543_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_lock__P165543, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function inline__P169658(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["_locked"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
inline__P169658.info = {"start":8504,"length":19,"line":251,"column":27,"endLine":251,"endColumn":46,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"inline","argumentNames":[]}

function inline__P169658_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P169658, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function net_debug__P165358(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (globals.logPriority___165356 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = console_add__P165110_mk(s);
    s.tmp_1.arg0 = 0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("net:", s.tmp_2);
    s.tmp_1.arg1 = r0;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_debug__P165358.info = {"start":331,"length":153,"line":14,"column":4,"endLine":17,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"debug","argumentNames":["msg"]}

function net_debug__P165358_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_debug__P165358, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function net_fail__P165359(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = net_log__P165357_mk(s);
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("error: ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore.throwValue(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_fail__P165359.info = {"start":489,"length":103,"line":18,"column":4,"endLine":21,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"fail","argumentNames":["reason"]}

function net_fail__P165359_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_fail__P165359, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_ping__P165568(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ip___169691 = undefined;
    s.resp___169699 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_3 = esp32_NinaController__C165533_v9_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, esp32_NinaController__C165533_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.connect;
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = -1;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_4 = esp32_NinaController__C165533_v7_2_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_4.arg0, esp32_NinaController__C165533_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.hostbyName;
    s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.ip___169691 = (r0);
    s.tmp_0 = Math_max__P164935_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_min__P164936_mk(s);
    r0 = (s.arg2 | 0);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 255;
    s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.arg2 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ip___169691);
    s.tmp_2 = esp32_buffer1__P165532_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_3 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 62;
    s.tmp_3.arg2 = s.tmp_0;
    s.tmp_3.arg3 = 1;
    s.tmp_3.arg4 = false;
    s.tmp_3.arg5 = false;
    s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.resp___169699 = (r0);
    s.tmp_1 = pins_unpackBuffer__P164991_mk(s);
    s.tmp_1.arg0 = "<H";
    r0 = pxsim_Array__getAt(s.resp___169699, 0);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, 0);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_ping__P165568.info = {"start":17888,"length":443,"line":520,"column":8,"endLine":531,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"ping","argumentNames":["this","dest","ttl"]}

function esp32_NinaController_ping__P165568_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_ping__P165568, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ip___169691: undefined,
  resp___169699: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function pins_unpackBuffer__P164991(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_bufferUnpack__P165000_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_unpackBuffer__P164991.info = {"start":717,"length":119,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackBuffer","argumentNames":["format","buf","offset"]}

function pins_unpackBuffer__P164991_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_unpackBuffer__P164991, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_bufferUnpack__P165000(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___169723 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg2 = (0);
  case 1:
  case 2:
    r0 = pxsim_Array__mk();
    s.res___169723 = (r0);
    s.tmp_0 = Buffer___packUnpackCore__P165015_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.res___169723;
    s.tmp_0.arg2 = s.arg0;
    s.tmp_0.arg3 = false;
    s.tmp_0.arg4 = s.arg2;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.res___169723;
    return leave(s, r0)
  default: oops()
} } }
helpers_bufferUnpack__P165000.info = {"start":4698,"length":229,"line":165,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"bufferUnpack","argumentNames":["buf","format","offset"]}

function helpers_bufferUnpack__P165000_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_bufferUnpack__P165000, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___169723: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Buffer___packUnpackCore__P165015(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.isBig___169736 = undefined;
    s.idx___169737 = undefined;
    s.i___169738 = undefined;
    s.i0___169751 = undefined;
    s.reps___169759 = undefined;
    s.fmt___169773 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.isBig___169736 = (false);
    s.idx___169737 = (0);
    s.i___169738 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___169738;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_String_.charAt(s.arg0, s.i___169738);
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(" ", s.tmp_3);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("<", s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("=", s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(">", s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq("!", s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("x", s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 2:
  case 3:
  case 4:
    s.isBig___169736 = (false);
    { step = 21; continue; }
  case 5:
  case 6:
    s.isBig___169736 = (true);
    { step = 21; continue; }
  case 7:
    r0 = (s.arg4 + 1);
    s.arg4 = (r0);
    { step = 21; continue; }
  case 8:
    s.i0___169751 = (s.i___169738);
  case 9:
    s.tmp_1 = Buffer_isDigit__P165014_mk(s);
    r0 = pxsim_String_.charAt(s.arg0, s.i___169738);
    s.tmp_1.arg0 = r0;
    s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = (s.i___169738 + 1);
    s.i___169738 = (r0);
    { step = 9; continue; }
  case 10:
    s.reps___169759 = (1);
    r0 = (s.i0___169751 != s.i___169738);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_1 = parseInt__P164904_mk(s);
    s.tmp_2 = helpers_stringSlice__P164925_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.i0___169751;
    s.tmp_2.arg2 = s.i___169738;
    s.pc = 25; return s.tmp_2;
  case 25:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.reps___169759 = (r0);
  case 11:
  case 12:
  case 13:
    s.tmp_0 = r0 = s.reps___169759;
    r0 = (s.tmp_0 - 1);
    s.reps___169759 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.tmp_1 = Buffer_getFormat__P165013_mk(s);
    r0 = pxsim_String_.charAt(s.arg0, s.i___169738);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.isBig___169736;
    s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    s.fmt___169773 = (r0);
    r0 = (s.fmt___169773 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = control_fail__P165074_mk(s);
    r0 = pxsim_String_.charAt(s.arg0, s.i___169738);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("Unsupported format character: ", s.tmp_2);
    s.tmp_1.arg0 = r0;
    s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    { step = 19; continue; }
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 17; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 15; continue; }
    s.tmp_0 = r0 = s.idx___169737;
    r0 = (s.tmp_0 + 1);
    s.idx___169737 = (r0);
    s.tmp_1 = r0 = s.arg2;
    s.tmp_2 = r0 = s.fmt___169773;
    s.tmp_3 = r0 = s.arg4;
    r0 = pxsim_Array__getAt(s.arg1, s.tmp_0);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_1, s.tmp_2, s.tmp_3, s.tmp_4);
    { step = 16; continue; }
  case 15:
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.getNumber(s.arg2, s.fmt___169773, s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
  case 16:
  case 17:
  case 18:
    s.tmp_0 = r0 = s.arg4;
    s.tmp_2 = Buffer_sizeOfNumberFormat__P165016_mk(s);
    s.tmp_2.arg0 = s.fmt___169773;
    s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg4 = (r0);
  case 19:
    { step = 13; continue; }
  case 20:
  case 21:
    r0 = (s.i___169738 + 1);
    s.i___169738 = (r0);
    { step = 1; continue; }
  case 22:
    r0 = s.arg4;
    return leave(s, r0)
  default: oops()
} } }
Buffer___packUnpackCore__P165015.info = {"start":10393,"length":1537,"line":364,"column":4,"endLine":406,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"__packUnpackCore","argumentNames":["format","nums","buf","isPack","off"]}

function Buffer___packUnpackCore__P165015_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer___packUnpackCore__P165015, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  isBig___169736: undefined,
  idx___169737: undefined,
  i___169738: undefined,
  i0___169751: undefined,
  reps___169759: undefined,
  fmt___169773: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Buffer_getFormat__P165013(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq("B", s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq("b", s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq("H", s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq("h", s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq("I", s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq("L", s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq("i", s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq("l", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("f", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("d", s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_0;
    { step = 23; continue; }
  case 1:
    r0 = 2;
    { step = 24; continue; }
  case 2:
    r0 = 1;
    { step = 24; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 4; continue; }
    r0 = 9;
    { step = 5; continue; }
  case 4:
    r0 = 4;
  case 5:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    { step = 24; continue; }
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 7; continue; }
    r0 = 8;
    { step = 8; continue; }
  case 7:
    r0 = 3;
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    { step = 24; continue; }
  case 9:
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 11; continue; }
    r0 = 12;
    { step = 12; continue; }
  case 11:
    r0 = 11;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    { step = 24; continue; }
  case 13:
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 15; continue; }
    r0 = 10;
    { step = 16; continue; }
  case 15:
    r0 = 5;
  case 16:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 24; continue; }
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 18; continue; }
    r0 = 15;
    { step = 19; continue; }
  case 18:
    r0 = 13;
  case 19:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    { step = 24; continue; }
  case 20:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 21; continue; }
    r0 = 16;
    { step = 22; continue; }
  case 21:
    r0 = 14;
  case 22:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = s.tmp_6;
    { step = 24; continue; }
  case 23:
    r0 = null;
    { step = 24; continue; }
    r0 = undefined;
  case 24:
    return leave(s, r0)
  default: oops()
} } }
Buffer_getFormat__P165013.info = {"start":9335,"length":928,"line":334,"column":4,"endLine":357,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"getFormat","argumentNames":["pychar","isBig"]}

function Buffer_getFormat__P165013_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_getFormat__P165013, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function parseInt__P164904(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.start___169858 = undefined;
    s.sign___169888 = undefined;
    s.output___169933 = undefined;
    s.hasDigit___169934 = undefined;
    s.i___169935 = undefined;
    s.code___169942 = undefined;
    s.val___169949 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    r0 = (s.arg1 != null);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 2:
    r0 = (s.arg1 < 2);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg1 > 36);
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 5:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
  case 6:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 7; continue; }
    r0 = NaN;
    { step = 46; continue; }
  case 7:
  case 8:
    s.start___169858 = (0);
  case 9:
    s.tmp_1 = r0 = s.start___169858;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_3 = helpers_isWhitespace__P164930_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.start___169858);
    s.tmp_3.arg0 = r0;
    s.pc = 47; return s.tmp_3;
  case 47:
    r0 = s.retval;
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 12; continue; }
    r0 = (s.start___169858 + 1);
    s.start___169858 = (r0);
    { step = 9; continue; }
  case 12:
    s.tmp_1 = r0 = s.start___169858;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = NaN;
    { step = 46; continue; }
  case 13:
  case 14:
    s.sign___169888 = (1);
    r0 = pxsim_String_.charAt(s.arg0, s.start___169858);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("-", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("+", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 15:
    s.sign___169888 = (-1);
  case 16:
    r0 = (s.start___169858 + 1);
    s.start___169858 = (r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = (s.arg1 == 16);
  case 19:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_2;
    { step = 21; continue; }
  case 20:
    r0 = pxsim_String_.charAt(s.arg0, s.start___169858);
    s.tmp_3 = r0;
    r0 = ("0" === s.tmp_3);
  case 21:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 22; continue; }
    r0 = s.tmp_4;
    { step = 25; continue; }
  case 22:
    s.tmp_7 = r0 = s.arg0;
    r0 = (s.start___169858 + 1);
    s.tmp_8 = r0;
    r0 = pxsim_String_.charAt(s.tmp_7, s.tmp_8);
    s.tmp_6 = r0;
    r0 = ("x" === s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 23; continue; }
    r0 = s.tmp_5;
    { step = 24; continue; }
  case 23:
    s.tmp_10 = r0 = s.arg0;
    r0 = (s.start___169858 + 1);
    s.tmp_11 = r0;
    r0 = pxsim_String_.charAt(s.tmp_10, s.tmp_11);
    s.tmp_9 = r0;
    r0 = ("X" === s.tmp_9);
  case 24:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = s.tmp_12;
  case 25:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 26; continue; }
    s.arg1 = (16);
    r0 = (s.start___169858 + 2);
    s.start___169858 = (r0);
    { step = 29; continue; }
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.arg1 = (10);
  case 27:
  case 28:
  case 29:
    s.output___169933 = (0);
    s.hasDigit___169934 = (false);
    s.i___169935 = (s.start___169858);
  case 30:
    s.tmp_1 = r0 = s.i___169935;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___169935);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 32);
    s.code___169942 = (r0);
    s.val___169949 = (undefined);
    r0 = (s.code___169942 >= 48);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 31; continue; }
    r0 = s.tmp_0;
    { step = 32; continue; }
  case 31:
    r0 = (s.code___169942 < 58);
  case 32:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 33; continue; }
    r0 = (s.code___169942 - 48);
    s.val___169949 = (r0);
    { step = 38; continue; }
  case 33:
    r0 = (s.code___169942 >= 97);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 34; continue; }
    r0 = s.tmp_0;
    { step = 35; continue; }
  case 34:
    r0 = (s.code___169942 < 123);
  case 35:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 36; continue; }
    r0 = (10 + s.code___169942);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 97);
    s.val___169949 = (r0);
  case 36:
  case 37:
  case 38:
    r0 = (s.val___169949 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 40; continue; }
  case 39:
    r0 = (s.val___169949 >= s.arg1);
  case 40:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 43; continue; }
    r0 = pxsim_numops_toBoolDecr(s.hasDigit___169934);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 41; continue; }
    r0 = NaN;
    { step = 46; continue; }
  case 41:
  case 42:
    { step = 45; continue; }
  case 43:
  case 44:
    s.hasDigit___169934 = (true);
    r0 = (s.output___169933 * s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.val___169949);
    s.output___169933 = (r0);
    r0 = (s.i___169935 + 1);
    s.i___169935 = (r0);
    { step = 30; continue; }
  case 45:
    r0 = (s.sign___169888 * s.output___169933);
  case 46:
    return leave(s, r0)
  default: oops()
} } }
parseInt__P164904.info = {"start":1064,"length":1690,"line":44,"column":0,"endLine":103,"endColumn":1,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"parseInt","argumentNames":["text","radix"]}

function parseInt__P164904_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: parseInt__P164904, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  start___169858: undefined,
  sign___169888: undefined,
  output___169933: undefined,
  hasDigit___169934: undefined,
  i___169935: undefined,
  code___169942: undefined,
  val___169949: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_isWhitespace__P164930(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(32, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(160, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(65279, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8232, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(8233, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = true;
    { step = 12; continue; }
  case 11:
    r0 = false;
    { step = 12; continue; }
    r0 = undefined;
  case 12:
    return leave(s, r0)
  default: oops()
} } }
helpers_isWhitespace__P164930.info = {"start":13875,"length":674,"line":476,"column":4,"endLine":493,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"isWhitespace","argumentNames":["c"]}

function helpers_isWhitespace__P164930_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_isWhitespace__P164930, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_isDigit__P165014(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.code___170006 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.charCodeAt(s.arg0, 0);
    s.code___170006 = (r0);
    r0 = (48 <= s.code___170006);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.code___170006 <= 57);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Buffer_isDigit__P165014.info = {"start":10269,"length":118,"line":359,"column":4,"endLine":362,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"isDigit","argumentNames":["ch"]}

function Buffer_isDigit__P165014_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_isDigit__P165014, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  code___170006: undefined,
  arg0: undefined,
} }





function Math_min__P164936(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P164936.info = {"start":15790,"length":105,"line":538,"column":4,"endLine":541,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P164936_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P164936, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_hostbyName__P165567(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170030 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_3 = esp32_NinaController__C165533_v9_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, esp32_NinaController__C165533_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.connect;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.tmp_5);
    s.tmp_6 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 52;
    s.tmp_6.arg2 = s.tmp_4;
    s.tmp_6.arg3 = 1;
    s.tmp_6.arg4 = false;
    s.tmp_6.arg5 = false;
    s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.resp___170030 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170030, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "failed to request hostname";
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 53;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.resp___170030 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170030, 0);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_hostbyName__P165567.info = {"start":17304,"length":442,"line":504,"column":8,"endLine":515,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"hostbyName","argumentNames":["this","hostname"]}

function esp32_NinaController_hostbyName__P165567_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_hostbyName__P165567, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  resp___170030: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_connect__P165565(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.wifis___170049 = undefined;
    s.ssids___170052 = undefined;
    s.networks___170056 = undefined;
    s.network___170075 = undefined;
    s.unnamed680___U4 = undefined;
    s.unnamed681___U5 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_1 = esp32_NinaController__C165533_v8_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, esp32_NinaController__C165533_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isConnected;
    s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = true;
    { step = 7; continue; }
  case 1:
  case 2:
    s.tmp_2 = net_knownAccessPoints__P165373_mk(s);
    s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.wifis___170049 = (r0);
    r0 = pxsim_pxtrt.keysOf(s.wifis___170049);
    s.ssids___170052 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, inline__P170058);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.ssids___170052);
    s.tmp_1 = helpers_arrayFilter__P164918_mk(s);
    s.tmp_2 = esp32_NinaController__C165533_v0_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_2.arg0, esp32_NinaController__C165533_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.scanNetworks;
    s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.networks___170056 = (r0);
    s.network___170075 = (undefined);
    s.unnamed680___U4 = (s.networks___170056);
    s.unnamed681___U5 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed681___U5;
    r0 = pxsim_Array__length(s.unnamed680___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed680___U4, s.unnamed681___U5);
    s.network___170075 = (r0);
    s.tmp_4 = esp32_NinaController_connectAP__P165566_mk(s);
    s.tmp_4.arg0 = s.arg0;
    r0 = s.network___170075.fields["ssid"];
    s.tmp_4.arg1 = r0;
    r0 = s.network___170075.fields["ssid"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.wifis___170049, s.tmp_5);
    s.tmp_4.arg2 = r0;
    s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == 3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    r0 = true;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed681___U5 + 1);
    s.unnamed681___U5 = (r0);
    { step = 3; continue; }
  case 6:
    s.unnamed680___U4 = (undefined);
    s.tmp_6 = net_log__P165357_mk(s);
    s.tmp_6.arg0 = "connection failed";
    s.pc = 13; return s.tmp_6;
  case 13:
    r0 = s.retval;
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_connect__P165565.info = {"start":15465,"length":629,"line":448,"column":8,"endLine":464,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"connect","argumentNames":["this"]}

function esp32_NinaController_connect__P165565_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_connect__P165565, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  wifis___170049: undefined,
  ssids___170052: undefined,
  networks___170056: undefined,
  network___170075: undefined,
  unnamed680___U4: undefined,
  unnamed681___U5: undefined,
  arg0: undefined,
} }





function inline__P170058(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["ssid"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.caps[0], s.tmp_1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
inline__P170058.info = {"start":15711,"length":43,"line":454,"column":24,"endLine":454,"endColumn":67,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"inline","argumentNames":["network"]}

function inline__P170058_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P170058, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_connectAP__P165566(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.stat___170101 = undefined;
    s.____170102 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_log__P165357_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("connect to ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = esp32_NinaController_wifiSetPassphrase__P165553_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = esp32_NinaController_wifiSetNetwork__P165552_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 2:
    s.____170102 = (0);
  case 3:
    r0 = (s.____170102 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = esp32_NinaController_status__P165546_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.stat___170101 = (r0);
    r0 = (s.stat___170101 == 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = (s.arg0).fields["wasConnected"] = (true);
    s.tmp_0 = net_log__P165357_mk(s);
    s.tmp_0.arg0 = "connected";
    s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = s.stat___170101;
    { step = 11; continue; }
  case 4:
  case 5:
    s.tmp_0 = pause__P165165_mk(s);
    s.tmp_0.arg0 = 1000;
    s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    r0 = (s.____170102 + 1);
    s.____170102 = (r0);
    { step = 3; continue; }
  case 6:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, 4);
    r0 = pxsim_Array__push(s.tmp_0, 5);
    r0 = pxsim_Array__push(s.tmp_0, 6);
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.stat___170101, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >= 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.tmp_3 = net_log__P165357_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 20);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 20:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat("failed to connect to \"", s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, "\" (");
    s.tmp_5 = r0;
    if ((s.stat___170101) && (s.stat___170101).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.stat___170101);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.stat___170101) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")");
    s.tmp_3.arg0 = r0;
    s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = (s.stat___170101 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = net_log__P165357_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("no such ssid: \"", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\"");
    s.tmp_1.arg0 = r0;
    s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = s.stat___170101;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_connectAP__P165566.info = {"start":16255,"length":932,"line":470,"column":8,"endLine":498,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"connectAP","argumentNames":["this","ssid","password"]}

function esp32_NinaController_connectAP__P165566_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_connectAP__P165566, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  stat___170101: undefined,
  ____170102: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_status__P165546(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170153 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 32;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.resp___170153 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.resp___170153);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 255;
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_2 = net_debug__P165358_mk(s);
    r0 = pxsim_Array__getAt(s.resp___170153, 0);
    s.tmp_5 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_5, 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("status: ", s.tmp_3);
    s.tmp_2.arg0 = r0;
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    r0 = pxsim_Array__getAt(s.resp___170153, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_0, 0);
  case 3:
    return leaveAccessor(s, r0)
  default: oops()
} } }
esp32_NinaController_status__P165546.info = {"start":9124,"length":278,"line":272,"column":8,"endLine":279,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"status","argumentNames":["this"]}
esp32_NinaController_status__P165546.isGetter = true;

function esp32_NinaController_status__P165546_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_status__P165546, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  resp___170153: undefined,
  arg0: undefined,
} }





function esp32_NinaController_wifiSetNetwork__P165552(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ssidbuf___170171 = undefined;
    s.resp___170175 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.ssidbuf___170171 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ssidbuf___170171);
    s.tmp_1 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 16;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 1;
    s.tmp_1.arg4 = false;
    s.tmp_1.arg5 = false;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.resp___170175 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170175, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "failed to set network";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_wifiSetNetwork__P165552.info = {"start":12209,"length":293,"line":355,"column":8,"endLine":362,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"wifiSetNetwork","argumentNames":["this","ssid"]}

function esp32_NinaController_wifiSetNetwork__P165552_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_wifiSetNetwork__P165552, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ssidbuf___170171: undefined,
  resp___170175: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_wifiSetPassphrase__P165553(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.ssidbuf___170188 = undefined;
    s.passphrasebuf___170192 = undefined;
    s.resp___170196 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.ssidbuf___170188 = (r0);
    r0 = pxsim.control.createBufferFromUTF8(s.arg2);
    s.passphrasebuf___170192 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.ssidbuf___170188);
    r0 = pxsim_Array__push(s.tmp_0, s.passphrasebuf___170192);
    s.tmp_1 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 17;
    s.tmp_1.arg2 = s.tmp_0;
    s.tmp_1.arg3 = 1;
    s.tmp_1.arg4 = false;
    s.tmp_1.arg5 = false;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.resp___170196 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170196, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "failed to set passphrase";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_wifiSetPassphrase__P165553.info = {"start":12577,"length":416,"line":365,"column":8,"endLine":372,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"wifiSetPassphrase","argumentNames":["this","ssid","passphrase"]}

function esp32_NinaController_wifiSetPassphrase__P165553_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_wifiSetPassphrase__P165553, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ssidbuf___170188: undefined,
  passphrasebuf___170192: undefined,
  resp___170196: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_scanNetworks__P165551(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.____170209 = undefined;
    s.APs___170214 = undefined;
    s.ap___170218 = undefined;
    s.unnamed678___U3 = undefined;
    s.unnamed679___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_startScanNetworks__P165549_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.____170209 = (0);
  case 1:
    r0 = (s.____170209 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = pause__P165165_mk(s);
    s.tmp_1.arg0 = 2000;
    s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController_getScanNetworks__P165550_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.APs___170214 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.APs___170214);
    if (!r0) { step = 4; continue; }
    s.ap___170218 = (undefined);
    s.unnamed678___U3 = (s.APs___170214);
    s.unnamed679___U4 = (0);
  case 2:
    s.tmp_0 = r0 = s.unnamed679___U4;
    r0 = pxsim_Array__length(s.unnamed678___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__getAt(s.unnamed678___U3, s.unnamed679___U4);
    s.ap___170218 = (r0);
    s.tmp_2 = net_debug__P165358_mk(s);
    r0 = s.ap___170218.fields["ssid"];
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("  ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, " => RSSI ");
    s.tmp_3 = r0;
    r0 = s.ap___170218.fields["rssi"];
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_7);
    s.tmp_2.arg0 = r0;
    s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    r0 = (s.unnamed679___U4 + 1);
    s.unnamed679___U4 = (r0);
    { step = 2; continue; }
  case 3:
    s.unnamed678___U3 = (undefined);
    r0 = s.APs___170214;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.____170209 + 1);
    s.____170209 = (r0);
    { step = 1; continue; }
  case 6:
    r0 = null;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_scanNetworks__P165551.info = {"start":11619,"length":507,"line":337,"column":8,"endLine":352,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"scanNetworks","argumentNames":["this"]}

function esp32_NinaController_scanNetworks__P165551_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_scanNetworks__P165551, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  ____170209: undefined,
  APs___170214: undefined,
  ap___170218: undefined,
  unnamed678___U3: undefined,
  unnamed679___U4: undefined,
  arg0: undefined,
} }





function esp32_NinaController_getScanNetworks__P165550(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.names___170239 = undefined;
    s.APs___170244 = undefined;
    s.i___170246 = undefined;
    s.name___170248 = undefined;
    s.unnamed676___U4 = undefined;
    s.unnamed677___U5 = undefined;
    s.a_p___170250 = undefined;
    s.rssi___170256 = undefined;
    s.encr___170268 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 39;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.names___170239 = (r0);
    r0 = pxsim_Array__mk();
    s.APs___170244 = (r0);
    s.i___170246 = (0);
    s.name___170248 = (undefined);
    s.unnamed676___U4 = (s.names___170239);
    s.unnamed677___U5 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed677___U5;
    r0 = pxsim_Array__length(s.unnamed676___U4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed676___U4, s.unnamed677___U5);
    s.name___170248 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(net_AccessPoint__C165361_VT);
    s.tmp_2 = r0;
    s.tmp_3 = net_AccessPoint_constructor__P165362_mk(s);
    s.tmp_3.arg0 = s.tmp_2;
    r0 = pxsim.BufferMethods.toString(s.name___170248);
    s.tmp_3.arg1 = r0;
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.a_p___170250 = (s.tmp_2);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = esp32_buffer1__P165532_mk(s);
    s.tmp_2.arg0 = s.i___170246;
    s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 50;
    s.tmp_4.arg2 = s.tmp_0;
    s.tmp_4.arg3 = 1;
    s.tmp_4.arg4 = false;
    s.tmp_4.arg5 = false;
    s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 0);
    s.rssi___170256 = (r0);
    s.tmp_0 = r0 = s.a_p___170250;
    s.tmp_3 = pins_unpackBuffer__P164991_mk(s);
    s.tmp_3.arg0 = "<i";
    s.tmp_3.arg1 = s.rssi___170256;
    s.tmp_3.arg2 = 0;
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rssi"] = (s.tmp_1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = esp32_buffer1__P165532_mk(s);
    s.tmp_2.arg0 = 1;
    s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 51;
    s.tmp_4.arg2 = s.tmp_0;
    s.tmp_4.arg3 = 1;
    s.tmp_4.arg4 = false;
    s.tmp_4.arg5 = false;
    s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, 0);
    s.encr___170268 = (r0);
    s.tmp_0 = r0 = s.a_p___170250;
    r0 = pxsim.BufferMethods.getByte(s.encr___170268, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["encryption"] = (s.tmp_1);
    r0 = pxsim_Array__push(s.APs___170244, s.a_p___170250);
    r0 = (s.i___170246 + 1);
    s.i___170246 = (r0);
    r0 = (s.unnamed677___U5 + 1);
    s.unnamed677___U5 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed676___U4 = (undefined);
    r0 = s.APs___170244;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_getScanNetworks__P165550.info = {"start":10658,"length":751,"line":315,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"getScanNetworks","argumentNames":["this"]}

function esp32_NinaController_getScanNetworks__P165550_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_getScanNetworks__P165550, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  names___170239: undefined,
  APs___170244: undefined,
  i___170246: undefined,
  name___170248: undefined,
  unnamed676___U4: undefined,
  unnamed677___U5: undefined,
  a_p___170250: undefined,
  rssi___170256: undefined,
  encr___170268: undefined,
  arg0: undefined,
} }





function net_AccessPoint_constructor__P165362(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_AccessPoint__C165361_VT)) failedCast(r0);
    r0 = (s.arg0).fields["ssid"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_AccessPoint_constructor__P165362.info = {"start":774,"length":36,"line":30,"column":8,"endLine":30,"endColumn":44,"fileName":"pxt_modules/net/net.ts","functionName":"inline","argumentNames":["this","ssid"]}

function net_AccessPoint_constructor__P165362_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_AccessPoint_constructor__P165362, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_startScanNetworks__P165549(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170287 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 54;
    s.tmp_0.arg2 = undefined;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.resp___170287 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170287, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "failed to start AP scan";
    s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_startScanNetworks__P165549.info = {"start":10273,"length":220,"line":304,"column":8,"endLine":310,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"startScanNetworks","argumentNames":["this"]}

function esp32_NinaController_startScanNetworks__P165549_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_startScanNetworks__P165549, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  resp___170287: undefined,
  arg0: undefined,
} }





function helpers_arrayFilter__P164918(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.res___170298 = undefined;
    s.len___170300 = undefined;
    s.i___170303 = undefined;
    s.v___170308 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___170298 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___170300 = (r0);
    s.i___170303 = (0);
  case 1:
    r0 = (s.i___170303 < s.len___170300);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.arg0, s.i___170303);
    s.v___170308 = (r0);
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___170308;
    s.tmp_1.arg1 = s.i___170303;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__push(s.res___170298, s.v___170308);
  case 2:
  case 3:
    r0 = (s.i___170303 + 1);
    s.i___170303 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = s.res___170298;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P164918.info = {"start":7695,"length":317,"line":261,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P164918_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P164918, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___170298: undefined,
  len___170300: undefined,
  i___170303: undefined,
  v___170308: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function net_knownAccessPoints__P165373(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.tmp_1 = settings_SecretStore_readSecret__P165305_mk(s);
    s.tmp_1.arg0 = globals.deviceSecrets___165310;
    s.tmp_1.arg1 = globals.AP_SECRETS_KEY___165372;
    s.tmp_1.arg2 = false;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt.mkMap();
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
net_knownAccessPoints__P165373.info = {"start":3044,"length":126,"line":107,"column":4,"endLine":109,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"knownAccessPoints","argumentNames":[]}

function net_knownAccessPoints__P165373_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_knownAccessPoints__P165373, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function esp32_NinaController_isConnected__P165563(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_1 = esp32_NinaController_status__P165546_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == 3);
    return leaveAccessor(s, r0)
  default: oops()
} } }
esp32_NinaController_isConnected__P165563.info = {"start":15176,"length":85,"line":437,"column":8,"endLine":439,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"isConnected","argumentNames":["this"]}
esp32_NinaController_isConnected__P165563.isGetter = true;

function esp32_NinaController_isConnected__P165563_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_isConnected__P165563, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function net_Controller_ping__P165327(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = -1;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_ping__P165327.info = {"start":1071,"length":67,"line":38,"column":8,"endLine":38,"endColumn":75,"fileName":"pxt_modules/net/controller.ts","functionName":"ping","argumentNames":["this","dest","ttl"]}

function net_Controller_ping__P165327_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_ping__P165327, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function net_Controller_connect__P165324(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_connect__P165324.info = {"start":939,"length":19,"line":35,"column":8,"endLine":35,"endColumn":27,"fileName":"pxt_modules/net/controller.ts","functionName":"connect","argumentNames":["this"]}

function net_Controller_connect__P165324_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_connect__P165324, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function net_ControllerSocket_close__P165352(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_closed"] = (true);
    s.tmp_0 = net_Controller__C165313_v6_2_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.socketClose;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.arg0.fields["_closeHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if__closeHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "_closeHandler"), 1);
      s.pc = 4; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["_closeHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["_closeHandler"], 1); s.pc = 4; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 4; return s.tmp_1;; }
     else { s.pc = 4; return s.tmp_1; }
    }
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_close__P165352.info = {"start":6123,"length":188,"line":160,"column":8,"endLine":165,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"close","argumentNames":["this"]}

function net_ControllerSocket_close__P165352_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_close__P165352, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function net_Controller_socketClose__P165320(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_socketClose__P165320.info = {"start":678,"length":56,"line":27,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"socketClose","argumentNames":["this","socket_num"]}

function net_Controller_socketClose__P165320_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_socketClose__P165320, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_ControllerSocket_onMessage__P165348(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = s.arg0.fields["_messageHandler"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, inline__P170365);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_2);
  case 1:
  case 2:
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = null;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["_messageHandler"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_onMessage__P165348.info = {"start":2242,"length":609,"line":67,"column":8,"endLine":82,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"onMessage","argumentNames":["this","handler"]}

function net_ControllerSocket_onMessage__P165348_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_onMessage__P165348, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function inline__P170365(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___170370 = undefined;
  case 1:
    r0 = s.caps[0].fields["_closed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = net_ControllerSocket_read__P165350_mk(s);
    s.tmp_3.arg0 = s.caps[0];
    s.tmp_3.arg1 = 0;
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.buf___170370 = (r0);
    r0 = pxsim.BufferMethods.length(s.buf___170370);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = s.caps[0].fields["_messageHandler"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = if__messageHandler_2_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.tmp_2.arg1 = s.buf___170370;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "_messageHandler"), 2);
      s.pc = 8; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["_messageHandler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["_messageHandler"], 2); s.pc = 8; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.pc = 8; return s.tmp_2;; }
     else { s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 5; continue; }
  case 4:
    s.tmp_0 = pause__P165165_mk(s);
    s.tmp_0.arg0 = 200;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P170365.info = {"start":2385,"length":389,"line":69,"column":38,"endLine":79,"endColumn":17,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"inline","argumentNames":[]}

function inline__P170365_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P170365, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  buf___170370: undefined,
} }





function net_ControllerSocket_read__P165350(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.avail___170392 = undefined;
    s.ret___170412 = undefined;
    s.stamp___170420 = undefined;
    s.to_read___170422 = undefined;
    s.received___170428 = undefined;
    s.avail___170433 = undefined;
    s.recv___170444 = undefined;
    s.ret___170482 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg0.fields["_buffer"];
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = Math_min__P164936_mk(s);
    s.tmp_5 = net_Controller__C165313_v4_2_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_5.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_5.arg1 = r0;
    if (!checkSubtype(s.tmp_5.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.socketAvailable;
    s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 4000;
    s.pc = 18; return s.tmp_4;
  case 18:
    r0 = s.retval;
    s.avail___170392 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.avail___170392);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_bufferConcat__P164997_mk(s);
    r0 = s.arg0.fields["_buffer"];
    s.tmp_2.arg0 = r0;
    s.tmp_3 = net_Controller__C165313_v5_3_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_3.arg1 = r0;
    s.tmp_3.arg2 = s.avail___170392;
    if (!checkSubtype(s.tmp_3.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.socketRead;
    s.pc = 21; return s.tmp_3;
  case 21:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_buffer"] = (s.tmp_1);
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = s.arg0.fields["_buffer"];
    s.ret___170412 = (r0);
    r0 = (s.arg0).fields["_buffer"] = (_hex170418);
    r0 = s.ret___170412;
    { step = 17; continue; }
  case 5:
  case 6:
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    s.stamp___170420 = (r0);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg0.fields["_buffer"];
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.to_read___170422 = (r0);
    r0 = pxsim_Array__mk();
    s.received___170428 = (r0);
  case 7:
    r0 = (s.to_read___170422 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = Math_min__P164936_mk(s);
    s.tmp_2 = net_Controller__C165313_v4_2_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_2.arg1 = r0;
    if (!checkSubtype(s.tmp_2.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.socketAvailable;
    s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 4000;
    s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.avail___170433 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.avail___170433);
    if (!r0) { step = 8; continue; }
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    s.stamp___170420 = (r0);
    s.tmp_0 = net_Controller__C165313_v5_3_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_0.arg1 = r0;
    s.tmp_1 = Math_min__P164936_mk(s);
    s.tmp_1.arg0 = s.to_read___170422;
    s.tmp_1.arg1 = s.avail___170433;
    s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    if (!checkSubtype(s.tmp_0.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.socketRead;
    s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.recv___170444 = (r0);
    r0 = pxsim_Array__push(s.received___170428, s.recv___170444);
    s.tmp_0 = r0 = s.to_read___170422;
    r0 = pxsim.BufferMethods.length(s.recv___170444);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.to_read___170422 = (r0);
  case 8:
  case 9:
    r0 = s.arg0.fields["_timeout"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim.control.millis();
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 1000);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.stamp___170420);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_timeout"];
    s.tmp_5 = r0;
    r0 = (s.tmp_2 > s.tmp_5);
  case 11:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 12; continue; }
    { step = 14; continue; }
  case 12:
  case 13:
    { step = 7; continue; }
  case 14:
    s.tmp_7 = helpers_arrayUnshift__P164910_mk(s);
    s.tmp_7.arg0 = s.received___170428;
    r0 = s.arg0.fields["_buffer"];
    s.tmp_7.arg1 = r0;
    s.pc = 26; return s.tmp_7;
  case 26:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = pins_concatBuffers__P164992_mk(s);
    s.tmp_2.arg0 = s.received___170428;
    s.pc = 27; return s.tmp_2;
  case 27:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_buffer"] = (s.tmp_1);
    s.ret___170482 = (null);
    r0 = s.arg0.fields["_buffer"];
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = s.arg0.fields["_buffer"];
    s.ret___170482 = (r0);
    r0 = (s.arg0).fields["_buffer"] = (_hex170495);
    { step = 16; continue; }
  case 15:
    r0 = s.arg0.fields["_buffer"];
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_0, 0, s.arg1);
    s.ret___170482 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_buffer"];
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_2, s.arg1, -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_buffer"] = (s.tmp_1);
  case 16:
    r0 = s.ret___170482;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_read__P165350.info = {"start":4187,"length":1697,"line":108,"column":8,"endLine":152,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"read","argumentNames":["this","size"]}

function net_ControllerSocket_read__P165350_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_read__P165350, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  avail___170392: undefined,
  ret___170412: undefined,
  stamp___170420: undefined,
  to_read___170422: undefined,
  received___170428: undefined,
  avail___170433: undefined,
  recv___170444: undefined,
  ret___170482: undefined,
  arg0: undefined,
  arg1: undefined,
} }

const _hex170418 = pxsim.BufferMethods.createBufferFromHex("")
const _hex170495 = pxsim.BufferMethods.createBufferFromHex("")




function pins_concatBuffers__P164992(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Buffer_concat__P165010_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_concatBuffers__P164992.info = {"start":863,"length":88,"line":32,"column":4,"endLine":34,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"concatBuffers","argumentNames":["bufs"]}

function pins_concatBuffers__P164992_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_concatBuffers__P164992, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_concat__P165010(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.len___170515 = undefined;
    s.b___170517 = undefined;
    s.unnamed670___U2 = undefined;
    s.unnamed671___U3 = undefined;
    s.r___170524 = undefined;
    s.b___170530 = undefined;
    s.unnamed672___U6 = undefined;
    s.unnamed673___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.len___170515 = (0);
    s.b___170517 = (undefined);
    s.unnamed670___U2 = (s.arg0);
    s.unnamed671___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed671___U3;
    r0 = pxsim_Array__length(s.unnamed670___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed670___U2, s.unnamed671___U3);
    s.b___170517 = (r0);
    s.tmp_2 = r0 = s.len___170515;
    r0 = pxsim.BufferMethods.length(s.b___170517);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.len___170515 = (r0);
    r0 = (s.unnamed671___U3 + 1);
    s.unnamed671___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed670___U2 = (undefined);
    r0 = pxsim.control.createBuffer(s.len___170515);
    s.r___170524 = (r0);
    s.len___170515 = (0);
    s.b___170530 = (undefined);
    s.unnamed672___U6 = (s.arg0);
    s.unnamed673___U7 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed673___U7;
    r0 = pxsim_Array__length(s.unnamed672___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed672___U6, s.unnamed673___U7);
    s.b___170530 = (r0);
    r0 = pxsim.BufferMethods.write(s.r___170524, s.len___170515, s.b___170530);
    s.tmp_0 = r0 = s.len___170515;
    r0 = pxsim.BufferMethods.length(s.b___170530);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.len___170515 = (r0);
    r0 = (s.unnamed673___U7 + 1);
    s.unnamed673___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed672___U6 = (undefined);
    r0 = s.r___170524;
    return leave(s, r0)
  default: oops()
} } }
Buffer_concat__P165010.info = {"start":8652,"length":297,"line":309,"column":4,"endLine":320,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"concat","argumentNames":["buffers"]}

function Buffer_concat__P165010_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_concat__P165010, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  len___170515: undefined,
  b___170517: undefined,
  unnamed670___U2: undefined,
  unnamed671___U3: undefined,
  r___170524: undefined,
  b___170530: undefined,
  unnamed672___U6: undefined,
  unnamed673___U7: undefined,
  arg0: undefined,
} }





function helpers_arrayUnshift__P164910(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array_.insertAt(s.arg0, 0, s.arg1);
    r0 = pxsim_Array__length(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayUnshift__P164910.info = {"start":4898,"length":126,"line":180,"column":4,"endLine":183,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayUnshift","argumentNames":["arr","value"]}

function helpers_arrayUnshift__P164910_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayUnshift__P164910, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_monotonic__P165360(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    return leave(s, r0)
  default: oops()
} } }
net_monotonic__P165360.info = {"start":598,"length":85,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/net/net.ts","functionName":"monotonic","argumentNames":[]}

function net_monotonic__P165360_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_monotonic__P165360, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function net_Controller_socketRead__P165319(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_socketRead__P165319.info = {"start":567,"length":101,"line":23,"column":8,"endLine":25,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"socketRead","argumentNames":["this","socket_num","size"]}

function net_Controller_socketRead__P165319_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_socketRead__P165319, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function net_Controller_socketAvailable__P165318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = -1;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_socketAvailable__P165318.info = {"start":472,"length":85,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"socketAvailable","argumentNames":["this","socket_num"]}

function net_Controller_socketAvailable__P165318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_socketAvailable__P165318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_ControllerSocket_onError__P165347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_errorHandler"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_onError__P165347.info = {"start":2134,"length":99,"line":64,"column":8,"endLine":66,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"onError","argumentNames":["this","handler"]}

function net_ControllerSocket_onError__P165347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_onError__P165347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_ControllerSocket_onClose__P165346(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_closeHandler"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_onClose__P165346.info = {"start":2037,"length":88,"line":61,"column":8,"endLine":63,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"onClose","argumentNames":["this","handler"]}

function net_ControllerSocket_onClose__P165346_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_onClose__P165346, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_ControllerSocket_onOpen__P165345(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_openHandler"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_onOpen__P165345.info = {"start":1942,"length":86,"line":58,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"onOpen","argumentNames":["this","handler"]}

function net_ControllerSocket_onOpen__P165345_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_onOpen__P165345, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_ControllerSocket_send__P165343(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    s.tmp_0 = net_Controller__C165313_v3_3_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_0.arg1 = r0;
    s.tmp_1 = net_dataAsBuffer__P165385_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    if (!checkSubtype(s.tmp_0.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.socketWrite;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_send__P165343.info = {"start":1637,"length":171,"line":48,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"send","argumentNames":["this","data"]}

function net_ControllerSocket_send__P165343_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_send__P165343, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function net_dataAsBuffer__P165385(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = null;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == "string");
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim.control.createBufferFromUTF8(s.arg0);
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.arg0;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
net_dataAsBuffer__P165385.info = {"start":2530,"length":228,"line":90,"column":4,"endLine":96,"endColumn":5,"fileName":"pxt_modules/net/requests.ts","functionName":"dataAsBuffer","argumentNames":["data"]}

function net_dataAsBuffer__P165385_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_dataAsBuffer__P165385, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function net_Controller_socketWrite__P165317(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_socketWrite__P165317.info = {"start":390,"length":72,"line":16,"column":8,"endLine":17,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"socketWrite","argumentNames":["this","socket_num","buffer"]}

function net_Controller_socketWrite__P165317_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_socketWrite__P165317, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function net_ControllerSocket_connect__P165342(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    s.tmp_3 = net_Controller__C165313_v2_5_mk(s);
    r0 = s.arg0.fields["controller"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["_socknum"];
    s.tmp_3.arg1 = r0;
    r0 = s.arg0.fields["host"];
    s.tmp_3.arg2 = r0;
    r0 = s.arg0.fields["port"];
    s.tmp_3.arg3 = r0;
    r0 = s.arg0.fields["conntype"];
    s.tmp_3.arg4 = r0;
    if (!checkSubtype(s.tmp_3.arg0, net_Controller__C165313_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.socketConnect;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = net_ControllerSocket_error__P165344_mk(s);
    s.tmp_4.arg0 = s.arg0;
    r0 = s.arg0.fields["host"];
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("failed to connect to ", s.tmp_5);
    s.tmp_4.arg1 = r0;
    s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = (s.arg0).fields["_buffer"] = (_hex170627);
    r0 = s.arg0.fields["_openHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = if__openHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "_openHandler"), 1);
      s.pc = 9; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["_openHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["_openHandler"], 1); s.pc = 9; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 9; return s.tmp_1;; }
     else { s.pc = 9; return s.tmp_1; }
    }
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_connect__P165342.info = {"start":1244,"length":339,"line":35,"column":8,"endLine":45,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"connect","argumentNames":["this"]}

function net_ControllerSocket_connect__P165342_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_connect__P165342, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }

const _hex170627 = pxsim.BufferMethods.createBufferFromHex("")




function net_ControllerSocket_error__P165344(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_ControllerSocket__C165341_VT)) failedCast(r0);
    r0 = s.arg0.fields["_errorHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if__errorHandler_2_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "_errorHandler"), 2);
      s.pc = 3; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["_errorHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["_errorHandler"], 2); s.pc = 3; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.pc = 3; return s.tmp_1;; }
     else { s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_ControllerSocket_error__P165344.info = {"start":1818,"length":114,"line":53,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/net/controllersocket.ts","functionName":"error","argumentNames":["this","msg"]}

function net_ControllerSocket_error__P165344_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_ControllerSocket_error__P165344, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function net_Controller_socketConnect__P165316(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_socketConnect__P165316.info = {"start":234,"length":146,"line":12,"column":8,"endLine":14,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"socketConnect","argumentNames":["this","socket_num","dest","port","conn_mode"]}

function net_Controller_socketConnect__P165316_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_socketConnect__P165316, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventContext_constructor__P165157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C165143_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    r0 = (s.arg0).fields["framesInSample"] = (0);
    r0 = (s.arg0).fields["timeInSample"] = (0);
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    r0 = (s.arg0).fields["frameWorker"] = (0);
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P165157.info = {"start":1740,"length":245,"line":58,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P165157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P165157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function esp32_NinaController_socketClose__P165577(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170675 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("*** Closing socket #", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 0, s.arg1);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 46;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.resp___170675 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170675, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "failed to close socket";
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketClose__P165577.info = {"start":23566,"length":356,"line":651,"column":8,"endLine":660,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketClose","argumentNames":["this","socket_num"]}

function esp32_NinaController_socketClose__P165577_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketClose__P165577, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  resp___170675: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_socketConnect__P165576(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.times___170701 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.arg4) && (s.arg4).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.arg4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg4) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("*** Socket connect mode ", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = esp32_NinaController_socketOpen__P165570_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg3;
    s.tmp_0.arg4 = s.arg4;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    s.times___170701 = (r0);
  case 1:
    r0 = pxsim.control.millis();
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 1000);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.times___170701);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_5 = esp32_NinaController_socket_connected__P165572_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.arg1;
    s.pc = 9; return s.tmp_5;
  case 9:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 2; continue; }
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    s.tmp_6 = pause__P165165_mk(s);
    s.tmp_6.arg0 = 10;
    s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    { step = 1; continue; }
  case 4:
    s.tmp_0 = net_fail__P165359_mk(s);
    s.tmp_0.arg0 = "failed to establish connection";
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketConnect__P165576.info = {"start":22885,"length":597,"line":634,"column":8,"endLine":648,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketConnect","argumentNames":["this","socket_num","dest","port","conn_mode"]}

function esp32_NinaController_socketConnect__P165576_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketConnect__P165576, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  times___170701: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function esp32_NinaController_socket_connected__P165572(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_1 = esp32_NinaController_socketStatus__P165571_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == 4);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socket_connected__P165572.info = {"start":20723,"length":135,"line":588,"column":8,"endLine":590,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socket_connected","argumentNames":["this","socket_num"]}

function esp32_NinaController_socket_connected__P165572_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socket_connected__P165572, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_socketStatus__P165571(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170727 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 0, s.arg1);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 47;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.resp___170727 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170727, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_0, 0);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketStatus__P165571.info = {"start":20388,"length":233,"line":581,"column":8,"endLine":585,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketStatus","argumentNames":["this","socket_num"]}

function esp32_NinaController_socketStatus__P165571_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketStatus__P165571, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  resp___170727: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_socketOpen__P165570(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.port_param___170758 = undefined;
    s.resp___170762 = undefined;
    s.dest2___170766 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 0, s.arg1);
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.arg2) && (s.arg2).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.arg2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg2) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("*** Open socket: ", s.tmp_5);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, ":");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    if ((s.arg3) && (s.arg3).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.arg3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg3) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg0 = r0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    s.tmp_1 = pins_packBuffer__P164989_mk(s);
    s.tmp_1.arg0 = ">H";
    s.tmp_1.arg1 = s.tmp_0;
    s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.port_param___170758 = (r0);
    r0 = pxsim_pxtcore.typeOf(s.arg2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.control.createBufferFromUTF8(s.arg2);
    s.dest2___170766 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.dest2___170766);
    r0 = pxsim_Array__push(s.tmp_0, _hex170776);
    r0 = pxsim_Array__push(s.tmp_0, s.port_param___170758);
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = esp32_buffer1__P165532_mk(s);
    s.tmp_4.arg0 = s.arg4;
    s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    s.tmp_5 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = 45;
    s.tmp_5.arg2 = s.tmp_0;
    s.tmp_5.arg3 = 1;
    s.tmp_5.arg4 = false;
    s.tmp_5.arg5 = false;
    s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.resp___170762 = (r0);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg2);
    r0 = pxsim_Array__push(s.tmp_0, s.port_param___170758);
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = esp32_buffer1__P165532_mk(s);
    s.tmp_4.arg0 = s.arg4;
    s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    s.tmp_5 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = 45;
    s.tmp_5.arg2 = s.tmp_0;
    s.tmp_5.arg3 = 1;
    s.tmp_5.arg4 = false;
    s.tmp_5.arg5 = false;
    s.pc = 14; return s.tmp_5;
  case 14:
    r0 = s.retval;
    s.resp___170762 = (r0);
  case 2:
    r0 = pxsim_Array__getAt(s.resp___170762, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "could not connect to remote server";
    s.pc = 15; return s.tmp_3;
  case 15:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketOpen__P165570.info = {"start":19164,"length":948,"line":555,"column":8,"endLine":574,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketOpen","argumentNames":["this","socket_num","dest","port","conn_mode"]}

function esp32_NinaController_socketOpen__P165570_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketOpen__P165570, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  port_param___170758: undefined,
  resp___170762: undefined,
  dest2___170766: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }

const _hex170776 = pxsim.BufferMethods.createBufferFromHex("00000000")




function pins_packBuffer__P164989(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Buffer_pack__P165012_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_packBuffer__P164989.info = {"start":416,"length":107,"line":17,"column":4,"endLine":19,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packBuffer","argumentNames":["format","nums"]}

function pins_packBuffer__P164989_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_packBuffer__P164989, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Buffer_pack__P165012(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.buf___170804 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = Buffer_packedSize__P165011_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_0);
    s.buf___170804 = (r0);
    s.tmp_0 = Buffer___packUnpackCore__P165015_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.buf___170804;
    s.tmp_0.arg3 = true;
    s.tmp_0.arg4 = 0;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = s.buf___170804;
    return leave(s, r0)
  default: oops()
} } }
Buffer_pack__P165012.info = {"start":9148,"length":181,"line":328,"column":4,"endLine":332,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"pack","argumentNames":["format","nums"]}

function Buffer_pack__P165012_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_pack__P165012, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___170804: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Buffer_packedSize__P165011(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Buffer___packUnpackCore__P165015_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = null;
    s.tmp_0.arg2 = null;
    s.tmp_0.arg3 = true;
    s.tmp_0.arg4 = 0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Buffer_packedSize__P165011.info = {"start":9034,"length":108,"line":324,"column":4,"endLine":326,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packedSize","argumentNames":["format"]}

function Buffer_packedSize__P165011_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_packedSize__P165011, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function esp32_NinaController_socketRead__P165575(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170838 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.arg2) && (s.arg2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("Reading ", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " bytes from ESP socket with status ");
    s.tmp_1 = r0;
    s.tmp_6 = esp32_NinaController_socketStatus__P165571_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = s.arg1;
    s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_4);
    s.tmp_0.arg0 = r0;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 0, s.arg1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim_Array__mk();
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.arg2);
    s.tmp_5 = pins_packBuffer__P164989_mk(s);
    s.tmp_5.arg0 = "<H";
    s.tmp_5.arg1 = s.tmp_3;
    s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    s.tmp_6 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 69;
    s.tmp_6.arg2 = s.tmp_0;
    s.tmp_6.arg3 = 1;
    s.tmp_6.arg4 = true;
    s.tmp_6.arg5 = true;
    s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.resp___170838 = (r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    r0 = pxsim_Array__getAt(s.resp___170838, 0);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.toString(s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("buf >>", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "<<");
    s.tmp_0.arg0 = r0;
    s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__getAt(s.resp___170838, 0);
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketRead__P165575.info = {"start":22123,"length":483,"line":619,"column":8,"endLine":627,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketRead","argumentNames":["this","socket_num","size"]}

function esp32_NinaController_socketRead__P165575_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketRead__P165575, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  resp___170838: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function esp32_NinaController_socketAvailable__P165574(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170864 = undefined;
    s.reply___170869 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 0, s.arg1);
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 43;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.resp___170864 = (r0);
    s.tmp_1 = pins_unpackBuffer__P164991_mk(s);
    s.tmp_1.arg0 = "<H";
    r0 = pxsim_Array__getAt(s.resp___170864, 0);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = 0;
    s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, 0);
    s.reply___170869 = (r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    if ((s.reply___170869) && (s.reply___170869).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.reply___170869);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.reply___170869) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("ESPSocket: ", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, " bytes available");
    s.tmp_0.arg0 = r0;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.reply___170869;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketAvailable__P165574.info = {"start":21684,"length":346,"line":610,"column":8,"endLine":616,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketAvailable","argumentNames":["this","socket_num"]}

function esp32_NinaController_socketAvailable__P165574_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketAvailable__P165574, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  resp___170864: undefined,
  reply___170869: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function esp32_NinaController_socketWrite__P165573(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    s.resp___170896 = undefined;
    s.sent___170903 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, esp32_NinaController__C165533_VT)) failedCast(r0);
    s.tmp_0 = net_debug__P165358_mk(s);
    r0 = pxsim.BufferMethods.length(s.arg2);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 6);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("Writing:", s.tmp_1);
    s.tmp_0.arg0 = r0;
    s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.setByte(s.tmp_0, 0, s.arg1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim_Array__push(s.tmp_0, s.arg2);
    s.tmp_3 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 68;
    s.tmp_3.arg2 = s.tmp_0;
    s.tmp_3.arg3 = 1;
    s.tmp_3.arg4 = true;
    s.tmp_3.arg5 = false;
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.resp___170896 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170896, 0);
    s.tmp_0 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, 0);
    s.sent___170903 = (r0);
    s.tmp_1 = r0 = s.sent___170903;
    r0 = pxsim.BufferMethods.length(s.arg2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    r0 = pxsim.BufferMethods.length(s.arg2);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat("failed to send ", s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, " bytes (sent ");
    s.tmp_5 = r0;
    if ((s.sent___170903) && (s.sent___170903).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.sent___170903);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.sent___170903) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_9);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")");
    s.tmp_3.arg0 = r0;
    s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
  case 1:
  case 2:
    s.tmp_0 = esp32_NinaController_sendCommandGetResponse__P165545_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 42;
    r0 = s.arg0.fields["_socknum_ll"];
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = false;
    s.tmp_0.arg5 = false;
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.resp___170896 = (r0);
    r0 = pxsim_Array__getAt(s.resp___170896, 0);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getByte(s.tmp_2, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = net_fail__P165359_mk(s);
    s.tmp_3.arg0 = "failed to verify data sent";
    s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
esp32_NinaController_socketWrite__P165573.info = {"start":20922,"length":675,"line":593,"column":8,"endLine":607,"endColumn":9,"fileName":"pxt_modules/esp32/ninacontroller.ts","functionName":"socketWrite","argumentNames":["this","socket_num","buffer"]}

function esp32_NinaController_socketWrite__P165573_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: esp32_NinaController_socketWrite__P165573, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  resp___170896: undefined,
  sent___170903: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function net_Controller_hostbyName__P165321(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
net_Controller_hostbyName__P165321.info = {"start":744,"length":85,"line":30,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"hostbyName","argumentNames":["this","hostname"]}

function net_Controller_hostbyName__P165321_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_hostbyName__P165321, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function net_Controller_isConnected__P165323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = false;
    return leaveAccessor(s, r0)
  default: oops()
} } }
net_Controller_isConnected__P165323.info = {"start":886,"length":44,"line":34,"column":8,"endLine":34,"endColumn":52,"fileName":"pxt_modules/net/controller.ts","functionName":"isConnected","argumentNames":["this"]}
net_Controller_isConnected__P165323.isGetter = true;

function net_Controller_isConnected__P165323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_isConnected__P165323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function net_Controller_scanNetworks__P165314(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0)) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, net_Controller__C165313_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    return leave(s, r0)
  default: oops()
} } }
net_Controller_scanNetworks__P165314.info = {"start":81,"length":75,"line":4,"column":8,"endLine":6,"endColumn":9,"fileName":"pxt_modules/net/controller.ts","functionName":"scanNetworks","argumentNames":["this"]}

function net_Controller_scanNetworks__P165314_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: net_Controller_scanNetworks__P165314, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }




function if_connect_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_ping_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_displayedValue_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_type_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_topic_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_content_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_send_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_host_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_port_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_onOpen_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_onMessage_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_onError_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_onClose_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_qos_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_pid_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_func_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_pid_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_clientId_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_will_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_message_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_username_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_password_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_retain_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function net_Controller__C165313_v1_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_close_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_port_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_clientId_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_qos_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_retain_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_factory_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function esp32_NinaController__C165533_v9_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_condition_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function esp32_NinaController__C165533_v7_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function esp32_NinaController__C165533_v8_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function esp32_NinaController__C165533_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function net_Controller__C165313_v6_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if__closeHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if__messageHandler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function net_Controller__C165313_v4_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function net_Controller__C165313_v5_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function net_Controller__C165313_v3_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function net_Controller__C165313_v2_5_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }


function if__openHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if__errorHandler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }

const net_Net__C165364_VT = mkVTable({
  name: "Net",
  numFields: 2,
  classNo: 16,
  lastSubtypeNo: 16,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_controller": null,
    "set/_controller": null,
    "factory": null,
    "set/factory": null,
    "controller": net_Net_controller__P165365,
    "createSocket": net_Net_createSocket__P165367,
  },
});
const mqtt_EventEmitter__C165600_VT = mkVTable({
  name: "EventEmitter",
  numFields: 1,
  classNo: 17,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "on": mqtt_EventEmitter_on__P165601,
    "emit": mqtt_EventEmitter_emit__P165602,
  },
});
const mqtt_Client__C165606_VT = mkVTable({
  name: "Client",
  numFields: 10,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "logPriority": null,
    "set/logPriority": null,
    "opt": null,
    "set/opt": null,
    "net": null,
    "set/net": null,
    "sct": null,
    "set/sct": null,
    "wdId": null,
    "set/wdId": null,
    "piId": null,
    "set/piId": null,
    "buf": null,
    "set/buf": null,
    "connected": null,
    "set/connected": null,
    "mqttHandlers": null,
    "set/mqttHandlers": null,
    "log": mqtt_Client_log__P165608,
    "describe": mqtt_Client_describe__P165609,
    "disconnect": mqtt_Client_disconnect__P165610,
    "connect": mqtt_Client_connect__P165611,
    "publish": mqtt_Client_publish__P165612,
    "subscribe": mqtt_Client_subscribe__P165613,
    "send": mqtt_Client_send__P165614,
    "handleMessage": mqtt_Client_handleMessage__P165615,
    "ping": mqtt_Client_ping__P165616,
    "on": mqtt_EventEmitter_on__P165601,
    "emit": mqtt_EventEmitter_emit__P165602,
  },
});
const JSON_Parser__C165120_VT = mkVTable({
  name: "Parser",
  numFields: 3,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "ptr": null,
    "set/ptr": null,
    "s": null,
    "set/s": null,
    "errorMsg": null,
    "set/errorMsg": null,
    "error": JSON_Parser_error__P165121,
    "skipWS": JSON_Parser_skipWS__P165122,
    "nextChar": JSON_Parser_nextChar__P165123,
    "doString": JSON_Parser_doString__P165124,
    "doArray": JSON_Parser_doArray__P165125,
    "doObject": JSON_Parser_doObject__P165126,
    "doNumber": JSON_Parser_doNumber__P165127,
    "checkKw": JSON_Parser_checkKw__P165128,
    "value": JSON_Parser_value__P165129,
  },
});
const mqtt_MQTTHandler__C165604_VT = mkVTable({
  name: "MQTTHandler",
  numFields: 2,
  classNo: 20,
  lastSubtypeNo: 20,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "topic": null,
    "set/topic": null,
    "handler": null,
    "set/handler": null,
  },
});
const settings_SecretStore__C165302_VT = mkVTable({
  name: "SecretStore",
  numFields: 1,
  classNo: 21,
  lastSubtypeNo: 21,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "key": null,
    "set/key": null,
    "readSecret": settings_SecretStore_readSecret__P165305,
    "readSecrets": settings_SecretStore_readSecrets__P165307,
  },
});
const control_Interval__C165089_VT = mkVTable({
  name: "Interval",
  numFields: 4,
  classNo: 22,
  lastSubtypeNo: 22,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "func": null,
    "set/func": null,
    "delay": null,
    "set/delay": null,
    "mode": null,
    "set/mode": null,
    "work": control_Interval_work__P165090,
    "cancel": control_Interval_cancel__P165091,
  },
});
const net_ControllerSocket__C165341_VT = mkVTable({
  name: "ControllerSocket",
  numFields: 12,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_buffer": null,
    "set/_buffer": null,
    "_socknum": null,
    "set/_socknum": null,
    "_timeout": null,
    "set/_timeout": null,
    "_closed": null,
    "set/_closed": null,
    "_openHandler": null,
    "set/_openHandler": null,
    "_closeHandler": null,
    "set/_closeHandler": null,
    "_errorHandler": null,
    "set/_errorHandler": null,
    "_messageHandler": null,
    "set/_messageHandler": null,
    "controller": null,
    "set/controller": null,
    "host": null,
    "set/host": null,
    "port": null,
    "set/port": null,
    "conntype": null,
    "set/conntype": null,
    "connect": net_ControllerSocket_connect__P165342,
    "send": net_ControllerSocket_send__P165343,
    "error": net_ControllerSocket_error__P165344,
    "onOpen": net_ControllerSocket_onOpen__P165345,
    "onClose": net_ControllerSocket_onClose__P165346,
    "onError": net_ControllerSocket_onError__P165347,
    "onMessage": net_ControllerSocket_onMessage__P165348,
    "read": net_ControllerSocket_read__P165350,
    "setTimeout": net_ControllerSocket_setTimeout__P165351,
    "close": net_ControllerSocket_close__P165352,
  },
});
const net_Controller__C165313_VT = mkVTable({
  name: "Controller",
  numFields: 0,
  classNo: 24,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
    "scanNetworks": net_Controller_scanNetworks__P165314,
    "socket": net_Controller_socket__P165315,
    "socketConnect": net_Controller_socketConnect__P165316,
    "socketWrite": net_Controller_socketWrite__P165317,
    "socketAvailable": net_Controller_socketAvailable__P165318,
    "socketRead": net_Controller_socketRead__P165319,
    "socketClose": net_Controller_socketClose__P165320,
    "hostbyName": net_Controller_hostbyName__P165321,
    "isConnected": net_Controller_isConnected__P165323,
    "connect": net_Controller_connect__P165324,
    "ping": net_Controller_ping__P165327,
  },
  iface: {
    "scanNetworks": net_Controller_scanNetworks__P165314,
    "socket": net_Controller_socket__P165315,
    "socketConnect": net_Controller_socketConnect__P165316,
    "socketWrite": net_Controller_socketWrite__P165317,
    "socketAvailable": net_Controller_socketAvailable__P165318,
    "socketRead": net_Controller_socketRead__P165319,
    "socketClose": net_Controller_socketClose__P165320,
    "hostbyName": net_Controller_hostbyName__P165321,
    "isConnected": net_Controller_isConnected__P165323,
    "connect": net_Controller_connect__P165324,
    "ping": net_Controller_ping__P165327,
  },
});
const JSON_Stringifier__C165130_VT = mkVTable({
  name: "Stringifier",
  numFields: 3,
  classNo: 26,
  lastSubtypeNo: 26,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "currIndent": null,
    "set/currIndent": null,
    "indentStep": null,
    "set/indentStep": null,
    "indent": null,
    "set/indent": null,
    "doString": JSON_Stringifier_doString__P165131,
    "go": JSON_Stringifier_go__P165132,
  },
});
const esp32_NinaController__C165533_VT = mkVTable({
  name: "NinaController",
  numFields: 8,
  classNo: 25,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
    "scanNetworks": esp32_NinaController_scanNetworks__P165551,
    "socket": esp32_NinaController_socket__P165569,
    "socketConnect": esp32_NinaController_socketConnect__P165576,
    "socketWrite": esp32_NinaController_socketWrite__P165573,
    "socketAvailable": esp32_NinaController_socketAvailable__P165574,
    "socketRead": esp32_NinaController_socketRead__P165575,
    "socketClose": esp32_NinaController_socketClose__P165577,
    "hostbyName": esp32_NinaController_hostbyName__P165567,
    "isConnected": esp32_NinaController_isConnected__P165563,
    "connect": esp32_NinaController_connect__P165565,
    "ping": esp32_NinaController_ping__P165568,
  },
  iface: {
    "_socknum_ll": null,
    "set/_socknum_ll": null,
    "_locked": null,
    "set/_locked": null,
    "wasConnected": null,
    "set/wasConnected": null,
    "_spi": null,
    "set/_spi": null,
    "_cs": null,
    "set/_cs": null,
    "_busy": null,
    "set/_busy": null,
    "_reset": null,
    "set/_reset": null,
    "_gpio0": null,
    "set/_gpio0": null,
    "reset": esp32_NinaController_reset__P165535,
    "readByte": esp32_NinaController_readByte__P165536,
    "checkData": esp32_NinaController_checkData__P165537,
    "waitSPIChar": esp32_NinaController_waitSPIChar__P165538,
    "waitForReady": esp32_NinaController_waitForReady__P165539,
    "_sendCommand": esp32_NinaController__sendCommand__P165540,
    "spiTransfer": esp32_NinaController_spiTransfer__P165541,
    "_waitResponseCmd": esp32_NinaController__waitResponseCmd__P165542,
    "lock": esp32_NinaController_lock__P165543,
    "unlock": esp32_NinaController_unlock__P165544,
    "sendCommandGetResponse": esp32_NinaController_sendCommandGetResponse__P165545,
    "status": esp32_NinaController_status__P165546,
    "startScanNetworks": esp32_NinaController_startScanNetworks__P165549,
    "getScanNetworks": esp32_NinaController_getScanNetworks__P165550,
    "scanNetworks": esp32_NinaController_scanNetworks__P165551,
    "wifiSetNetwork": esp32_NinaController_wifiSetNetwork__P165552,
    "wifiSetPassphrase": esp32_NinaController_wifiSetPassphrase__P165553,
    "isConnected": esp32_NinaController_isConnected__P165563,
    "connect": esp32_NinaController_connect__P165565,
    "connectAP": esp32_NinaController_connectAP__P165566,
    "hostbyName": esp32_NinaController_hostbyName__P165567,
    "ping": esp32_NinaController_ping__P165568,
    "socket": esp32_NinaController_socket__P165569,
    "socketOpen": esp32_NinaController_socketOpen__P165570,
    "socketStatus": esp32_NinaController_socketStatus__P165571,
    "socket_connected": esp32_NinaController_socket_connected__P165572,
    "socketWrite": esp32_NinaController_socketWrite__P165573,
    "socketAvailable": esp32_NinaController_socketAvailable__P165574,
    "socketRead": esp32_NinaController_socketRead__P165575,
    "socketConnect": esp32_NinaController_socketConnect__P165576,
    "socketClose": esp32_NinaController_socketClose__P165577,
  },
});
const control_PollEvent__C165098_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 27,
  lastSubtypeNo: 27,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const control_EventContext__C165143_VT = mkVTable({
  name: "EventContext",
  numFields: 9,
  classNo: 28,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "registerHandler": control_EventContext_registerHandler__P165151,
  },
});
const control_EventHandler__C165138_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 29,
  lastSubtypeNo: 29,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P165139,
  },
});
const net_AccessPoint__C165361_VT = mkVTable({
  name: "AccessPoint",
  numFields: 3,
  classNo: 30,
  lastSubtypeNo: 30,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "rssi": null,
    "set/rssi": null,
    "encryption": null,
    "set/encryption": null,
    "ssid": null,
    "set/ssid": null,
  },
});

const breakpoints = setupDebugger(1, ["_methodHandlers___165625","logPriority___165621","_mqttClient___165622","_messageBusId___165623","SECRETS_KEY___165618","_receiveHandler___165624"])

return _main___P164859
})
